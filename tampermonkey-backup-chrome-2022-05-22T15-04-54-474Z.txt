{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"CSDNËá™Âä®Â±ïÂºÄ+ÂéªÂπøÂëä+ÂáÄÂåñÂâ™Ë¥¥Êùø+ÂÖçÁôªÈôÜ","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://blog.csdn.net/*/article/details/*","*://*.blog.csdn.net/article/details/*","*://bbs.csdn.net/topics/*","*://*.iteye.com/blog/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1586223185439,"data":{}},"enabled":false,"position":1,"file_url":"https://greasyfork.org/scripts/372452-csdn%E8%87%AA%E5%8A%A8%E5%B1%95%E5%BC%80-%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%87%80%E5%8C%96%E5%89%AA%E8%B4%B4%E6%9D%BF-%E5%85%8D%E7%99%BB%E9%99%86/code/CSDN%E8%87%AA%E5%8A%A8%E5%B1%95%E5%BC%80+%E5%8E%BB%E5%B9%BF%E5%91%8A+%E5%87%80%E5%8C%96%E5%89%AA%E8%B4%B4%E6%9D%BF+%E5%85%8D%E7%99%BB%E9%99%86.user.js","uuid":"db7405e9-1bca-4e16-ade2-0f0d72097463","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDU0RO6Ieq5Yqo5bGV5byAK+WOu+W5v+WRiivlh4DljJbliarotLTmnb8r5YWN55m76ZmGCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4zLjIKLy8gQGRlc2NyaXB0aW9uICBJVGV5ZSBDU0RO6Ieq5Yqo5bGV5byA6ZiF6K+777yM5Y+v5Lul5bCG5Ymq6LS05p2/55qE5o6o5bm/5L+h5oGv5Y676Zmk77yM5Y676Zmk5aSn5aSa5pWw5bm/5ZGK44CCCi8vIEBhdXRob3IgICAgICAgd2hvYW1pCi8vIEBtYXRjaCAgICAgICAgKjovL2Jsb2cuY3Nkbi5uZXQvKi9hcnRpY2xlL2RldGFpbHMvKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLyoKLy8gQG1hdGNoICAgICAgICAqOi8vYmJzLmNzZG4ubmV0L3RvcGljcy8qCi8vIEBtYXRjaCAgICAgICAgKjovLyouaXRleWUuY29tL2Jsb2cvKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQGljb24gICAgICAgICBodHRwczovL2NzZG5pbWcuY24vcHVibGljL2Zhdmljb24uaWNvCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtZW5kCi8vID09L1VzZXJTY3JpcHQ9PQoKCi8vIOagueaNrue9kemAn+iHquW3seiuvue9ruaXtumXtOmXtOmalAp2YXIgaW50ZXJ2YWwgPSAzMDAwOwp2YXIgc2lkZUludGVydmFsID0gNDAwMDsKdmFyIGJic0ludGVydmFsID0gMzAwMDsgLy8g5ZyoQURCbG9ja+S5i+WQjui/kOihjAp2YXIgaXRleWVJbnRlcnZhbCA9IDEwMDsKCihmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgY3VycmVudFVSTCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgdmFyIGJsb2cgPSAvYXJ0aWNsZS87CiAgICB2YXIgYmJzID0gL3RvcGljcy87CiAgICB2YXIgaXRleWUgPSAvaXRleWUvOwogICAgLy/oi6XkuLpDU0RO6K665Z2bLOWIme+8mgogICAgaWYoYmJzLnRlc3QoY3VycmVudFVSTCkpewogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkKCIuanNfc2hvd190b3BpYyIpLmNsaWNrKCk7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInB1bGxsb2ctYm94IilbMF0ucmVtb3ZlKCk7IC8vIOW6lemDqOW5v+WRigogICAgICAgICAgICAkKCIubWVkaWF2X2FkIikucmVtb3ZlKCk7ICAgICAgIC8vIOW4luWtkOWwvumDqOW5v+WRigogICAgICAgICAgICAkKCIucG9zdF9yZWNvbW1lbmQiKS5yZW1vdmUoKTsgIC8vIOW4luWtkOWGhVtDU0RO5o6o6I2QXQogICAgICAgICAgICAkKCIuYWRfaXRlbSIpLnJlbW92ZSgpOyAvLyDlj7Pkvqflub/lkYoKICAgICAgICB9LCBiYnNJbnRlcnZhbCk7CiAgICB9ZWxzZSBpZiAoYmxvZy50ZXN0KGN1cnJlbnRVUkwpKXsKICAgICAgICBjc2RuLmNvcHlyaWdodC5pbml0KCIiLCAiIiwgIiIpOyAvL+WOu+mZpOWJqui0tOadv+WKq+aMgQogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJhbm9ueW1vdXNVc2VyTGltaXQiLCAiIik7IC8vIOWFjeeZu+mZhgogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJidG4tcmVhZG1vcmUiKVswXSl7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJ0bi1yZWFkbW9yZSIpWzBdLmNsaWNrKCk7CiAgICAgICAgfSAvL+iHquWKqOWxleW8gAogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJoaWRlLWFydGljbGUtYm94IilbMF0pewogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJoaWRlLWFydGljbGUtYm94IilbMF0ucmVtb3ZlKCk7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjb250ZW50X3ZpZXdzIikuc2V0QXR0cmlidXRlKCJzdHlsZSIsICJ1c2VyLXNlbGVjdDogdGV4dDsiKQogICAgICAgIH0gLy/np7vpmaTkuJPmoI8KICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY29tbWVudC1saXN0LWJveCIpWzBdKXsKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY29tbWVudC1saXN0LWJveCIpWzBdLnJlbW92ZUF0dHJpYnV0ZSgic3R5bGUiKTsKICAgICAgICB9IC8v6Ieq5Yqo5bGV5byACiAgICAgICAgJCgiI2NvbnRlbnRfdmlld3MiKS51bmJpbmQoImNsaWNrIik7Ly/np7vpmaR1cmzmi6bmiKoKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImNzZG4tdHJhY2tpbmctc3RhdGlzdGljcyBtYjggYm94LXNoYWRvdyIpWzBdKSB7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjc2RuLXRyYWNraW5nLXN0YXRpc3RpY3MgbWI4IGJveC1zaGFkb3ciKVswXS5yZW1vdmUoKTsgLy/lt6bkuIrlub/lkYoKICAgICAgICAgICAgfQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYXNpZGVGb290ZXIiKS5yZW1vdmUoKTsKICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhZENvbnRlbnQiKSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImFkQ29udGVudCIpLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJwNGNvdXJzZV90YXJnZXQiKVswXSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicDRjb3Vyc2VfdGFyZ2V0IilbMF0ucmVtb3ZlKCk7IC8v5bem5LiK5bm/5ZGKCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiYmRzaGFyZWJ1dHRvbmJveCIpWzBdLnJlbW92ZSgpOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJ2aXAtY2Fpc2UiKVswXS5yZW1vdmUoKTsKICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZvdXJ0aF9jb2x1bW4iKVswXSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm91cnRoX2NvbHVtbiIpWzBdLnJlbW92ZSgpOyAvL+W3puS4iuW5v+WRigogICAgICAgICAgICB9CiAgICAgICAgfSwgaW50ZXJ2YWwpOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoJCgiZGl2W2lkXj0nZG1wX2FkJ10iKVswXSkgewogICAgICAgICAgICAgICAgJCgiZGl2W2lkXj0nZG1wX2FkJ10iKVswXS5yZW1vdmUoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm91cnRoX2NvbHVtbiIpWzBdKSB7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmb3VydGhfY29sdW1uIilbMF0ucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9LCBzaWRlSW50ZXJ2YWwpOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicHVsbGxvZy1ib3giKVswXSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicHVsbGxvZy1ib3giKVswXS5yZW1vdmUoKTsgLy8g5bqV6YOo5bm/5ZGKCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIHJlY29tbWVuZE9iaiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInJlY29tbWVuZC1maXhlZC1ib3giKVswXS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJyaWdodC1pdGVtIik7CiAgICAgICAgICAgIGZvciAodmFyIGggPSAocmVjb21tZW5kT2JqLmxlbmd0aCAtIDEpOyBoPj0wOyBoLS0pIHsKICAgICAgICAgICAgICAgIGlmIChyZWNvbW1lbmRPYmpbaF0udGFnTmFtZSA9PSAiRElWIikgewogICAgICAgICAgICAgICAgICAgIHJlY29tbWVuZE9ialtoXS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicDRjb3Vyc2VfdGFyZ2V0IilbMF0pIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInA0Y291cnNlX3RhcmdldCIpWzBdLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgc2lkZUludGVydmFsKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIGhvdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInR5cGVfaG90X3dvcmQiKTsKICAgICAgICAgICAgdmFyIHJlY29tbWVuZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInJlY29tbWVuZC1hZC1ib3giKTsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IChob3QubGVuZ3RoIC0gMSk7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICAgICAgICBob3RbaV0ucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm9yICh2YXIgaiA9IChyZWNvbW1lbmQubGVuZ3RoIC0gMSk7IGogPj0gMDsgai0tKSB7CiAgICAgICAgICAgICAgICByZWNvbW1lbmRbal0ucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZvdXJ0aF9jb2x1bW4iKVswXSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm91cnRoX2NvbHVtbiIpWzBdLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgc2lkZUludGVydmFsKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZm9yKHZhciB4PTQ3MDsgeDw0OTA7IHgrKyl7CiAgICAgICAgICAgICAgICB2YXIga3BfYm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImtwX2JveF8iK3gpOyAvL+WPs+S+p+W5v+WRigogICAgICAgICAgICAgICAgaWYoa3BfYm94KSB7CiAgICAgICAgICAgICAgICAgICAga3BfYm94LnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwgNTAwMCk7CiAgICB9IGVsc2UgaWYgKGl0ZXllLnRlc3QoY3VycmVudFVSTCkpIHsKICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbigpewogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuLXJlYWRtb3JlJykuY2xpY2soKTsKICAgICAgICB9LCBpdGV5ZUludGVydmFsKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiYmxvZy1zaWRlYmFyIilbMF0ucmVtb3ZlKCk7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykuc3R5bGUud2lkdGggPSAnMTAwMHB4JzsKICAgICAgICB9LCBzaWRlSW50ZXJ2YWwpOwogICAgfQp9KSgpOw=="},{"name":"üî•ÊåÅÁª≠Êõ¥Êñ∞üî• CSDNÂπøÂëäÂÆåÂÖ®ËøáÊª§„ÄÅ‰∫∫ÊÄßÂåñËÑöÊú¨‰ºòÂåñÔºöüÜï ‰∏çÁî®ÂÜçÁôªÂΩï‰∫ÜÔºÅËÆ©‰Ω†‰ΩìÈ™å‰ª§‰∫∫ÊÉäÂñúÁöÑÂ¥≠Êñ∞CSDN„ÄÇ","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1586223185455,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/378351-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-csdn%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4-%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96-%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86-%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0csdn/code/%F0%9F%94%A5%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%F0%9F%94%A5%20CSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%E3%80%81%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96%EF%BC%9A%F0%9F%86%95%20%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86%EF%BC%81%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0CSDN%E3%80%82.user.js","uuid":"9d682dd6-e67b-431e-9a6b-5efd3aa1278e","source":"","requires":[{"meta":{"name":"jquery.cookie.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js","ts":1652969227607,"mimetype":"text/javascript"},"source":"LyohCiAqIGpRdWVyeSBDb29raWUgUGx1Z2luIHYxLjQuMQogKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZQogKgogKiBDb3B5cmlnaHQgMjAxMyBLbGF1cyBIYXJ0bAogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKICovCihmdW5jdGlvbiAoZmFjdG9yeSkgewoJaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewoJCS8vIEFNRAoJCWRlZmluZShbJ2pxdWVyeSddLCBmYWN0b3J5KTsKCX0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CgkJLy8gQ29tbW9uSlMKCQlmYWN0b3J5KHJlcXVpcmUoJ2pxdWVyeScpKTsKCX0gZWxzZSB7CgkJLy8gQnJvd3NlciBnbG9iYWxzCgkJZmFjdG9yeShqUXVlcnkpOwoJfQp9KGZ1bmN0aW9uICgkKSB7CgoJdmFyIHBsdXNlcyA9IC9cKy9nOwoKCWZ1bmN0aW9uIGVuY29kZShzKSB7CgkJcmV0dXJuIGNvbmZpZy5yYXcgPyBzIDogZW5jb2RlVVJJQ29tcG9uZW50KHMpOwoJfQoKCWZ1bmN0aW9uIGRlY29kZShzKSB7CgkJcmV0dXJuIGNvbmZpZy5yYXcgPyBzIDogZGVjb2RlVVJJQ29tcG9uZW50KHMpOwoJfQoKCWZ1bmN0aW9uIHN0cmluZ2lmeUNvb2tpZVZhbHVlKHZhbHVlKSB7CgkJcmV0dXJuIGVuY29kZShjb25maWcuanNvbiA/IEpTT04uc3RyaW5naWZ5KHZhbHVlKSA6IFN0cmluZyh2YWx1ZSkpOwoJfQoKCWZ1bmN0aW9uIHBhcnNlQ29va2llVmFsdWUocykgewoJCWlmIChzLmluZGV4T2YoJyInKSA9PT0gMCkgewoJCQkvLyBUaGlzIGlzIGEgcXVvdGVkIGNvb2tpZSBhcyBhY2NvcmRpbmcgdG8gUkZDMjA2OCwgdW5lc2NhcGUuLi4KCQkJcyA9IHMuc2xpY2UoMSwgLTEpLnJlcGxhY2UoL1xcIi9nLCAnIicpLnJlcGxhY2UoL1xcXFwvZywgJ1xcJyk7CgkJfQoKCQl0cnkgewoJCQkvLyBSZXBsYWNlIHNlcnZlci1zaWRlIHdyaXR0ZW4gcGx1c2VzIHdpdGggc3BhY2VzLgoJCQkvLyBJZiB3ZSBjYW4ndCBkZWNvZGUgdGhlIGNvb2tpZSwgaWdub3JlIGl0LCBpdCdzIHVudXNhYmxlLgoJCQkvLyBJZiB3ZSBjYW4ndCBwYXJzZSB0aGUgY29va2llLCBpZ25vcmUgaXQsIGl0J3MgdW51c2FibGUuCgkJCXMgPSBkZWNvZGVVUklDb21wb25lbnQocy5yZXBsYWNlKHBsdXNlcywgJyAnKSk7CgkJCXJldHVybiBjb25maWcuanNvbiA/IEpTT04ucGFyc2UocykgOiBzOwoJCX0gY2F0Y2goZSkge30KCX0KCglmdW5jdGlvbiByZWFkKHMsIGNvbnZlcnRlcikgewoJCXZhciB2YWx1ZSA9IGNvbmZpZy5yYXcgPyBzIDogcGFyc2VDb29raWVWYWx1ZShzKTsKCQlyZXR1cm4gJC5pc0Z1bmN0aW9uKGNvbnZlcnRlcikgPyBjb252ZXJ0ZXIodmFsdWUpIDogdmFsdWU7Cgl9CgoJdmFyIGNvbmZpZyA9ICQuY29va2llID0gZnVuY3Rpb24gKGtleSwgdmFsdWUsIG9wdGlvbnMpIHsKCgkJLy8gV3JpdGUKCgkJaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgISQuaXNGdW5jdGlvbih2YWx1ZSkpIHsKCQkJb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBjb25maWcuZGVmYXVsdHMsIG9wdGlvbnMpOwoKCQkJaWYgKHR5cGVvZiBvcHRpb25zLmV4cGlyZXMgPT09ICdudW1iZXInKSB7CgkJCQl2YXIgZGF5cyA9IG9wdGlvbnMuZXhwaXJlcywgdCA9IG9wdGlvbnMuZXhwaXJlcyA9IG5ldyBEYXRlKCk7CgkJCQl0LnNldFRpbWUoK3QgKyBkYXlzICogODY0ZSs1KTsKCQkJfQoKCQkJcmV0dXJuIChkb2N1bWVudC5jb29raWUgPSBbCgkJCQllbmNvZGUoa2V5KSwgJz0nLCBzdHJpbmdpZnlDb29raWVWYWx1ZSh2YWx1ZSksCgkJCQlvcHRpb25zLmV4cGlyZXMgPyAnOyBleHBpcmVzPScgKyBvcHRpb25zLmV4cGlyZXMudG9VVENTdHJpbmcoKSA6ICcnLCAvLyB1c2UgZXhwaXJlcyBhdHRyaWJ1dGUsIG1heC1hZ2UgaXMgbm90IHN1cHBvcnRlZCBieSBJRQoJCQkJb3B0aW9ucy5wYXRoICAgID8gJzsgcGF0aD0nICsgb3B0aW9ucy5wYXRoIDogJycsCgkJCQlvcHRpb25zLmRvbWFpbiAgPyAnOyBkb21haW49JyArIG9wdGlvbnMuZG9tYWluIDogJycsCgkJCQlvcHRpb25zLnNlY3VyZSAgPyAnOyBzZWN1cmUnIDogJycKCQkJXS5qb2luKCcnKSk7CgkJfQoKCQkvLyBSZWFkCgoJCXZhciByZXN1bHQgPSBrZXkgPyB1bmRlZmluZWQgOiB7fTsKCgkJLy8gVG8gcHJldmVudCB0aGUgZm9yIGxvb3AgaW4gdGhlIGZpcnN0IHBsYWNlIGFzc2lnbiBhbiBlbXB0eSBhcnJheQoJCS8vIGluIGNhc2UgdGhlcmUgYXJlIG5vIGNvb2tpZXMgYXQgYWxsLiBBbHNvIHByZXZlbnRzIG9kZCByZXN1bHQgd2hlbgoJCS8vIGNhbGxpbmcgJC5jb29raWUoKS4KCQl2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZSA/IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKSA6IFtdOwoKCQlmb3IgKHZhciBpID0gMCwgbCA9IGNvb2tpZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CgkJCXZhciBwYXJ0cyA9IGNvb2tpZXNbaV0uc3BsaXQoJz0nKTsKCQkJdmFyIG5hbWUgPSBkZWNvZGUocGFydHMuc2hpZnQoKSk7CgkJCXZhciBjb29raWUgPSBwYXJ0cy5qb2luKCc9Jyk7CgoJCQlpZiAoa2V5ICYmIGtleSA9PT0gbmFtZSkgewoJCQkJLy8gSWYgc2Vjb25kIGFyZ3VtZW50ICh2YWx1ZSkgaXMgYSBmdW5jdGlvbiBpdCdzIGEgY29udmVydGVyLi4uCgkJCQlyZXN1bHQgPSByZWFkKGNvb2tpZSwgdmFsdWUpOwoJCQkJYnJlYWs7CgkJCX0KCgkJCS8vIFByZXZlbnQgc3RvcmluZyBhIGNvb2tpZSB0aGF0IHdlIGNvdWxkbid0IGRlY29kZS4KCQkJaWYgKCFrZXkgJiYgKGNvb2tpZSA9IHJlYWQoY29va2llKSkgIT09IHVuZGVmaW5lZCkgewoJCQkJcmVzdWx0W25hbWVdID0gY29va2llOwoJCQl9CgkJfQoKCQlyZXR1cm4gcmVzdWx0OwoJfTsKCgljb25maWcuZGVmYXVsdHMgPSB7fTsKCgkkLnJlbW92ZUNvb2tpZSA9IGZ1bmN0aW9uIChrZXksIG9wdGlvbnMpIHsKCQlpZiAoJC5jb29raWUoa2V5KSA9PT0gdW5kZWZpbmVkKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCS8vIE11c3Qgbm90IGFsdGVyIG9wdGlvbnMsIHRodXMgZXh0ZW5kaW5nIGEgZnJlc2ggb2JqZWN0Li4uCgkJJC5jb29raWUoa2V5LCAnJywgJC5leHRlbmQoe30sIG9wdGlvbnMsIHsgZXhwaXJlczogLTEgfSkpOwoJCXJldHVybiAhJC5jb29raWUoa2V5KTsKCX07Cgp9KSk7Cg=="},{"meta":{"name":"nprogress.js","url":"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.js","ts":1652969227609,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"clipboard.min.js","url":"https://cdn.bootcdn.net/ajax/libs/clipboard.js/2.0.8/clipboard.min.js","ts":1652969227608,"mimetype":"text/javascript"},"source":""}]},{"name":"CSDNÈòÖËØª‰ºòÂåñ+ÂπøÂëäÂéªÈô§","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://blog.csdn.net/*/article/details/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1586223185459,"data":{}},"enabled":false,"position":3,"file_url":"https://greasyfork.org/scripts/381990-csdn%E9%98%85%E8%AF%BB%E4%BC%98%E5%8C%96-%E5%B9%BF%E5%91%8A%E5%8E%BB%E9%99%A4/code/CSDN%E9%98%85%E8%AF%BB%E4%BC%98%E5%8C%96+%E5%B9%BF%E5%91%8A%E5%8E%BB%E9%99%A4.user.js","uuid":"8b50a1ef-10e2-4703-b34c-fb095f96e7b6","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDU0RO6ZiF6K+75LyY5YyWK+W5v+WRiuWOu+mZpAovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDAuOAovLyBAZGVzY3JpcHRpb24gIENTRE7pobXpnaLlpKrkubHlpKrmnYLvvIzov5nkuKrohJrmnKzljrvmjolDU0RO5bem5Y+z5Lik5qCP5bm/5ZGK77yM6K6p6aG16Z2i6Ieq55Sx5bGV5byA77yM5LyY5YyW6ZiF6K+75L2T6aqM44CC5bm25LiU5Y675o6J5omA5pyJ55qE5bm/5ZGK77yM5riF55CG5Ymq5YiH5p2/44CCCi8vIEBhdXRob3IgICAgICAgSHVhbmdmdQovLyBAaW5jbHVkZSAgICAgIGh0dHBzOi8vYmxvZy5jc2RuLm5ldC8qL2FydGljbGUvZGV0YWlscy8qCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCi8v5Y675o6JY3NkbuW5v+WRiueahOS4gOS4quiEmuacrAooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBmdW5jdGlvbiByZW1vdmUoYWRkKXsKICAgICAgICB0cnl7CiAgICAgICAgICAgIGFkZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGFkZCk7CiAgICAgICAgfWNhdGNoKGUpewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICB9CiAgICAvL+enu+mZpOW3puagjwogICAgdmFyIHRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhc2lkZSIpOwogICAgcmVtb3ZlKHRhZ1swXSk7CiAgICAvL+enu+mZpOWPs+S4pOagjwogICAgdmFyIHJlY29tbWVuZF9yaWdodCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInJlY29tbWVuZC1yaWdodCIpOwogICAgcmVtb3ZlKHJlY29tbWVuZF9yaWdodFswXSk7CiAgICAvL+iuvue9ruS4u+eql+WPo+mAguW6lOWuvemrmAogICAgdmFyIG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgibWFpbiIpOwogICAgbWFpbiA9IG1haW5bMF07IG1haW4uc3R5bGUgPSAid2lkdGggOiA5MHZ3ICFpbXBvcnRhbnQ7IHBvc2l0aW9uOiBhYnNvbHV0ZTtsZWZ0OiA1dnc7IjsKICAgIC8v5Y675o6J5bqV5LiL55qE5bm/5ZGKCiAgICB2YXIgYnRuX2FkZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm1lZGlhdl9hZCIpOwogICAgd2hpbGUoYnRuX2FkZC5sZW5ndGghPTApewogICAgICAgIHJlbW92ZShidG5fYWRkWzBdKTsKICAgIH0KICAgIC8v5Y675o6J5bel5YW35qCPCiAgICB2YXIgYm90dG9uYmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgidG9vbC1ib3giKTsKICAgIHJlbW92ZShib3R0b25iYXJbMF0pOwogICAgdmFyIGZsb2F0YmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibWVhdS1nb3RvcC1ib3giKTsKICAgIHJlbW92ZShmbG9hdGJhclswXSk7CiAgICAvL+WOu+aOieW6leS4i+iDveWOu+eahOW5v+WRigogICAgdmFyIGFkZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJyZWNvbW1lbmQtYWQtYm94Iik7CiAgICB3aGlsZSAoYWRkcy5sZW5ndGghPTApewogICAgICAgIHJlbW92ZShhZGRzWzBdKTsKICAgIH0KICAgIC8v5rKh55m76ZmG55qE5pe25YCZ5bqV5LiL5pyJ55m76ZmG5bm/5ZGK77yM5Y675o6JCiAgICB2YXIgYnRuX2JhciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInB1bGxsb2ctYm94Iik7CiAgICByZW1vdmUoYnRuX2JhclswXSk7CiAgICAvL+WxleW8gOmYheivu+abtOWkmgogICAgdmFyIGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJ0bi1yZWFkbW9yZSIpWzBdOwogICAgaWYoYnRuIT11bmRlZmluZWQpIGJ0bi5jbGljaygpOwogICAgLy/ljrvmjonnspjotLTml7bnmoTmjqjlub/kv6Hmga8KICAgIGNzZG4uY29weXJpZ2h0LmluaXQoIiIsIiIpOwogICAgLy/lvZPmnInmjqjojZDmoI/ml7bvvIzljrvmjonlj6rmnInnmbvpmYbmiY3og73lsZXlvIAKICAgIAoKfSkoKTs="},{"name":"‰ªéË∞∑Ê≠å ÁôæÂ∫¶ ÂøÖÂ∫îÊêúÁ¥¢ÁªìÊûú‰∏≠Â±èËîΩËá™ÂÆö‰πâÂÖ≥ÈîÆÂ≠ó Â¢ûÂº∫ÁâàÔºàÂü∫‰∫éACÁöÑËÑöÊú¨‰ºòÂåñÔºâ","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://www.baidu.com/*","https://www.baidu.com/*","https://www.google.com/*","/^https?\\:\\/\\/encrypted.google.[^\\/]+/","/^https?\\:\\/\\/www.google.[^\\/]+/","/^https?\\:\\/\\/www.so.com/","/^https?\\:\\/\\/www.youdao.com/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1586223185476,"data":{}},"enabled":true,"position":4,"uuid":"09565721-9d5d-45f8-bd1d-30466a77a13c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUg5LuO6LC35q2MIOeZvuW6piDlv4XlupTmkJzntKLnu5PmnpzkuK3lsY/olL3oh6rlrprkuYnlhbPplK7lrZcg5aKe5by654mI77yI5Z+65LqOQUPnmoTohJrmnKzkvJjljJbvvIkKLy8gQG5hbWVzcGFjZSBCbG9ja0FueVRoaW5nWW91V2FudCBQbHVzCi8vIEBpbmNsdWRlIGh0dHA6Ly93d3cuYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly93d3cuYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8qCi8vIEBpbmNsdWRlIC9eaHR0cHM/XDpcL1wvZW5jcnlwdGVkLmdvb2dsZS5bXlwvXSsvCi8vIEBpbmNsdWRlIC9eaHR0cHM/XDpcL1wvd3d3Lmdvb2dsZS5bXlwvXSsvCi8vIEBpbmNsdWRlIC9eaHR0cHM/XDpcL1wvd3d3LnNvLmNvbS8KLy8gQGluY2x1ZGUgL15odHRwcz9cOlwvXC93d3cueW91ZGFvLmNvbS8KLy8gQHJlcXVpcmUgaHR0cDovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMS44LjAubWluLmpzCi8vIEBpY29uICAgIGh0dHBzOi8vY29kaW5nLm5ldC91L3piMjI3L3AvemJJbWcvZ2l0L3Jhdy9tYXN0ZXIvaW1nMC9pY29uLmpwZwovLyBAYXV0aG9yICAgICAgIHp6aGppbSggQmFzZWQgb24gQUMpCi8vIEB2ZXJzaW9uIDIuMi4xLjE5MTAxMDAxMQovLyBAZGVzY3JpcHRpb24g5Z+65LqOQUPohJrmnKzliLbkvZzvvIzmlrDlop7lpKfph4/lhbPplK7or43vvIzmrKLov47nu5PlkIjmnKzkurrlhbbku5bohJrmnKzkvb/nlKjvvIzlpoLmnInmhI/op4Hor7flj43ppojoh7N6emhqaW1AdmlwLnFxLmNvbe+8iOS5n+WPr+WQkeWOn+S9nOiAheWPjemmiO+8iQovL0BncmFudCBub3RlIDIwMTkuOC4xMyDnrKwyLjLniYggQHp6aGppbe+8muWinuWKoOWkp+mHj+inhOWIme+8jOWvueS4pemHjeW9seWTjeaQnOe0ouS9k+mqjOeahOe9keermeOAgeiQpemUgOWPt+i/m+ihjOWxj+iUvQovL0BncmFudCBub3RlIDIwMTguMS4yMSDnrKwyLjEy54mIIEB6emhqaW3vvJrlop7liqDlr7nkuo7pg6jliIblj43liqjnvZHnq5njgIHnmb7lrrblj7fnmoTlsY/olL0KLy9AZ3JhbnQgbm90ZSAyMDE4LjEuMjEg56ysMi4wOS0yLjEx54mIIEB6emhqaW3vvJrosIPmlbTpg6jliIblhbPplK7or40KLy9AZ3JhbnQgbm90ZSAyMDE3LjguMTIg56ysMi4wNC0yLjA454mIIEB6emhqaW3vvJrkv67lpI3kuIDmibnph43lpKdCVUfvvIzosIPmlbTpg6jliIblhbPplK7or40KLy9AZ3JhbnQgbm90ZSAyMDE3LjguOSDnrKwyLjAyLTIuMDPniYggQHp6aGppbTrlop7liqDpg6jliIblhbPplK7or40KLy9AZ3JhbnQgbm90ZSAyMDE3LjguOCDnrKwyLjAx54mIIEB6emhqaW065aKe5Yig6YOo5YiG5YWz6ZSu6K+N77yM5aKe5by65a+557mB5L2T5oG25oSP572R56uZ55qE5oum5oiqCi8vQGdyYW50IG5vdGUgMjAxNy44LjYg56ysMi4w54mIIEB6emhqaW065Y6f6ISa5pys5bey57uP6K645LmF5rKh5pyJ5pu05paw77yM5oiR5bCG5LiA5Lqb5bi46KeB55qE5oG25oSP572R56uZ5ZCN56ew5Yqg5YWl5LqG6L+b5Y6777yM5L+u5pS55LqGMzYw5pCc57Si55qE572R5Z2A44CC5aaC5p6c6L+Y5pyJ5ZCI6YCC55qE5YWz6ZSu6K+N77yM5qyi6L+O5o+Q5Lqk6K6o6K6644CC77yI5pys6ISa5pys6YWN5ZCIQUPnmoTlhbbku5bohJrmnKzkvb/nlKjmlYjmnpzmm7Tlpb3vvIkKLy9AZ3JhbnQgbm90ZSAyMDE4LjEuMTgg56ysMi4x54mIIEB6emhqaW066LCD5pW06YOo5YiG5YWz6ZSu5a2XCi8vIEBncmFudCBub3RlIDIwMTUuMTEuMjYg56ys5LiA54mI77yM6KeE5YiZ6Ieq5bex5YaZ5ZCn77yM6KeJ5b6X6KaB5Y+N6aaI55qE5YWz6ZSu5a2X5Y+v5Lul5Zyo5Y2h6aWt5Zue5Liq5biW77yM5oiR5ZCI6YCC55qE5Yqg5YWlCi8vID09L1VzZXJTY3JpcHQ9PQoKCi8qCuWPmOmHj3jnlKjkuo4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg55m+5bqmPeiwt+atjD3lv4XlupQ9MzYw5pCc57SiPeaciemBkwrlsLHmmK/pu5HlkI3ljZUs6Ieq5bex5Yqg5YWl6Ieq5bex5oOz6KaB5bGP6JS955qE5YWz6ZSu5a2XCiovCnZhciBibGFua0xpc3QgPSAi55+l6K+G572RfHzlhbDlt57lnKjnur98fOWFsOW3nuWFu+eUn+e9kXx85om+5bCP5aeQfHzlv6vmkq18fOapmeWtkOeUn+a0u+mmhnx86aKG6I+BfHzmlrDpl7vlv6vmkJx8fOe9kei1mnx85ama5oGL5Lqk5Y+LfHzos63loLR8fOi1jOWcunx855m+5a625LmQfHznmb7lrrbmqIJ8fOmHkeaymeWoseS5kHx85r6z6Zeo6YeR5rKZfHzlqIHlsLzmlq/kurp8fOawuOWIqea+s+mXqHx85r6z6Zeo5aix5LmQfHzpgIHlvanph5F8fOapoeaenOWbvemZhXx86JGh5LqsfHzkurrlqLHkuZB8fOaIkuiJsnx86L+U5YipfHznrpflkb18fOino+aipnx854ix6K+N6Zy45Y+lfHzmnKzlnLDlrp18fOaIkOS6uueUteW9sXx86YeR55O25qKF5ri4fHxxdm9kfHzmiJDkurrnvZF8fOS6pOWPi+iBiuWkqeWupHx85YqgUVF8fOWFreWQiOW9qXx85Zyo57q/6IGK5aSpfHwxMTVvc3x85Lq65L2T6Im65pyvfHzkuI3pm4XnhafniYd8fOazlei8qnx85rOV6L2ufHzmnY7mtKrlv5d8fOaWsOWUkOS6unx86ZmI56C056m6fHzpmL/ms6LnvZfnu7x8fOmYv+azoue9l+aWsHx86YCA5YWafHzkuInpgIDkuZ3or4R8fOi/veafpeWbvemZhXx855yf5ZaE5b+NfHzmtLvmkZh8fOS4reWbveS5i+aYpXx85Lit5Zu956aB6Ze7fHzmsJHpl7Tol4/kuot8fOmrmOWxguWGheaWl3x85Lit5YWx5YaF5paXfHzkuK3lhbHlhoXluZV8fOS4reWFseWkquWtkHx85o6o5aKZfHzlkLTlu7rmsJF8fOmbquWxseeLruWtkHx86JeP5Lq66KGM5pS/fHzlhoXokpnlj6TkurrmsJHlhZp8fOecn+S6uuasouS5kOaNlemxvHx85aix5LmQ5Y2a5b2pfHzop4bngrnnvZF8fOS4nOaWueWoseS5kHx857uP5YW46K+t5b2VfHzkurrkurrlvannpah8fOW9qeelqOe9kXx85qOL54mMfHzliqDnm598fOe6v+S4iuWoseS5kHx85pe25pe25b2pfHzliIbliIblval8fOS6lOWIhuW9qXx8572R5LiK5aix5LmQfHzms6jlhozlubPlj7B8fOe+juWbveS5i+mfs3x86Ieq55Sx5Lqa5rSyfHzmmI7plZzngavmi418fOWGieS6kemjnnx85qKB5paH6YGTfHzoib7mnKrmnKp8fOeOi+Wwj+WxsXx86I6r5LmL6K64fHznn7Pmtpt8fOS4reWbveS6uuadg3x85Y2a5b2pfHzmtYHkuqHol498fOS6uuS6uui0t3x85r6z6Zeo6LWMfHzogIHomY7mnLp8fOWkp+S5kOmAj3x85aix5LmQ5Z+OfHzkuIPmmJ/lval8fOW/q+S4iXx85paw5Yqg5Z2h5Y+M6LWifHzlubjov5AyOHx85LiK5rW35b+r5LiJfHznrqHlrrblqYbpqax8fOS6v+WPkeWoseS5kCI7IC8v6Ieq5bex55yL552A5qC85byP5beu5LiN5aSa5Yqg5YWl5bCx5aW9Cgp2YXIgeCA9IGJsYW5rTGlzdC5zcGxpdCgifHwiKTsKLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3kuLvlhaXlj6M9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Cm1vID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24oYWxsbXV0YXRpb25zKSB7CiAgICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgaWYoaHJlZi5pbmRleE9mKCJ3d3cuYmFpZHUiKSA+IC0xKXsKICAgICAgICAkKCIuYy1jb250YWluZXIiKS5lYWNoKGRlYWwpOyAvLyDnmb7luqYKCiAgICB9IGVsc2UgaWYoaHJlZi5pbmRleE9mKCJ3d3cuZ29vZ2xlIikgPiAtMSl7CiAgICAgICAgJCgiLmciKS5lYWNoKGRlYWwpOyAgICAgLy8g6LC35q2MCgogICAgfSBlbHNlIGlmKGhyZWYuaW5kZXhPZigic28uY29tIikgPiAtMSl7CiAgICAgICAgJCgiLnJlcy1saXN0IikuZWFjaChkZWFsKTsgLy8gMzYw5pCc57SiCiAgICAgICAgJCgiLnNwcmVhZCAiKS5lYWNoKGRlYWwpOyAvLyAzNjDmkJzntKIKICAgICAgICAkKCIuYnJhbmQiKS5lYWNoKGRlYWwpOyAvLyAzNjDmkJzntKIKCiAgICB9IGVsc2UgaWYoaHJlZi5pbmRleE9mKCJiaW5nLmNvbSIpID4gLTEpewogICAgICAgICQoIi5iX2FsZ28iKS5lYWNoKGRlYWwpOyAgICAvLyDlv4XlupQxCiAgICAgICAgJCgiLmJfYW5zIikuZWFjaChkZWFsKTsgICAgLy8g5b+F5bqUMgoKICAgIH0gZWxzZSBpZihocmVmLmluZGV4T2YoInlvdWRhby5jb20iKSA+IC0xKXsKICAgICAgICAkKCIucmVzLWxpc3QiKS5lYWNoKGRlYWwpOyAgICAgICAgLy8g5pyJ6YGTCgogICAgfQp9KTsKdmFyIHRhcmdldHMgPSBkb2N1bWVudC5ib2R5Owptby5vYnNlcnZlKHRhcmdldHMsIHsnY2hpbGRMaXN0JzogdHJ1ZSwnY2hhcmFjdGVyRGF0YSc6dHJ1ZSwnc3VidHJlZSc6IHRydWV9KTsKCi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PemAmueUqOWkhOeQhuWHveaVsD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KZnVuY3Rpb24gZGVhbCgpewogICAgdmFyIGN1clRleHQgPSAkKHRoaXMpLmF0dHIKICAgIHZhciBjdXJUZXh0MSA9ICQodGhpcykudGV4dCgpOwogICAgaWYoY2hlY2tJbmRleG9mKGN1clRleHQxKSA9PSB0cnVlKXsKICAgICAgICAkKHRoaXMpLnJlbW92ZSgpOwogICAgICAgIC8vY29uc29sZS5sb2coImRlYWxpbmcgd2l0aCIpOwogICAgfQp9Ci8q6YGN5Y6G5p+l6KGo77yM5aaC5p6c5Zyo6KGo5Lit5YiZ6L+U5ZuedHJ1ZSovCmZ1bmN0aW9uIGNoZWNrSW5kZXhvZihlbGVtZW50KXsKCXZhciByZXN1bHQgPSAoZWxlbWVudC5pbmRleE9mKHhbMF0pID4gLTEpOwoJZm9yKHZhciBpID0gMTsgaSA8PSB4Lmxlbmd0aDsgaSsrKXsKCQkvL2FsZXJ0KCJjaGVjayIpOwoJCXJlc3VsdCA9IHJlc3VsdCB8fCAoZWxlbWVudC5pbmRleE9mKHhbaV0pID4gLSAxKTsKCX0KCXJldHVybiByZXN1bHQ7Cn0=","requires":[{"meta":{"name":"jquery-1.8.0.min.js","url":"http://code.jquery.com/jquery-1.8.0.min.js","ts":1653206397720,"mimetype":"text/javascript"},"source":""}]},{"name":"Ê∏ÖÊòéËäÇË¶ÅÊãíÁªùÂº∫Ë°åÂêä‰∏ß","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*/*","https://*/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1586223185479,"data":{}},"enabled":false,"position":5,"file_url":"https://greasyfork.org/scripts/399436-%E6%B8%85%E6%98%8E%E8%8A%82%E8%A6%81%E6%8B%92%E7%BB%9D%E5%BC%BA%E8%A1%8C%E5%90%8A%E4%B8%A7/code/%E6%B8%85%E6%98%8E%E8%8A%82%E8%A6%81%E6%8B%92%E7%BB%9D%E5%BC%BA%E8%A1%8C%E5%90%8A%E4%B8%A7.user.js","uuid":"804de050-bf7f-466c-a84f-fa7898318830","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDmuIXmmI7oioLopoHmi5Lnu53lvLrooYzlkIrkuKcKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vYXhpcmVmLz80MDQtZ3JheQovLyBAdmVyc2lvbiAgICAgIDEuNTUKLy8gQGRlc2NyaXB0aW9uICDmi5Lnu53ooqvlvLrliLblj4LliqA05pyINOWPt+eahOe9kemhtem7keeZveiRrOekvAovLyBAYXV0aG9yICAgICAgIGF4aXJlZgovLyBAaW5jbHVkZSAgICAgIGh0dHA6Ly8qLyoKLy8gQGluY2x1ZGUgICAgICBodHRwczovLyovKgovLyBAZ3JhbnQgICAgICAgIEdNX2FkZFN0eWxlCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBmdW5jdGlvbiBnZXRGaXJzdEJ5Q2xhc3MoY2xhc3NOYW1lKSB7CiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NOYW1lKVswXQogICAgfQogICAgZnVuY3Rpb24gZ2V0TWFueUVsZW1lbnRzQnlDbGFzcyAoY2xhc3NOYW1lTGlzdCkgewogICAgICAgIHZhciBlbGVMaXN0ID0gW10KICAgICAgICBmb3IgKHZhciBrIGluIGNsYXNzTmFtZUxpc3QpIHsKICAgICAgICAgICAgdmFyIGNsYXNzTmFtZSA9IGNsYXNzTmFtZUxpc3Rba10KICAgICAgICAgICAgZWxlTGlzdC5wdXNoKGdldEZpcnN0QnlDbGFzcyhjbGFzc05hbWUpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gZWxlTGlzdAogICAgfQogICAgdmFyIGVsZW1lbnRzID0gWwogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwKICAgICAgICBkb2N1bWVudC5ib2R5CiAgICBdCiAgICB2YXIgcm9iYmVyTGlzdCA9IFsKICAgICAgICAid3d3Lmdvdi5jbiIsCiAgICAgICAgInBhcGVyLnBlb3BsZS5jb20uY24iLAogICAgICAgICJjcGMucGVvcGxlLmNvbS5jbiIKICAgIF0KICAgIHZhciBob3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lCiAgICAvLyDpkojlr7lRUemCrueusQogICAgaWYgKGhvc3QgPT0gIm1haWwucXEuY29tIikgewogICAgICAgIEdNX2FkZFN0eWxlKCIuaGVhZGVyLC5sb2dpbl9waWN0dXJlcywueG1fbG9naW5fY29udGFpbmVyLC5mb290ZXJ7ZmlsdGVyOiBub25lICFpbXBvcnRhbnR9IikKICAgIH0KICAgIC8vIOmSiOWvuTE2M+mCrueusQogICAgaWYgKGhvc3QgPT0gIm1haWwuMTYzLmNvbSIpIHsKICAgICAgICB3aW5kb3cub25sb2FkPWZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGdldEZpcnN0QnlDbGFzcygiaGVhZGVyLTE2M2xvZ28iKS5jbGFzc0xpc3QucmVtb3ZlKCJncmF5IikKICAgICAgICB9CiAgICB9CiAgICAvLyDpkojlr7nmlrDmtaoKICAgIGlmIChob3N0ID09ICJ3d3cuc2luYS5jb20uY24iKSB7CiAgICAgICAgR01fYWRkU3R5bGUoIip7ZmlsdGVyOiBub25lICFpbXBvcnRhbnQ7fSIpCiAgICB9CiAgICAvLyDpkojlr7nmiYvmnLrmlrDmtarnvZEKICAgIGlmIChob3N0ID09ICJzaW5hLmNuIikgewogICAgICAgIHdpbmRvdy5vbmxvYWQ9ZnVuY3Rpb24oKXsKICAgICAgICAgICAgZ2V0Rmlyc3RCeUNsYXNzKCJoZCIpLmNsYXNzTGlzdC5yZW1vdmUoInFpbmdtaW5nIikKICAgICAgICB9CiAgICB9CiAgICAvLyDpkojlr7nnmb7luqbnvZHnm5gKICAgIGlmIChob3N0ID09ICJwYW4uYmFpZHUuY29tIikgewogICAgICAgIHdpbmRvdy5vbmxvYWQ9ZnVuY3Rpb24oKXsKICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5maWx0ZXI9Im5vbmUiCiAgICAgICAgfQogICAgfQogICAgLy8g6ZKI5a+5M2RtCiAgICBpZiAoaG9zdCA9PSAid3d3LjNkbWdhbWUuY29tIikgewogICAgICAgIEdNX2FkZFN0eWxlKCIuaGVhZGVyX3dyYXAsLmNvbnRlbnQsLkxpbmt3cmFwLC5mb3R0ZXJ7ZmlsdGVyOiBub25lICFpbXBvcnRhbnQ7fSIpCiAgICAgICAgd2luZG93Lm9ubG9hZD1mdW5jdGlvbigpewogICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlID0gImZpbHRlcjogdW5zZXQgIWltcG9ydGFudCIKICAgICAgICB9CiAgICB9CiAgICAvLyDpkojlr7nnmb7luqbmkJzntKIKICAgIGlmIChob3N0ID09ICJ3d3cuYmFpZHUuY29tIikgewogICAgICAgIEdNX2FkZFN0eWxlKCIjaGVhZF93cmFwcGVye2ZpbHRlcjogbm9uZSAhaW1wb3J0YW50O30iKQogICAgfQogICAgLy8g6ZKI5a+55Y2h6aWt6K665Z2bCiAgICBpZiAoaG9zdCA9PSAiYmJzLmthZmFuLmNuIikgewogICAgICAgIEdNX2FkZFN0eWxlKCJodG1sLCBib2R5IHtmaWx0ZXI6IG5vbmUgIWltcG9ydGFudDt9IikKICAgICAgICB2YXIga2Zfc3R5bGUgPSAiYmFja2dyb3VuZDp1cmwoLy9hLmthZmFuLmNuL3RlbXBsYXRlL2NvbWVpbmdfY2l0eS9zdHlsZS90Mi9iZy5qcGcpIHJlcGVhdC14IDAgMCAjZjFmMGYwICFpbXBvcnRhbnQiCiAgICAgICAgd2luZG93Lm9ubG9hZD1mdW5jdGlvbigpewogICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlPWtmX3N0eWxlCiAgICAgICAgfQogICAgfQogICAgLy8g5Y+W5raI572R6aG154Gw5bqmCiAgICBmb3IgKHZhciBrIGluIGVsZW1lbnRzKSB7CiAgICAgICAgdmFyIGVsZW1lbnQgPSBlbGVtZW50c1trXQogICAgICAgIGVsZW1lbnQgPyBlbGVtZW50LnN0eWxlLmZpbHRlciA9ICJub25lIiA6IG51bGwKICAgIH0KICAgIC8vIOiuqeW6lOivpem7keeZveeahOmhtemdoum7keeZvQogICAgaWYgKHJvYmJlckxpc3QuaW5kZXhPZihob3N0KSAhPT0gLTEpIHsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuZmlsdGVyPSJncmF5c2NhbGUoMTAwJSkiCiAgICB9CiAgICAvLyDlvanom4sKICAgIGlmIChob3N0ID09ICJ3d3cuZm1wcmMuZ292LmNuIikgewogICAgICAgIEdNX2FkZFN0eWxlKCIubWFpbjFfbGVmdCxib2R5e3RyYW5zaXRpb246IGZpbHRlciAxMHN9IikKICAgICAgICB3aW5kb3cub25sb2FkPWZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGxldCB3aW5uaWVTdHlsZSA9IGdldEZpcnN0QnlDbGFzcygibWFpbjFfbGVmdCIpLnN0eWxlCiAgICAgICAgICAgIHdpbm5pZVN0eWxlLmZpbHRlcj0iZ3JheXNjYWxlKDEwMCUpIgogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGdldEZpcnN0QnlDbGFzcygiY29tbWVuZCIpLmlubmVySFRNTD0iPGgxIHN0eWxlPSdmb250LXNpemU6IDJlbSc+5rC4IOWegiDkuI0g5py9PC9oMT4iCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmZpbHRlcj0iZ3JheXNjYWxlKDEwMCUpIgogICAgICAgIH0sIDQwMDApCiAgICAgICAgfQogICAgfQp9KSgpOw=="},{"name":"Sci-hub button","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://AJHPContents.com/*","*://aaas.org/*","*://aacrmeetingabstracts.org/*","*://aaiddjournals.org/*","*://aanda.org/*","*://aapgbulletin.datapages.com/*","*://aas.aanda.org/*","*://academic.mintel.com/*","*://accessible.com/*","*://acm.org/*","*://adisonline.com/*","*://adsabs.harvard.edu/*","*://adswww.harvard.edu/*","*://advan.physiology.org/*","*://aeaweb.org/*","*://agronomy-journal.org/*","*://agu.org/*","*://ahiv.alexanderstreet.com/*","*://aiaa.org/*","*://aimsciences.org/*","*://aip.org/*","*://ajcn.org/*","*://ajcp.ascpjournals.org/*","*://ajevonline.org/*","*://ajh.sagepub.com/*","*://ajp.psychiatryonline.org/*","*://ajpcell.physiology.org/*","*://ajpendo.physiology.org/*","*://ajpgi.physiology.org/*","*://ajph.aphapublications.org/*","*://ajpheart.physiology.org/*","*://ajplegacy.physiology.org/*","*://ajplung.physiology.org/*","*://ajpregu.physiology.org/*","*://ajprenal.physiology.org/*","*://ajrccm.atsjournals.org/*","*://ajrcmb.org/*","*://ajslp.asha.org/*","*://ajsonline.org/*","*://ajtmh.org/*","*://ala.org/*","*://als.dukejournals.org/*","*://americana.ncsu.edu/*","*://americanliterature.dukejournals.org/*","*://americanspeech.dukejournals.org/*","*://amjbot.org/*","*://ams.org/*","*://amsciepub.com/*","*://analusis.edpsciences.org/*","*://anb.org/*","*://andrologyjournal.org/*","*://animres.edpsciences.org/*","*://annals.org/*","*://annee-philologique.com/*","*://annphys.org/*","*://annualreviews.org/*","*://anthrosource.net/*","*://apex.ipap.jp/*","*://apidologie.org/*","*://app.harpweek.com/*","*://appliedradiology.com/*","*://apps.isiknowledge.com/*","*://aps.org/*","*://apsjournals.apsnet.org/*","*://archderm.ama-assn.org/*","*://archinte.ama-assn.org/*","*://archive.pepublishing.com/*","*://archives.chadwyck.com/*","*://archneur.ama-assn.org/*","*://archopht.ama-assn.org/*","*://archpsyc.ama-assn.org/*","*://archsurg.ama-assn.org/*","*://arjournals.annualreviews.org/*","*://artstor.org/*","*://asadl.org/*","*://asae.frymulti.com/*","*://ascelibrary.org/*","*://asianannals.ctsnetjournals.org/*","*://aslo.org/*","*://aspet.org/*","*://aspresolver.com/*","*://atypon-link.com/*","*://aviationweek.com/*","*://avmajournals.avma.org/*","*://bas.umdl.umich.edu/*","*://bbmt.org/*","*://bepress.com/*","*://berrymaninstitute.org/*","*://biochemj.org/*","*://biochemsoctrans.org/*","*://biol.uni.wroc.pl/*","*://biolbull.org/*","*://biolreprod.org/*","*://bioone.org/*","*://bioscirep.org/*","*://biotechniques.com/*","*://blackwell-synergy.com/*","*://bloodjournal.hematologylibrary.org/*","*://bmj.com/*","*://bna.birds.cornell.edu/*","*://bos.frb.org/*","*://botany.org/*","*://boundary2.dukejournals.org/*","*://britannica.com/*","*://bsas.org.uk/*","*://bssaonline.org/*","*://bul.sagepub.com/*","*://businessweek.com/*","*://cabdirect.org/*","*://cabi.org/*","*://cameraobscura.dukejournals.org/*","*://cancerres.aacrjournals.org/*","*://canreviews.aacrjournals.org/*","*://carbo.chemnetbase.com/*","*://cawq.ca/*","*://ccd.chemnetbase.com/*","*://ccl.sagepub.com/*","*://cell.com/*","*://cgd.aacrjournals.org/*","*://checkpoint.riag.com/*","*://chelonianjournals.org/*","*://chemnetbase.com/*","*://chestjournal.chestpubs.org/*","*://chicagomanualofstyle.org/*","*://china.eastview.com/*","*://choicesmagazine.org/*","*://chronicle.com/*","*://ci.nii.ac.jp/*","*://ciaonet.org/*","*://cindasdata.com/*","*://ciw.edu/*","*://cjc-online.ca/*","*://cl.uwpress.org/*","*://clevelandfed.org/*","*://clincancerres.aacrjournals.org/*","*://clinchem.org/*","*://clinmed.netprints.org/*","*://clinsci.org/*","*://cms.math.ca/*","*://cnki.en.eastview.com/*","*://collections.chadwyck.com/*","*://communicationencyclopedia.com/*","*://complit.dukejournals.org/*","*://computerworld.com/*","*://consumerinterests.org/*","*://contemporaryobgyn.net/*","*://content.karger.com/*","*://corporateaffiliations.com/*","*://crcnetbase.com/*","*://crl.acrl.org/*","*://crln.acrl.org/*","*://cro2.org/*","*://cshmonographs.org/*","*://cshprotocols.cshlp.org/*","*://csi.sagepub.com/*","*://dandini.emeraldinsight.com/*","*://darwin.edu.ar/*","*://db.chemsources.com/*","*://dccc.chemnetbase.com/*","*://dev.biologists.org/*","*://dfc.chemnetbase.com/*","*://dichtung-digital.de/*","*://digital.library.mcgill.ca/*","*://digitalmicrofilm.proquest.com/*","*://dioc.chemnetbase.com/*","*://discovermagazine.com/*","*://dl.acm.org/*","*://dl.begellhouse.com/*","*://dlib.eastview.com/*","*://dmd.aspetjournals.org/*","*://dmnp.chemnetbase.com/*","*://dx.doi.org/*","*://ebm.rsmjournals.com/*","*://ebook.rsc.org/*","*://economist.com/*","*://edgj.org/*","*://edm.sagepub.com/*","*://edpsciences.org/*","*://edrv.endojournals.org/*","*://educationbook.aacrjournals.org/*","*://eebo.chadwyck.com/*","*://eenews.net/*","*://ehq.sagepub.com/*","*://ejorel.com/*","*://electrochem.org/*","*://elementsmagazine.org/*","*://els.net/*","*://ema.sagepub.com/*","*://emeraldinsight.com/*","*://ems-ph.org/*","*://endo.endojournals.org/*","*://engineeringvillage2.com/*","*://enterprise.astm.org/*","*://epirev.oupjournals.org/*","*://epjap.org/*","*://epubs.ans.org/*","*://er.uwpress.org/*","*://erc.endocrinology-journals.org/*","*://erg.sagepub.com/*","*://esa.publisher.ingentaconnect.com/*","*://esajournals.org/*","*://etde.org/*","*://ethnohistory.dukejournals.org/*","*://europhysicsnews.org/*","*://evolutionary-ecology.com/*","*://exacteditions.com/*","*://extensionreport.osu.edu/*","*://facs.org/*","*://familiesinsociety.org/*","*://fao.org/*","*://fasebj.org/*","*://fhs.dukejournals.org/*","*://fiaf.chadwyck.com/*","*://find.acacamps.org/*","*://find.galegroup.com/*","*://firstsearch.oclc.org/*","*://fundingopps2.cos.com/*","*://fyesit.metapress.com/*","*://gateway.proquest.com/*","*://genesdev.cshlp.org/*","*://genetics.org/*","*://genome.cshlp.org/*","*://genomebiology.com/*","*://geology.gsapubs.org/*","*://giorgio.ingentaselect.com/*","*://global-sci.com/*","*://glq.dukejournals.org/*","*://gmr.minsocam.org/*","*://gpoaccess.gov/*","*://groveart.com/*","*://grovemusic.com/*","*://gsabulletin.gsapubs.org/*","*://gse-journal.org/*","*://gut.bmj.com/*","*://hahr.dukejournals.org/*","*://hapi.gseis.ucla.edu/*","*://heart.bmj.com/*","*://heinonline.org/*","*://hh.um.es/*","*://hope.dukejournals.org/*","*://hortsci.ashspublications.org/*","*://horttech.ashspublications.org/*","*://hsus.cambridge.org/*","*://hti.umich.edu/*","*://hull.ac.uk/*","*://ias.ac.in/*","*://ibe.sagepub.com/*","*://ibisworld.com/*","*://ibra.org.uk/*","*://icevirtuallibrary.com/*","*://icf.uab.es/*","*://ici.org/*","*://ida.liu.se/*","*://ieee.org/*","*://ieeexplore.ieee.org/*","*://ihserc.com/*","*://iimp.chadwyck.com/*","*://ijc.org/*","*://ijdb.ehu.es/*","*://ijee.ie/*","*://ijs.sgmjournals.org/*","*://impublications.com/*","*://inda.org/*","*://informahealthcare.com/*","*://informaworld.com/*","*://infotrac.galegroup.com/*","*://infoweb.newsbank.com/*","*://ingentaconnect.com/*","*://ingentaselect.com/*","*://inpractice.bmj.com/*","*://inscribe.iupress.org/*","*://int-res.com/*","*://interfaces.journal.informs.org/*","*://interscience.wiley.com/*","*://iop.org/*","*://iopscience.iop.org/*","*://iovs.org/*","*://ipap.jp/*","*://ir.uiowa.edu/*","*://isiknowledge.com/*","*://isr.journal.informs.org/*","*://itergateway.org/*","*://itn.is/*","*://iucn.org/*","*://iupac.org/*","*://iwaponline.com/*","*://jaaha.org/*","*://jama.ama-assn.org/*","*://jap.physiology.org/*","*://japr.fass.org/*","*://jas.fass.org/*","*://jbc.org/*","*://jbjs.org/*","*://jbmronline.org/*","*://jcb.rupress.org/*","*://jcem.endojournals.org/*","*://jco.ascopubs.org/*","*://jcp.bmj.com/*","*://jcs.biologists.org/*","*://jeb.biologists.org/*","*://jem.rupress.org/*","*://jgp.rupress.org/*","*://jgs.lyellcollection.org/*","*://jgslegacy.lyellcollection.org/*","*://jhortscib.org/*","*://jhr.uwpress.org/*","*://jhse.org/*","*://jimmunol.org/*","*://jleukbio.org/*","*://jlr.org/*","*://jme.endocrinology-journals.org/*","*://jmems.dukejournals.org/*","*://jmm.sgmjournals.org/*","*://jn.nutrition.org/*","*://jn.physiology.org/*","*://jneurosci.org/*","*://jnm.snmjournals.org/*","*://jnnp.bmj.com/*","*://jnrlse.org/*","*://joa.isa-arbor.com/*","*://joc.journal.informs.org/*","*://joe.endocrinology-journals.org/*","*://john-libbey-eurotext.fr/*","*://journal.ashspublications.org/*","*://journal.telospress.com/*","*://journals.ametsoc.org/*","*://journals.cambridge.org/*","*://journals.hil.unb.ca/*","*://journals.humankinetics.com/*","*://journals.iucr.org/*","*://journals.naspa.org/*","*://journals.sagamorepub.com/*","*://journals.tdl.org/*","*://journalstp.gracescientific.com/*","*://jove.com/*","*://jp.physoc.org/*","*://jpet.aspetjournals.org/*","*://jpsj.ipap.jp/*","*://jsad.com/*","*://jsedres.sepmonline.org/*","*://jslhr.asha.org/*","*://jstage.jst.go.jp/*","*://jstor.org/*","*://jswconline.org/*","*://jwildlifedis.org/*","*://jyi.org/*","*://kluwerlawonline.com/*","*://kluweronline.com/*","*://knovel.com/*","*://la.rsmjournals.com/*","*://labanimal.com/*","*://labor.dukejournals.org/*","*://landesbioscience.com/*","*://le.uwpress.org/*","*://lexis-nexis.com/*","*://lexisnexis.com/*","*://library.cqpress.com/*","*://library.pressdisplay.com/*","*://library.seg.org/*","*://libraryissues.com/*","*://liebertonline.com/*","*://link.springer-ny.com/*","*://link.springer.de/*","*://links.jstor.org/*","*://livingbird.org/*","*://lj.uwpress.org/*","*://mansci.journal.informs.org/*","*://mapress.com/*","*://math.ualberta.ca/*","*://mcponline.org/*","*://mcr.aacrjournals.org/*","*://mcr.sagepub.com/*","*://mend.endojournals.org/*","*://metapress.com/*","*://metla.fi/*","*://mic.sgmjournals.org/*","*://millerpublishing.com/*","*://minsocam.org/*","*://mitpressjournals.org/*","*://mktsci.journal.informs.org/*","*://mlajournals.org/*","*://mluri.sari.ac.uk/*","*://mmm.edpsciences.org/*","*://molbiolcell.org/*","*://molpharm.aspetjournals.org/*","*://mor.journal.informs.org/*","*://mp.bmj.com/*","*://mq.dukejournals.org/*","*://msp.berkeley.edu/*","*://msucares.com/*","*://muse.jhu.edu/*","*://museumoftheearth.org/*","*://mycologia.org/*","*://myinsight.ihsglobalinsight.com/*","*://nactateachers.org/*","*://nationaljournal.com/*","*://nature.com/*","*://nber.org/*","*://nc-apa.org/*","*://ncbi.nlm.nih.gov/*","*://ncbiotech.org/*","*://nccsdataweb.urban.org/*","*://ncdjjdp.org/*","*://ncjrs.org/*","*://nclive.org/*","*://ncph.org/*","*://ncpublicschools.org/*","*://ncsu.naxosmusiclibrary.com/*","*://ncte.org/*","*://nejm.org/*","*://netLibrary.com/*","*://netadvantage.standardandpoors.com/*","*://netlibrary.com/*","*://new.sourceoecd.org/*","*://news.reseau-concept.net/*","*://ngc.dukejournals.org/*","*://nho.sagepub.com/*","*://nonlin-processes-geophys.net/*","*://novel.dukejournals.org/*","*://npprj.spci.se/*","*://nrcresearchpress.com/*","*://nsarchive.chadwyck.com/*","*://nsrl.ttu.edu/*","*://nucl.annualreviews.org/*","*://nv-med.com/*","*://nybooks.com/*","*://observateurocde.org/*","*://oecd-ilibrary.org/*","*://oecdobserver.org/*","*://oed.com/*","*://oldcitypublishing.com/*","*://online.sagepub.com/*","*://onlinelibrary.wiley.com/*","*://ophthalmologytimes.modernmedicine.com/*","*://opticsinfobase.org/*","*://or.journal.informs.org/*","*://orgsci.journal.informs.org/*","*://osa-opn.org/*","*://ovidsp.ovid.com/*","*://oxfordlanguagedictionaries.com/*","*://oxfordmusiconline.com/*","*://pacificarchaeology.org/*","*://pads.dukejournals.org/*","*://palgrave-journals.com/*","*://papers.nber.org/*","*://pasj.asj.or.jp/*","*://peanutscience.com/*","*://pedagogy.dukejournals.org/*","*://perceptionweb.com/*","*://pgrsa.org/*","*://pharmacists.ca/*","*://pharmrev.aspetjournals.org/*","*://philreview.dukejournals.org/*","*://phycologia.org/*","*://physicsweb.org/*","*://physicsworldarchive.iop.org/*","*://physiolgenomics.physiology.org/*","*://physrev.physiology.org/*","*://plantcell.org/*","*://plantmanagementnetwork.org/*","*://plantphysiol.org/*","*://pld.chadwyck.com/*","*://podiatrytoday.com/*","*://poeticstoday.dukejournals.org/*","*://polymersdatabase.com/*","*://portal.acm.org/*","*://portal.euromonitor.com/*","*://portico.org/*","*://positions.dukejournals.org/*","*://pracademics.com/*","*://priory.com/*","*://prisma.chadwyck.com/*","*://products.asminternational.org/*","*://projecteuclid.org/*","*://proquest.safaribooksonline.com/*","*://proquest.umi.com/*","*://proxying.lib.ncsu.edu/*","*://ps.fass.org/*","*://ptp.ipap.jp/*","*://publicculture.dukejournals.org/*","*://publish.csiro.au/*","*://pubs.acs.org/*","*://pubs.aic.ca/*","*://pubs.amstat.org/*","*://pubservices.nrc-cnrc.ca/*","*://purl.access.gpo.gov/*","*://pwq.sagepub.com/*","*://qjps.com/*","*://quod.lib.umich.edu/*","*://radiology.rsna.org/*","*://railwayage.com/*","*://raj.sagepub.com/*","*://reading.org/*","*://redbooks.com/*","*://reference-global.com/*","*://referenceusa.com/*","*://refuniv.odyssi.com/*","*://reproduction-online.org/*","*://revista-iberoamericana.pitt.edu/*","*://revophth.com/*","*://rff.org/*","*://rhr.dukejournals.org/*","*://rnajournal.cshlp.org/*","*://rnd.edpsciences.org/*","*://ropercenter.uconn.edu/*","*://rothamsted.bbsrc.ac.uk/*","*://royalsociety.org.nz/*","*://rphr.endojournals.org/*","*://rsc.org/*","*://rsh.sagepub.com/*","*://sagamorepub.com/*","*://sanborn.umi.com/*","*://saq.dukejournals.org/*","*://sbrnet.com/*","*://schattauer.de/*","*://scholar.google.com/*","*://sciencedirect.com/*","*://sciencemag.org/*","*://scientific.net/*","*://seab.envmed.rochester.edu/*","*://search.ebscohost.com/*","*://search.epnet.com/*","*://search.marquiswhoswho.com/*","*://search.proquest.com/*","*://search.rdsinc.com/*","*://searchcenter.intelecomonline.net/*","*://seg.org/*","*://services.bepress.com/*","*://simplymap.com/*","*://site.ebrary.com/*","*://slac.stanford.edu/*","*://social.chass.ncsu.edu/*","*://socialtext.dukejournals.org/*","*://societyforchaostheory.org/*","*://spie.org/*","*://spiedl.org/*","*://springerlink.com/*","*://springerlink.de/*","*://springerlink.metapress.com/*","*://springerprotocols.com/*","*://ssh.dukejournals.org/*","*://stacks.iop.org/*","*://statpak.gov.pk/*","*://stepsheet.stsci.edu/*","*://stke.sciencemag.org/*","*://swissmedic.ch/*","*://symposium.cshlp.org/*","*://tandfonline.com/*","*://tannerlectures.utah.edu/*","*://tappi.micronexx.com/*","*://taw.sagepub.com/*","*://technologyreview.com/*","*://theannals.com/*","*://theater.dukejournals.org/*","*://thecochranelibrary.com/*","*://theiwrc.org/*","*://thejns.org/*","*://themerckindex.cambridgesoft.com/*","*://theses.com/*","*://thomist.org/*","*://toxnet.nlm.nih.gov/*","*://transci.journal.informs.org/*","*://trb.org/*","*://turf.lib.msu.edu/*","*://turpion.org/*","*://tvnews.vanderbilt.edu/*","*://uark.edu/*","*://uli.org/*","*://ulrichsweb.com/*","*://unstats.un.org/*","*://vdi.sagepub.com/*","*://veterinaryrecord.bmj.com/*","*://vetres.org/*","*://vha.usc.edu/*","*://victoriandatabase.com/*","*://victorianperiodicals.com/*","*://vir.sgmjournals.org/*","*://vnweb.hwwilsonweb.com/*","*://web.jbjs.org.uk/*","*://web.lexis-nexis.com/*","*://wgsn.com/*","*://whiv.alexanderstreet.com/*","*://wilsonweb2.hwwilson.com/*","*://wkap.nl/*","*://worldscinet.com/*","*://worldscinetarchives.com/*","*://worldshakesbib.org/*","*://wrds-web.wharton.upenn.edu/*","*://wssa.allenpress.com/*","*://wto.org/*","*://www-pub.iaea.org/*","*://www2.acs.ncsu.edu/*","*://www3.interscience.wiley.com/*","*://www3.nationaljournal.com/*","*://www3.stat.sinica.edu.tw/*","*://xlink.rsc.org/*","*://ybook.co.jp/*","*://zentralblatt-math.org/*","*://znaturforsch.com/*","http://*.aasv.org/*","http://*.acm.org/*","http://*.acs.org/*","http://*.baidu.com/*","http://*.biomedcentral.com/*","http://*.bioon.com.cn/*","http://*.bmj.com/*","http://*.cabdirect.org/*","http://*.cambridge.org/*","http://*.cell.com/*","http://*.cnki.com.cn/*","http://*.cnki.net/*","http://*.cqvip.com/*","http://*.csiro.au/*","http://*.csis.cn/*","http://*.edu.cn/*","http://*.edu/*","http://*.en.cnki.com.cn/*","http://*.europepmc.org/*","http://*.frontiersin.org/*","http://*.google.com.co.uk/*","http://*.google.com.hk/*","http://*.google.com/*","http://*.google.nl/*","http://*.j-csam.org/*","http://*.jstor.org/*","http://*.mr-gut.cn/*","http://*.nature.com/*","http://*.ncbi.nlm.nih.gov/*","http://*.oxfordjournals.org/*","http://*.physiology.org/*","http://*.plos.org/*","http://*.plosjournals.org/*","http://*.plosone.org/*","http://*.pnas.org/*","http://*.pubmed.cn/*","http://*.pubmed.com/*","http://*.pubmedcentral.nih.gov/*","http://*.pubmedcentralcanada.ca/*","http://*.researchgate.net/*","http://*.sci-hub.is/*","http://*.sci-hub.mu/*","http://*.sci-hub.se/*","http://*.sci-hub.tw/*","http://*.sciencedirect.com/*","http://*.sciencemag.org/*","http://*.springer.com/*","http://*.springerlink.com/*","http://*.tandfonline.com/*","http://*.tcsae.org/*","http://*.thelancet.com/*","http://*.wanfangdata.com.cn/*","http://*.wiley.com/*","http://*.worldscientific.com/*","http://*/doi/abs/*","http://*/doi/full/*","http://cqvip.com/*","http://doi.org/*","http://dx.doi.org/*","http://europepmc.org/*","http://inspirehep.net/","http://inspirehep.net/*","http://pubmed.cn/*","http://pubmed.com/*","http://pubmedcentralcanada.ca/*","http://researcherslinks.com/*","http://sci-hub.is/*","http://sci-hub.mu/*","http://sci-hub.se/*","http://sci-hub.tw/*","https://*.aasv.org/*","https://*.acs.org/*","https://*.aip.org/*","https://*.aps.org/*","https://*.arch-anim-breed.net/*","https://*.asm.org/*","https://*.bing.com/*","https://*.biomedcentral.com/*","https://*.bioon.com/*","https://*.bmj.com/","https://*.bmj.com/*","https://*.cambridge.org/*","https://*.cell.com/*","https://*.cn-ki.net/*","https://*.edu/*","https://*.frontiersin.org/*","https://*.futuremedicine.com/*","https://*.google.com.co.uk/*","https://*.google.com.hk/*","https://*.google.com/*","https://*.google.nl/*","https://*.ieee.org/*","https://*.journalofinfection.com/*","https://*.jstor.org/*","https://*.livestockscience.com/*","https://*.mr-gut.cn/*","https://*.nature.com/*","https://*.ncbi.nlm.nih.gov/*","https://*.oup.com/*","https://*.oxfordjournals.org/*","https://*.physiology.org/*","https://*.plos.org/*","https://*.plosjournals.org/*","https://*.plosone.org/*","https://*.royalsocietypublishing.org/*","https://*.sci-hub.mu/*","https://*.sci-hub.tw/*","https://*.sci-hub.win/*","https://*.sciencedirect.com/*","https://*.springer.com/*","https://*.tandfonline.com/*","https://*.unesp.br/*","https://*.webofknowledge.com/*","https://*.wikipedia.org/","https://*.wikipedia.org/*","https://*.wiley.com/*","https://*/doi/abs/*","https://*/doi/full/*","https://aip.scitation.org/","https://aip.scitation.org/*","https://arxiv.org/","https://arxiv.org/*","https://doi.org/*","https://en.wikipedia.org/","https://en.wikipedia.org/*","https://europepmc.org/*","https://ieeexplore.ieee.org/","https://ieeexplore.ieee.org/*","https://iopscience.iop.org/","https://iopscience.iop.org/*","https://journals.aps.org/","https://journals.aps.org/*","https://mp.weixin.qq.com/s*","https://paperpile.com/app","https://peerj.com/*","https://pnas.org/*","https://pubs.acs.org.ccindex.cn/*","https://pubs.rsc.org/*","https://sci-hub.mu/*","https://sci-hub.tw/*","https://sci-hub.win/*","https://science.sciencemag.org/","https://science.sciencemag.org/*","https://ui.adsabs.harvard.edu/","https://ui.adsabs.harvard.edu/*","https://www.ajas.info/*","https://www.biorxiv.org/*","https://www.ejog.org/*","https://www.ingentaconnect.com/*","https://www.koreascience.or.kr/article/*.page","https://www.mdpi.com/*","https://www.nrcresearchpress.com/","https://www.osapublishing.org/","https://www.osapublishing.org/*","https://www.prophy.science/","https://www.prophy.science/*","https://www.researchgate.net/","https://www.researchgate.net/*","https://www.scitation.org/","https://www.scitation.org/*","https://www.semanticscholar.org/","https://www.semanticscholar.org/*","https://www.worldscientific.com/","https://www.x-mol.com/paper/*","https://xueshu.baidu.com/*","https://zhuanlan.zhihu.com/p/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1587726656995,"data":{}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/370246-sci-hub-button/code/Sci-hub%20button.user.js","uuid":"5da8c96e-8491-48a6-b6be-15e220022255","source":""},{"name":"Google Hit Hider by Domain (Search Filter / Block Sites)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["http*://www.google.com/recaptcha/*","https://www.startpage.com/*/ads?*"],"orig_includes":["http*://www.google.*/*","http*://www.google.co*.*/*","http*://news.google.*/*","http*://encrypted.google.*/*","http*://startpage.com/*","http*://*.startpage.com/*","http*://duckduckgo.com/*","http*://start.duckduckgo.com/*","http*://safe.duckduckgo.com/*","http*://3g2upl4pq6kufc4m.onion/*","http*://www.bing.com/*","http*://*search.yahoo.com/*","http*://search.yahoo.co.jp/*","http*://www.yandex.com/*","http*://yandex.com/*","http*://searx.*/*","http*://www.qwant.com/*","http*://www.qwantjunior.com/*","http*://www.baidu.com/*","https://www.ecosia.org/search*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1642298230957,"data":{"ghhprefs":"s{\"shownotc\":[\"Y\",\"Show hit notices(Y|N)\"],\"mngpaneopen\":[\"Y-N\",\"Persistence enabled(Y|N),Pane was open(Y|N),Last tab number(1-4)\"],\"mngbtnstyle\":[\"both-ifrN-R-P-Y-H\",\"Display Manage Hiding button and Block buttons(mng|blk|both),In iframes(ifrN|ifrY),Position(R,T,B),Block button display(P,M),Block button tooltips(Y|N), Block button position(H|C)\"],\"addtolistpos\":[\"end\",\"Where to add new hits to block lists(end|top|sort)\"],\"aggressiveblock\":[\"none\",\"Which domains to default to shorter form(none|all|www)\"],\"usemutation\":[\"on-Y\",\"Listen for mutation events(on|off),Use DOM4 Mutation Observer(Y|N)\"],\"oneclick\":[\"N-N\",\"One-click blocking(Y|N),Goes to Perma-ban(Y|N)\"],\"runbeta\":[\"N\",\"Enable incompletely tested features (Y|N)\"],\"reserved2\":[\"X\",\"Y\"]}","hideyhosts":"s|cloud.tencent.com:t|example.com:t|lanzhouyangsheng.com:p|www.09vv.cn:p|www.bubuko.com:p|www.dqzdhw.com:p|www.hikvisionbj.com:p|www.hotbak.net:p|www.voorp.com:p|www.xinhexinli.com:p|gyagas.com:p|Áà±ÈóÆÁü•ËØÜ‰∫∫:p|Áà±ÈóÆÁü•ËØÜ‰∫∫:p|Áà±ÈóÆÁü•ËØÜ‰∫∫:p|Áà±ÈóÆÁü•ËØÜ‰∫∫:p|beneyuan.com:p|www.anhuilife.com:p|www.fydqw.com:p|fydqw.com:p|pythonÁ†ÅÁ•û:p|pythonÁ†ÅÁ•û:p|www.sohu.com:p|ai.baidu.com:p|www.codeleading.com:p|www.ledanji.com:p|www.hanlefang.net:p|118.193.38.103:p|www.huaweicloud.com:p|huaweicloud.com:p|aliyun.com:p|play.google.com:p|czag88.com:p|vanmay88.com:p|cxy229.com:p|yichao77.com:p|www.0527yc.com:p|quyn95.com:p|www.titanapply.com:p|www.jmeishi.com:p|58pla.com:p|www.chechetun.com:p|www.hrbsybz.com:p|news.onlinedown.net:p|mydown.yesky.com:p|"}},"enabled":false,"position":7,"file_url":"https://greasyfork.org/scripts/1682-google-hit-hider-by-domain-search-filter-block-sites/code/Google%20Hit%20Hider%20by%20Domain%20(Search%20Filter%20%20Block%20Sites).user.js","uuid":"64593cbf-484f-4431-9110-e09968c9395b","source":"","resources":[{"meta":{"name":"gfrk-GHHbD-ver222.png","url":"https://www.jeffersonscher.com/gm/src/gfrk-GHHbD-ver222.png","ts":1650888645849,"mimetype":"image/png"},"source":"wolQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgDAAAAKC0PUwAAAARnQU1BAADCr8OINwXCisOpAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccOJZTwAAAAGUExURcOMAADDv8O/w7/Dg8OzQRIAAAACdFJOU8O/AMOlwrcwSgAAAD9JREFUeMOawozCj8ORCgBABARnw7/Dv8Knwq9EwosHwp0HamInaBVfAAITw5PCgMKsAsOZw5QBI8Kjw7Z3RsK3aMKGw4rDpgBTw61QfMKnZsK5wp97AgwAW1MAwqEHOh5OAAAAAElFTkTCrkJgwoI="}]},{"name":"anti-redirect","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.baidu.com","*"],"orig_excludes":[],"orig_includes":["*www.baidu.com*","*tieba.baidu.com*","*v.baidu.com*","*xueshu.baidu.com*","*www.google.*","*docs.google.*","*mail.google.*","*play.google.*","*youtube.com/watch?v=*","*youtube.com/channel/*","*encrypted.google.com*","*www.so.com*","*www.zhihu.com*","*daily.zhihu.com*","*zhuanlan.zhihu.com*","*weibo.com*","*twitter.com*","*www.sogou.com*","*juejin.im*","*mail.qq.com*","*addons.mozilla.org*","*www.jianshu.com*","*www.douban.com*","*getpocket.com*","*www.dogedoge.com*","*51.ruyo.net*","*steamcommunity.com*","*mijisou.com*","*blog.csdn.net*","*.oschina.net*","*app.yinxiang.com*","*jianshu.com*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":["baidu.com"],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1590466976694,"data":{}},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/11915-anti-redirect/code/anti-redirect.user.js","uuid":"2e3726ed-8de2-40ae-904e-43bd59fa39f3","source":""},{"name":"CSDN ÂéªÂπøÂëäÊ≤âÊµ∏ÈòÖËØªÊ®°Âºè","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://bbs.csdn.net/topics/*","https://*.iteye.com/blog/*","https://*.iteye.com/news/*","https://ask.csdn.net/questions/*"],"orig_matches":["*://blog.csdn.net/*/article/details/*","*://*.blog.csdn.net/article/details/*","<$URL$>"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1592063228919,"data":{"$CSDNCleaner_background_ranges":"s{\"categorys\":[\"È£éÊôØ\",\"ÁÆÄÁ∫¶\"],\"imgs\":[],\"customUrl\":\"\",\"bgColor\":\"\",\"defaultHideMenu\":false,\"showSourceLink\":false}"}},"enabled":false,"position":9,"file_url":"https://greasyfork.org/scripts/373457-csdn-%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%B2%89%E6%B5%B8%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F/code/CSDN%20%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%B2%89%E6%B5%B8%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F.user.js","uuid":"f6abfc8b-df2f-4282-a97c-a86bac5fab52","source":"","requires":[{"meta":{"name":"acolorpicker.js","url":"https://unpkg.com/a-color-picker@1.2.1/dist/acolorpicker.js","ts":1646529218802,"mimetype":"text/javascript"},"source":""}]},{"name":"UOOC","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http://*/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1594365393658,"data":{}},"enabled":false,"position":10,"uuid":"37bdb9e4-b024-4455-acf0-be47f906cc9e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBVT09DCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMC4xCi8vIEBkZXNjcmlwdGlvbiAgdHJ5IHRvIHRha2Ugb3ZlciB0aGUgd29ybGQhCi8vIEBhdXRob3IgICAgICAgWW91Ci8vIEBtYXRjaCAgICAgICAgaHR0cDovLyovKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBpZiAodHlwZW9mKCQpICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICBjb25zb2xlLmxvZygi6Kej57uRaHRtbOS6i+S7tiIpOwogICAgICAgICAgICAkKCJodG1sIikudW5iaW5kKCk7CiAgICAgICAgfSwgMTAwMCk7CiAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCJqcXVlcnnliqDovb3lpLHotKUhIik7CiAgICB9Cn0pKCk7"},{"name":"Áü•‰πéÁΩëÈ°µÂä©Êâã","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["zhihu.com","vzuu.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.zhihu.com/*","https://v.vzuu.com/video/*","https://video.zhihu.com/video/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1597326148955,"data":{}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/384172-%E7%9F%A5%E4%B9%8E%E7%BD%91%E9%A1%B5%E5%8A%A9%E6%89%8B/code/%E7%9F%A5%E4%B9%8E%E7%BD%91%E9%A1%B5%E5%8A%A9%E6%89%8B.user.js","uuid":"f3f0a76d-71bf-44e5-ac66-20c42bc46733","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js","ts":1651654590404,"mimetype":"text/javascript"},"source":""}]},{"name":"Áü•‰πéÂÖçÁôªÂΩï","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.zhihu.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1605891716722,"data":{}},"enabled":false,"position":12,"file_url":"https://greasyfork.org/scripts/415278-%E7%9F%A5%E4%B9%8E%E5%85%8D%E7%99%BB%E5%BD%95/code/%E7%9F%A5%E4%B9%8E%E5%85%8D%E7%99%BB%E5%BD%95.user.js","uuid":"082a9f5b-e3d8-41eb-9440-023b47687904","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnn6XkuY7lhY3nmbvlvZUKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjkKLy8gQGRlc2NyaXB0aW9uICDnn6XkuY7lhY3nmbvlvZXohJrmnKwKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICBodHRwczovLyouemhpaHUuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uICgpIHsKLy8g6Iul6KaB5byA5ZCv5a6e6aqM5oCn5Yqf6IO977yM6K+35bCG5LiL5pa5IGV4cGVyaW1lbnRhbEZ1bmN0aW9uID0gZmFsc2Ug5pS55oiQIGV4cGVyaW1lbnRhbEZ1bmN0aW9uID0gdHJ1ZQogIGNvbnN0IGV4cGVyaW1lbnRhbEZ1bmN0aW9uID0gZmFsc2UKCiAgInVzZSBzdHJpY3QiOwogIGlmIChkb2N1bWVudC5sb2NhdGlvbi5ocmVmLmluZGV4T2YoIi9zaWduaW4/IikgPiAtMSkgewogICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAiLy96aGlodS5jb20vc2VhcmNoPyI7CiAgfQoKCiAgZnVuY3Rpb24gaHRtbE9ic2VydmF0aW9uKG11dGF0aW9uTGlzdCxvYnNlcnZlcil7CiAgICBmb3IobGV0IG11dGF0aW9uIG9mIG11dGF0aW9uTGlzdCl7CiAgICAgIGlmKCdhdHRyaWJ1dGVzJyA9PT0gbXV0YXRpb24udHlwZSAmJiAnc3R5bGUnID09PSBtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lKXsKICAgICAgICBpZihkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3cgIT09ICdhdXRvJyl7CiAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnYXV0bycKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGJvZHlPYnNlcnZhdGlvbihtdXRhdGlvbkxpc3Qsb2JzZXJ2ZXIpewogICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc2lnbkZsb3dNb2RhbCcpWzBdKXsKICAgICAgY29uc3QgbW9kZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdNb2RhbC13cmFwcGVyJylbMF0KICAgICAgaWYobW9kZWwpewogICAgICAgIG1vZGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobW9kZWwpCiAgICAgIH0KICAgIH1lbHNlewogICAgICBpZihleHBlcmltZW50YWxGdW5jdGlvbiAmJiBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdNb2RhbC1iYWNrZHJvcCcpWzBdKXsKICAgICAgICBjb25zdCBiYWNrZHJvcCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ01vZGFsLWJhY2tkcm9wJylbMF0KICAgICAgICBpZighYmFja2Ryb3AuZ2V0QXR0cmlidXRlKCdjbGlja2VkZXZlbnQnKSl7CiAgICAgICAgICBiYWNrZHJvcC5vbmNsaWNrID0gZnVuY3Rpb24oZSl7CiAgICAgICAgICAgIGNvbnN0IGNsb3NlYnV0dG9uID0gYmFja2Ryb3AucGFyZW50Tm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdNb2RhbC1jbG9zZUJ1dHRvbicpWzBdCiAgICAgICAgICAgIGlmKGNsb3NlYnV0dG9uKXsKICAgICAgICAgICAgICBjbG9zZWJ1dHRvbi5jbGljaygpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGJhY2tkcm9wLnNldEF0dHJpYnV0ZSgnY2xpY2tlZGV2ZW50Jyx0cnVlKQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KCiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nCiAgY29uc3QgaHRtbE9ic2VydmVyQ29uZmlnID0ge2F0dHJpYnV0ZXM6dHJ1ZX0KICBjb25zdCBodG1sT2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihodG1sT2JzZXJ2YXRpb24pCiAgaHRtbE9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGh0bWxPYnNlcnZlckNvbmZpZykKCiAgY29uc3QgYm9keU9ic2VydmVyQ29uZmlnID0ge2NoaWxkTGlzdDp0cnVlLHN1YnRyZWU6dHJ1ZX0KICBjb25zdCBib2R5T2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihib2R5T2JzZXJ2YXRpb24pCiAgYm9keU9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuYm9keSxib2R5T2JzZXJ2ZXJDb25maWcpCgogIAp9KSgpOwo="},{"name":"AC-baidu-ÈáçÂÆöÂêë‰ºòÂåñÁôæÂ∫¶ÊêúÁãóË∞∑Ê≠åÂøÖÂ∫îÊêúÁ¥¢_favicon_ÂèåÂàó","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["baidu.com","google.com","google.com.hk","google.com.jp","bing.com","duckduckgo.com","dogedoge.com","so.com"],"orig_excludes":["*://*.google*/sorry*","https://zhidao.baidu.com/*","https://*.zhidao.baidu.com/*","https://www.baidu.com/img/*"],"orig_includes":["*://ipv6.baidu.com/*","*://www.baidu.com/*","*://www1.baidu.com/*","*://m.baidu.com/*","*://xueshu.baidu.com/s*","*://www.so.com/s?*","*://*.bing.com/*","*://encrypted.google.*/search*","*://*.google*/search*","*://*.google*/webhp*","*://*.zhihu.com/*","*://*duckduckgo.com/*","*://*.dogedoge.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1650504427322,"data":{"Config":"s{\"isRedirectEnable\":true,\"isAdsEnable\":true,\"isAutopage\":false,\"isBlockEnable\":false,\"isBlockDisplay\":false,\"isBlockBtnNotDisplay\":false,\"AdsStyleEnable\":false,\"baidu\":{\"name\":\"baidu\",\"AdsStyleMode\":\"1\",\"HuYanMode\":false},\"google\":{\"name\":\"google\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"bing\":{\"name\":\"bing\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"duck\":{\"name\":\"duck\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"doge\":{\"name\":\"doge\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"sogou\":{\"name\":\"sogou\",\"AdsStyleMode\":\"1\",\"HuYanMode\":false},\"Style_BaiduLite\":false,\"defaultHuYanColor\":\"#DEF1EF\",\"isUserColorEnable\":false,\"isFaviconEnable\":false,\"defaultFaviconUrl\":\"https://ae01.alicdn.com/kf/HTB1dRY0X8OD3KVjSZFFq6An9pXay.jpg\",\"doDisableSug\":true,\"isRightDisplayEnable\":false,\"isCounterEnable\":false,\"isALineEnable\":false,\"isUserStyleEnable\":false,\"normalizeDuck\":true,\"isEnLang\":false,\"isGooleInBaiduModeEnable\":false,\"UserBlockList\":[],\"UserStyleText\":\"/**ËÆ°Êï∞Âô®ÁöÑÈ¢úËâ≤Ê†∑Âºè*/\\ndiv .AC-CounterT{\\n  background: #FD9999;\\n}\\n/**ÁôæÂ∫¶Ê†∑ÂºèÂå∫Âüü**/\\nbody[baidu] {\\n  position: relative;\\n  \\n  /**Âè≥‰æßÊ†èÁöÑÊ†∑Âºè-ÂÖ∂ÂÆû‰∏çÂºÄÂêØÊõ¥Â•ΩÁúã‰∏Ä‰∫õ*/\\n  #content_right{\\n    padding: 20px 15px 15px;\\n    border-radius: 5px;\\n    background-color: #fff;\\n    box-sizing: border-box;\\n    box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n    -webkit-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n    -moz-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n  }\\n\\n  &:before{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    content: '';\\n    background-image: url('https://img.tujidu.com/image/620210010b2cd.jpg');\\n    background-size: 100% auto;\\n    opacity: 0.6; /*ËÉåÊôØÂõæÈÄèÊòéÂ∫¶=0.8ÔºåÊúÄÂ§ß1*/\\n  }\\n  \\n  /**ÈöêËóèÈ¶ñÈ°µÁöÑÂ§ßÂõæÊ†á-‰øÆÂ§çÂèØËÉΩÂØºËá¥Â§ñÊè¥Ê†∑ÂºèÂºÇÂ∏∏**/\\n  #s_lg_img_new{\\n    display:none !important;\\n  }\\n  \\n  .c-container{\\n    border-radius: 5px;\\n    background-color: rgba(255,255,255, 0.6) !important; /*ÁôæÂ∫¶ÊêúÁ¥¢Âùó‰ΩìÁöÑÈ¢úËâ≤ÔºõÈÄèÊòéÂ∫¶=0.1ÔºåÊúÄÂ§ß1*/\\n    \\n    h3{\\n      background-color: rgba(248,248,248, 0.6) !important; /*ÁôæÂ∫¶ÊêúÁ¥¢Âùó‰Ωì - Ê†áÈ¢òÁöÑÈ¢úËâ≤ÔºõÈÄèÊòéÂ∫¶=0.1ÔºåÊúÄÂ§ß1*/\\n    }\\n  }\\n}\\nbody[google] {\\n\\n  &:before {\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    content: '';\\n    background-image: url('https://img.tujidu.com/image/620210010b2cd.jpg');\\n    background-size: 100% auto;\\n    opacity: 0.8; /*ËÉåÊôØÂõæÈÄèÊòéÂ∫¶=0.8ÔºåÊúÄÂ§ß1*/\\n  }\\n  \\n  #rso .g, .sfbg, .f6F9Be, .k8XOCe {\\n    background-color: rgba(248,248,248, 0.6) !important; \\n  }\\n  \\n  .sfbg{\\n    margin-top: -10px;\\n  }\\n  \\n  .yg51vc{\\n    background-color: transparent !important; \\n  }\\n}\\n\\n\",\"oldVersion\":\"25.05\",\"lastSaveTime\":1650502834207,\"zhihu\":{\"name\":\"zhihu\",\"AdsStyleMode\":\"0\",\"HuYanMode\":false},\"other\":{\"name\":\"other\",\"AdsStyleMode\":\"0\",\"HuYanMode\":false},\"acceptLicense\":true}"}},"enabled":true,"position":13,"file_url":"https://greasyfork.org/scripts/14178-ac-baidu-%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E6%90%9C%E7%8B%97%E8%B0%B7%E6%AD%8C%E5%BF%85%E5%BA%94%E6%90%9C%E7%B4%A2-favicon-%E5%8F%8C%E5%88%97/code/AC-baidu:%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E6%90%9C%E7%8B%97%E8%B0%B7%E6%AD%8C%E5%BF%85%E5%BA%94%E6%90%9C%E7%B4%A2_favicon_%E5%8F%8C%E5%88%97.user.js","uuid":"168a8061-d587-4de4-b2af-604d50a540d3","source":"","resources":[{"meta":{"name":"baiduCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduCommonStyle.css?t=25.05","ts":1653206397120,"mimetype":"text/css"},"source":""},{"meta":{"name":"baiduOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduOnePageStyle.css?t=25.05","ts":1653206397124,"mimetype":"text/css"},"source":"LyoqU3RvcmUgQmFpZHVPbmVQYWdlU3R5bGUqKi8NCiN3cmFwcGVyX3dyYXBwZXIgI2NvbnRhaW5lcnsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQ7DQp9DQpmb3JtLmZtew0KICAgIHBvc2l0aW9uOnJlbGF0aXZlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHVuc2V0Ow0KfQ0KYm9keVtiYWlkdV0gLnBhZ2Vmb290Lmdqew0KICAgIG1hcmdpbi10b3A6IDEwMHB4Ow0KfQ0KLndyYXBwZXJfbmV3IC5oZWFkX3dyYXBwZXIgI3Jlc3VsdF9sb2dvew0KICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KI3NfdGFiIGIsI3NfdGFiIGF7DQogICAgcG9zaXRpb246cmVsYXRpdmU7DQp9DQojd3JhcHBlciAuaGVhZF9udW1zX2NvbnRfb3V0ZXJ7DQogICAgcG9zaXRpb246YWJzb2x1dGU7DQogICAgbGVmdDogMjAlOw0KICAgIHdpZHRoOiA2MCU7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0ew0KICAgIG1hcmdpbjogMCBhdXRvICFpbXBvcnRhbnQ7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldCAhaW1wb3J0YW50Ow0KfQ0KI3dyYXBwZXIgICNjb250ZW50X2xlZnQsI3dyYXBwZXIgI2NvbnRhaW5lci5zYW1fbmV3Z3JpZCAjcnMsICN3cmFwcGVyICNwYWdlew0KICAgIHBvc2l0aW9uOnJlbGF0aXZlOw0KICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsNCiAgICBtaW4td2lkdGg6IDY3MHB4Ow0KICAgIGZsb2F0OnVuc2V0Ow0KICAgIG1hcmdpbi1sZWZ0OiB1bnNldDsNCiAgICBtYXJnaW46IDAgYXV0bzsNCn0NCg0KI3dyYXBwZXIgI3BhZ2V7DQogICAgYmFja2dyb3VuZDogdW5zZXQ7DQp9DQojd3JhcHBlciAjcnMgdGh7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KI3dyYXBwZXIgI3Jzew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBtYXJnaW46IDMwcHggYXV0byAtMjBweCBhdXRvOw0KfQ0KDQojd3JhcHBlciAgI2NvbnRlbnRfbGVmdCAucmVzdWx0LA0KI3dyYXBwZXIgICNjb250ZW50X2xlZnQgLnJlc3VsdC1vcCwNCiN3cmFwcGVyICNjb250ZW50X2xlZnQgZGl2W2NsYXNzKj0ndm1wLXByb2plY3QnXSwNCiN3cmFwcGVyICAjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lcnsNCiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgIG1pbi13aWR0aDogNjUwcHg7DQp9DQpAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHsNCiAgICAjd3JhcHBlciAgI2NvbnRlbnRfbGVmdCwgI3dyYXBwZXIgICNyc3sNCiAgICAgICAgbWluLXdpZHRoOjgwMHB4Ow0KICAgIH0NCn0NCiN3cmFwcGVyICNjb250YWluZXIuc2FtX25ld2dyaWQgI2NvbnRlbnRfbGVmdHsNCiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7DQogICAgZGlzcGxheTogYmxvY2s7DQp9DQojd3JhcHBlciAjY29udGVudF9yaWdodHsNCiAgICBmbG9hdDogdW5zZXQ7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KfQ0KYm9keS5zaG93UmlnaHQgI3dyYXBwZXIgI2NvbnRhaW5lci5zYW1fbmV3Z3JpZCAjY29udGVudF9sZWZ0ew0KICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWChjYWxjKDZ2dyAtIDI1MXB4KSk7DQp9DQpib2R5LnNob3dSaWdodCAjd3JhcHBlciAjY29udGVudF9yaWdodHsNCiAgICByaWdodDogY2FsYygzNy41dncgLSA0NzBweCk7DQp9DQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpew0KICAgIGJvZHkuc2hvd1JpZ2h0ICN3cmFwcGVyICNjb250YWluZXIuc2FtX25ld2dyaWQgI2NvbnRlbnRfbGVmdHsNCiAgICAgICAgdHJhbnNmb3JtOiB1bnNldDsNCiAgICB9DQogICAgYm9keS5zaG93UmlnaHQgI3dyYXBwZXIgI2NvbnRlbnRfcmlnaHR7DQogICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgfQ0KfQ0KI3dyYXBwZXIgI3BhZ2UgYSwgI3dyYXBwZXIgI3BhZ2Ugc3Ryb25new0KICAgIG1hcmdpbi1yaWdodDogMjJweCAhaW1wb3J0YW50Ow0KfQ0KI3dyYXBwZXIgI3BhZ2UgLnBhZ2UtaW5uZXJ7DQogICAgcGFkZGluZy1sZWZ0OiAyMnB4Ow0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQouc190YWJfaW5uZXJ7DQogICAgZGlzcGxheTpibG9jayAhaW1wb3J0YW50Ow0KfQ0KI2NvbnRhaW5lciAuaGludF9jb21tb25fcmVzdG9wew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBsZWZ0OiBjYWxjKDQ1dncgLSA1MDBweCk7DQogICAgbWFyZ2luLXRvcDogMjVweDsNCn0NCi5BQy5zcC1zZXBhcmF0b3J7DQogICAgd2lkdGg6IGF1dG87DQp9DQovKnNlYXJjaCBlbmdpbmUganVtcCovDQojc2VqLWNvbnRhaW5lcnsNCiAgICBwYWRkaW5nLWxlZnQ6IDA7DQogICAgbWFyZ2luLWxlZnQ6IDA7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLnNfZm9ybV93cmFwcGVyIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KfQ0KI3dyYXBwZXIgI3NfdGFiew0KICAgIHBhZGRpbmctbGVmdDogMDsNCiAgICBtYXJnaW4tbGVmdDogMDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KfQ0KI3dyYXBwZXIgI2NvbnRhaW5lciAuaGVhZF9udW1zX2NvbnRfb3V0ZXIgLnNlYXJjaF90b29sX2NvbnRlciwNCiN3cmFwcGVyICNjb250YWluZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5udW1zIHsNCiAgICB3aWR0aDogNjklOw0KICAgIG1hcmdpbi1sZWZ0OiAxNiU7DQp9DQpmb3JtLmZtIC5zX2lwdF93ci5iZ3sNCiAgICBtaW4td2lkdGg6IGNhbGMoMzcuNXZ3IC0gMTUwcHgpOw0KfQ0KDQoucmVzdWx0LW1vbGVjdWxlLm5ldy1wbWQgew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICB6LWluZGV4OiAyMzM7DQoNCiAgICBtaW4td2lkdGg6IDgwMHB4Ow0KICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsNCiAgICBtYXJnaW4tdG9wOiA2cHg7DQogICAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7DQogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOw0KICAgIG1hcmdpbi1sZWZ0OiA1MCUgIWltcG9ydGFudDsNCn0NCg0KLm5ldy1wbWQgI3JzX25ldyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpOw0KICAgIHBhZGRpbmc6IDEwcHggMCAxMHB4IDIwcHg7DQp9DQoucmVzdWx0LW1vbGVjdWxlICNwYWdlID5kaXZ7DQogICAgd2lkdGg6IHVuc2V0Ow0KICAgIHBhZGRpbmctbGVmdDogdW5zZXQ7DQp9DQoNCi5uZXctcG1kICNyc19uZXcgdGFibGV7DQogICAgd2lkdGg6IDEwMCU7DQogICAgbWFyZ2luLXRvcDogMTJweDsNCn0NCg0KQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTkyMXB4KSB7DQogICAgI2hlYWQgLmhlYWRfd3JhcHBlcnsNCiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxNDBweCwwLDFweCk7DQogICAgfQ0KICAgIC53cmFwcGVyX25ldyAjc190YWIuc190YWIgLnNfdGFiX2lubmVyIHsNCiAgICAgICAgd2lkdGg6IDkwMHB4Ow0KICAgICAgICBwYWRkaW5nLWxlZnQ6IDI5NnB4Ow0KICAgIH0NCiAgICBmb3JtLmZtIC5zX2lwdF93ci5iZ3sNCiAgICAgICAgbWluLXdpZHRoOiBjYWxjKDM3LjV2dyAtIDE1MHB4KTsNCiAgICB9DQogICAgLmhlYWRfd3JhcHBlciAjdSB7DQogICAgICAgIHJpZ2h0OiAyMDBweDsNCiAgICB9DQp9DQpAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzY2cHgpIGFuZCAobWF4LXdpZHRoOiAxOTIwcHgpIHsNCiAgICAud3JhcHBlcl9uZXcgLmhlYWRfd3JhcHBlciAjcmVzdWx0X2xvZ297DQogICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgfQ0KfQ0K"},{"meta":{"name":"baiduTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduTwoPageStyle.css?t=25.05","ts":1653206397180,"mimetype":"text/css"},"source":"LyoqU3RvcmUgQmFpZHVUb3dQYWdlU3R5bGUqKi8NCiN3cmFwcGVyX3dyYXBwZXIgI2NvbnRhaW5lciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgbWFyZ2luLWxlZnQ6IHVuc2V0Ow0KfQ0KZm9ybS5mbXsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7DQp9DQojc190YWIgYiwgI3NfdGFiIGEgew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCiN3cmFwcGVyICNzX3RhYnsNCiAgICBwYWRkaW5nLWxlZnQ6IDA7DQogICAgbWFyZ2luLWxlZnQ6IDA7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCiN3cmFwcGVyIC5oZWFkX251bXNfY29udF9vdXRlciAuc2VhcmNoX3Rvb2xfY29udGVyLA0KI3dyYXBwZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5udW1zIHsNCiAgICB3aWR0aDogODAlOw0KICAgIG1hcmdpbi1sZWZ0OiAxMCU7DQp9DQojd3JhcHBlciAgLmhlYWRfbnVtc19jb250X291dGVyLA0KLmhpbnRfY29tbW9uX3Jlc3RvcCwNCiNoZWFkZXJfdG9wX2JhciB7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIGxlZnQ6IDEwJTsNCiAgICB3aWR0aDogODAlOw0KfQ0KI3dyYXBwZXIgI2NvbnRlbnRfbGVmdCwgI2NvbnRhaW5lciAucmVzdWx0LW1vbGVjdWxlIHsNCiAgICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50Ow0KICAgIHBhZGRpbmctbGVmdDogdW5zZXQgIWltcG9ydGFudDsNCn0NCiN3cmFwcGVyICNoZWFkZXJfdG9wX2JhcnsNCiAgICBtYXJnaW4tYm90dG9tOiAwcHg7DQp9DQpib2R5ICNjb250YWluZXIuc2FtX25ld2dyaWQgI2NvbnRlbnRfbGVmdHsNCiAgICB3aWR0aDogODAlOw0KfQ0KI3dyYXBwZXIgI2NvbnRlbnRfbGVmdHsNCiAgICBkaXNwbGF5OiBncmlkOw0KICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTsNCiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAieG1haW4geG1haW4iOw0KICAgIG1hcmdpbjogMCBhdXRvOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBwYWRkaW5nLWxlZnQ6IDUlOw0KICAgIGZsb2F0OiB1bnNldDsNCiAgICB3aWR0aDogODAlOw0KICAgIG1hcmdpbi1sZWZ0OjclOw0KICAgIG1hcmdpbi1ib3R0b206IDMwcHg7DQp9DQpib2R5W25ld3NdICN3cmFwcGVyICNjb250ZW50X2xlZnQ+ZGl2Om5vdChbY2xhc3NdKTpub3QoW2lkXSl7DQogICAgZGlzcGxheTogZ3JpZDsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7DQogICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogInhtYWluIHhtYWluIjsNCn0NCiN3cmFwcGVyICNjb250ZW50X3JpZ2h0ew0KICAgIGRpc3BsYXk6bm9uZSAhaW1wb3J0YW50Ow0KfQ0KI3dyYXBwZXJfd3JhcHBlciAjY29udGFpbmVyICNyc3sNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQojd3JhcHBlciAjcGFnZSB7DQogICAgbWluLXdpZHRoOiA3MTBweDsNCiAgICBoZWlnaHQ6IDQwcHg7DQogICAgbGluZS1oZWlnaHQ6IDQwcHg7DQogICAgcGFkZGluZzogNXB4IDEwcHg7DQogICAgbWFyZ2luOiAwIGF1dG87DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCiN3cmFwcGVyICNwYWdlIC5wYWdlLWlubmVyew0KICAgIHBhZGRpbmctbGVmdDogMDsNCn0NCiN3cmFwcGVyICAjY29udGVudF9sZWZ0IC5yZXN1bHQsDQojd3JhcHBlciAgI2NvbnRlbnRfbGVmdCAucmVzdWx0LW9wLA0KI3dyYXBwZXIgI2NvbnRlbnRfbGVmdCBkaXZbY2xhc3MqPSd2bXAtcHJvamVjdCddLA0KI3dyYXBwZXIgICNjb250ZW50X2xlZnQgLmMtY29udGFpbmVyIHsNCiAgICB3aWR0aDogdW5zZXQgIWltcG9ydGFudDsNCiAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgbWFyZ2luLWxlZnQ6IDA7DQogICAgbWFyZ2luLXJpZ2h0OiAxNXB4Ow0KfQ0KDQojd3JhcHBlciAgI2NvbnRlbnRfbGVmdD4qOm5vdChbY2xhc3MqPSdyZXN1bHQnXSk6bm90KFtjbGFzcyo9J2MtZ3JvdXAtd3JhcHBlciddKXsNCglncmlkLWNvbHVtbi1zdGFydDogMTsNCiAgICBncmlkLWNvbHVtbi1lbmQ6IHhtYWluLWVuZDsNCn0NCi5jLWNvbnRhaW5lciBoMyBhew0KICAgIHotaW5kZXg6MTsNCn0NCi5BQy5zcC1zZXBhcmF0b3J7DQogICAgd2lkdGg6IGF1dG87DQp9DQovKnNlYXJjaCBlbmdpbmUganVtcCovDQojc2VqLWNvbnRhaW5lcnsNCiAgICBwYWRkaW5nLWxlZnQ6IDA7DQogICAgbWFyZ2luLWxlZnQ6IDA7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLnNfZm9ybV93cmFwcGVyIHsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KfQ0KDQoucmVzdWx0LW1vbGVjdWxlLm5ldy1wbWQgew0KICAgIG1hcmdpbjogMCBhdXRvOw0KICAgIG1pbi13aWR0aDogODAwcHg7DQogICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50Ow0KICAgIHBhZGRpbmctbGVmdDogMjBweDsNCn0NCg0KLnJlc3VsdC1tb2xlY3VsZSAjcGFnZSA+ZGl2ew0KICAgIHdpZHRoOiB1bnNldDsNCiAgICBwYWRkaW5nLWxlZnQ6IHVuc2V0Ow0KfQ0KDQoubmV3LXBtZCAjcnNfbmV3IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7DQogICAgcGFkZGluZzogMTBweCAwIDEwcHggMjBweDsNCn0NCg0KLm5ldy1wbWQgI3JzX25ldyB0YWJsZXsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBtYXJnaW4tdG9wOiAxMnB4Ow0KfQ0KDQojd3JhcHBlciAuaGVhZF9udW1zX2NvbnRfb3V0ZXIgLnNlYXJjaF90b29sX2NvbnRlciwNCiN3cmFwcGVyIC5oZWFkX251bXNfY29udF9vdXRlciAubnVtcyB7DQogICAgd2lkdGg6IDgwJTsNCn0NCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1MDBweCkgew0KICAgIGZvcm0uZm0gLnNfaXB0X3dyLmJnew0KICAgICAgICBtaW4td2lkdGg6IDQ1MHB4DQogICAgfQ0KICAgIC53cmFwcGVyX25ldyAuaGVhZF93cmFwcGVyICNyZXN1bHRfbG9nb3sNCiAgICAgICAgbWFyZ2luLWxlZnQ6IC0xNzBweDsNCiAgICB9DQp9DQpAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxOTIxcHgpIHsNCiAgICAjc190YWIuc190YWIgLnNfdGFiX2lubmVyIHsNCiAgICAgICAgd2lkdGg6IDkwMHB4Ow0KICAgIH0NCiAgICBmb3JtLmZtIC5zX2lwdF93ci5iZ3sNCiAgICAgICAgbWluLXdpZHRoOiA5MDBweA0KICAgIH0NCn0NCg=="},{"meta":{"name":"baiduLiteStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduLiteStyle.css?t=25.05","ts":1653206397146,"mimetype":"text/css"},"source":""},{"meta":{"name":"googleCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/googleCommonStyle.css?t=25.05","ts":1653206397141,"mimetype":"text/css"},"source":""},{"meta":{"name":"googleOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/googleOnePageStyle.css?t=25.05","ts":1653206397142,"mimetype":"text/css"},"source":"LyoqU3RvcmUgR29vZ2xlVHdvUGFnZVN0eWxlKiovDQojc2VhcmNoICNyc28gew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBmbG9hdDogdW5zZXQ7DQogICAgd2lkdGg6IDgwMHB4Ow0KICAgIG1hcmdpbjogMCBhdXRvOw0KICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOw0KICAgIGp1c3RpZnktaXRlbXM6IHN0cmV0Y2g7DQogICAgZ3JpZC1nYXA6IDIwcHg7DQp9DQojcnNvIC5qVW1rRmI6aG92ZXIgew0KICAgIG1hcmdpbi1ib3R0b206IDMwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQp9DQojcnNvIC5new0KICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgcGFkZGluZzogMHB4IDIwcHggMTVweDsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgY3ViaWMtYmV6aWVyKC4yMywxLC4zMiwxKSAwczsNCn0NCiNyc28+ZGl2IHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCi5zZWFyY2g+I2lyZXMgI3Jzbz4uZ3sNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI3Jzbz4uZyB+IGRpdjpub3QoLmcpew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgbWFyZ2luLWJvdHRvbTogMTBweDsNCn0NCiNtYWluICNyY250ew0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQpib2R5ICNhcHBiYXIsYm9keSAucmhzY29sLCBib2R5ICN0b3BfbmF2LCBib2R5ICNmYmFyew0KICAgIG1pbi13aWR0aDogdW5zZXQ7DQp9DQojcnNvIGctc2Nyb2xsaW5nLWNhcm91c2Vsew0KICAgIG1hcmdpbjogdW5zZXQ7DQogICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQp9DQouY29sew0KICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQp9DQouY29sICNjZW50ZXJfY29sew0KICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgbWFyZ2luLWxlZnQ6IHVuc2V0ICFpbXBvcnRhbnQ7DQp9DQouc3JwIC5iaWcgI3RzZnsNCiAgICB3aWR0aDogODMzcHg7DQp9DQovKipzZWFyY2ggYm94IGFsaWduIGNlbnRlcioqLw0KLnNycCBmb3Jtew0KICAgIG1hcmdpbjogMCBhdXRvOw0KfQ0KI3RvcF9uYXZ7DQogICAgbWluLXdpZHRoOiB1bnNldDsNCn0NCi8qKnZpZGVvIGJveCBhbGlnbiBjZW50ZXIqKi8NCmctc2VjdGlvbi13aXRoLWhlYWRlcnsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQojaGR0YiAjaGR0Yi1tc2J7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgd2lkdGg6IDEwMCU7DQp9DQojaGR0YiAjaGR0Yi1tc2Itdmlzew0KICAgIG1hcmdpbi1sZWZ0OiAtMTY5cHg7DQp9DQouQUMuc3Atc2VwYXJhdG9yIHsNCiAgICBtYXJnaW4tdG9wOiAtMjBweDsNCiAgICB3aWR0aDogODAwcHg7DQogICAgbWFyZ2luLWxlZnQ6IGF1dG87DQogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOw0KfQ0KLkZ4TERwew0KICAgIHBhZGRpbmc6IHVuc2V0Ow0KfQ0KI21haW4gI2NudCwgI2NudCAjY2VudGVyX2NvbCwgI2NudCAjZm9vdHsNCiAgICB3aWR0aDogY2FsYygzNi4zdncgKyA1MjVweCk7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjE0NDBweCl7DQogICAgLlJOTlhnYnsNCiAgICAgICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50Ow0KICAgIH0NCn0NCg=="},{"meta":{"name":"googleTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/googleTwoPageStyle.css?t=25.05","ts":1653206397142,"mimetype":"text/css"},"source":"LyoqU3RvcmUgR29vZ2xlVHdvUGFnZVN0eWxlKiovDQojc2VhcmNoICNyc28gew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBmbG9hdDogdW5zZXQ7DQogICAgd2lkdGg6IHVuc2V0Ow0KfQ0KI3JzbyAualVta0ZiOmhvdmVyIHsNCiAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KfQ0KI3JzbyAuZywgLnZrX2N7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTVweDsNCiAgICBtYXJnaW4tdG9wOiAwOw0KICAgIG1hcmdpbi1ib3R0b206IDA7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgY3ViaWMtYmV6aWVyKC4yMywxLC4zMiwxKSAwczsNCn0NCi5zZWFyY2g+I2lyZXMgI3JzbyAuZ3sNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI21haW4gI3JjbnQgI3Joc3sNCiAgICBkaXNwbGF5Om5vbmU7DQp9DQojbWFpbiAjcmNudHsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI21haW4gI2NudCwgI2NudCAjY2VudGVyX2NvbCwgI2NudCAjZm9vdHsNCiAgICB3aWR0aDogY2FsYyg1NHZ3ICsgMzYwcHgpOw0KICAgIG1hcmdpbjogMCBhdXRvOw0KfQ0KYm9keSAjYXBwYmFyLGJvZHkgLnJoc2NvbCwgYm9keSAjdG9wX25hdiwgYm9keSAjZmJhcnsNCiAgICBtaW4td2lkdGg6IHVuc2V0Ow0KfQ0KI3JzbyAuQ09Fb2lkLA0KI2twLXdwLXRhYi1vdmVydmlldz5kaXZ7DQogICAgbWFyZ2luOiB1bnNldDsNCn0NCi5jb2x7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCn0NCi5jb2wgI2NlbnRlcl9jb2x7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQgIWltcG9ydGFudDsNCn0NCi5zcmcsICNyc28sICNyc28+ZGl2LCAja3Atd3AtdGFiLW92ZXJ2aWV3ew0KCWRpc3BsYXk6IGdyaWQ7DQoJZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsbWlubWF4KDUwJSwxZnIpKTsNCiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAieG1haW4geG1haW4iOw0KICAgIGdyaWQtZ2FwOiAyMHB4ICFpbXBvcnRhbnQ7DQogICAganVzdGlmeS1pdGVtczogc3RyZXRjaDsNCiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDsNCiAgICB3aWR0aDogMTAwJTsNCn0NCiNyc28+LmcgfiBkaXY6bm90KC5nKXsNCiAgICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KfQ0KLkFDLnNwLXNlcGFyYXRvciB7DQogICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICBtYXJnaW4tbGVmdDogYXV0bzsNCiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87DQp9DQovKipzZWFyY2ggYm94IGFsaWduIGNlbnRlcioqLw0KLnNycCBmb3Jtew0KICAgIG1hcmdpbjowIGF1dG87DQp9DQpnLXNlY3Rpb24td2l0aC1oZWFkZXJ7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KI2hkdGIgI2hkdGItbXNiew0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KI2hkdGIgI2hkdGItbXNiLXZpc3sNCiAgICBtYXJnaW4tbGVmdDogLTE2OXB4Ow0KfQ0K"},{"meta":{"name":"bingCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/bingCommonStyle.css?t=25.05","ts":1653206397149,"mimetype":"text/css"},"source":"LypTdG9yZSBCaW5nQ29tbW9uU3R5bGUqLw0KYm9keSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsNCn0NCi5zaF9mYXZpY29uew0KICAgIG1hcmdpbi1sZWZ0OiAxNnB4Ow0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzPmxpOm5vdCgjbWZhX3Jvb3QpIHsNCiAgICB3aWR0aDogNjcwcHg7DQogICAgcGFkZGluZzogMTJweCAyMHB4ICFpbXBvcnRhbnQ7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgIG1hcmdpbi1ib3R0b206IDI1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7DQogICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGN1YmljLWJlemllciguMjMsMSwuMzIsMSkgMHM7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBhLA0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGEgew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBjb2xvcjogIzM0NzZkMjsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhLCAjYl9yZXN1bHRzIGgyIHN0cm9uZ3sNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBmb250LXNpemU6IG1lZGl1bTsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cz5saTpob3ZlciB7DQogICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjMpOw0KICAgIGJhY2tncm91bmQ6ICNGQ0ZDRkMgIWltcG9ydGFudDsNCiAgICBib3gtc2hhZG93OiAwIDAgMXB4IGdyZXk7DQogICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMXB4IGdyZXk7DQogICAgLW1vei1ib3gtc2hhZG93OiAwIDAgMXB4IGdyYXk7DQp9DQojYl9jb250ZW50ID4jYl9yZXN1bHRzIGxpOm5vdCgjbWZhX3Jvb3QpIGgyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KICAgIG1hcmdpbjogLTEycHggLTIwcHggMTBweCAtMjBweDsNCiAgICBwYWRkaW5nOiA4cHggMjBweCA1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCAwcHggMHB4Ow0KfQ0KDQphLCBhIHN0cm9uZyB7DQogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KfQ0KDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgYSBzdHJvbmcsDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYSBzdHJvbmcgew0KICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCi5iX2FsZ286Zmlyc3QtY2hpbGQ6aG92ZXIgaDIgYXsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBhOmhvdmVyOmFmdGVyLA0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGE6aG92ZXI6YWZ0ZXIgew0KICAgIGxlZnQ6IDA7DQogICAgd2lkdGg6IDEwMCU7DQogICAgLXdlYmtpdC10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICAtbW96LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KICAgIHRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzIGE6aG92ZXIsDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYTpob3ZlcnsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgYTphZnRlciwNCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOmFmdGVyIHsNCiAgICBjb250ZW50OiAiIjsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzNDc2ZDI7DQogICAgYm90dG9tOiAtMnB4Ow0KICAgIGxlZnQ6IDEwMCU7DQogICAgd2lkdGg6IDA7DQogICAgLXdlYmtpdC10cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCiAgICAtbW96LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zLCBsZWZ0IDM1MG1zOw0KICAgIHRyYW5zaXRpb246IHdpZHRoIDM1MG1zLCBsZWZ0IDM1MG1zOw0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGE6dmlzaXRlZCwNCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOnZpc2l0ZWQgc3Ryb25nLA0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGgyIGE6dmlzaXRlZCwNCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBoMiBhOnZpc2l0ZWQgc3Ryb25nIHsNCiAgICBjb2xvcjogIzY2MDA5OTsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXIsDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgaDIgYTp2aXNpdGVkOmhvdmVyOmFmdGVyIHsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCn0NCiNiX2NvbnRlbnQ+b2wjYl9jb250ZXh0ew0KICAgIGRpc3BsYXk6bm9uZTsNCn0NCmJvZHkgI2JfaGVhZGVyew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQojYl9jb250ZW50IC5iX3VuZGVyU2VhcmNoYm94ew0KICAgIG1hcmdpbi10b3A6IDEwcHg7DQp9DQojYl9oZWFkZXIgLmJfc2NvcGViYXJ7DQogICAgbWFyZ2luOiB1bnNldDsNCn0NCi8qc2VhcmNoIGVuZ2luZSBqdW1wKi8NCi50c2YtcD4ubG9nb2NvbnQsICNzZWotY29udGFpbmVyew0KICAgIG1hcmdpbi1yaWdodDogMzUwcHg7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLnRzZi1wPi5zZmliYmJjew0KICAgIG1hcmdpbi1yaWdodDogMzUwcHg7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLmJfc2VhcmNoYm94Rm9ybSAuc2FfdG17DQogICAgdGV4dC1hbGlnbjogbGVmdDsgLyogU2VhcmNoQm94IHRleHQgQ2VudGVyICovDQp9DQpib2R5ICNiX2hlYWRlciAjZXN0X3N3aXRjaHsNCiAgICBtYXJnaW46IDAgYXV0bzsNCiAgICBwYWRkaW5nLXJpZ2h0OiAxMCU7IC8qKlRPRE8qKiovDQp9DQpib2R5ICNlc3RfY246OmFmdGVyLCBib2R5ICNlc3RfZW46OmFmdGVyew0KICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xLDEuMykgcGVyc3BlY3RpdmUoLjVlbSkgcm90YXRlWCgwZGVnKTsNCiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4xLDEuMykgcGVyc3BlY3RpdmUoLjVlbSkgcm90YXRlWCgwZGVnKTsNCn0NCkBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpew0KICAgIGJvZHkgI2JfaGVhZGVyICNlc3Rfc3dpdGNoew0KICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMS4ycmVtKTsNCiAgICB9DQp9DQovKiBTZWFyY2hJdG1lcyBCb3R0b20gdG8gVG9wIGFuaSAqLw0KI2JfY29udGVudHsNCiAgICBhbmltYXRpb24tbmFtZTogYW5pX3RvcFRvYnV0dG9tOw0KICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC42czsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlOw0KfQ0KDQovKiBTZWFyY2hCYXIgTGVmdCB0byBSaWdodCBhbmkgKi8NCmJvZHkgI2JfaGVhZGVyIHsNCiAgICBhbmltYXRpb24tbmFtZTogYW5pX3RvcFRvYnV0dG9tOw0KICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC42czsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsNCn0NCmJvZHl7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV9oaWRlVG9TaG93Ow0KICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC42czsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsNCn0NCi5BQy5zcC1zZXBhcmF0b3J7DQogICAgbWFyZ2luLXRvcDogLTE1cHg7DQp9DQpAa2V5ZnJhbWVzIGFuaV9sZWZ0VG9yaWdodCB7DQogICAgMCUgew0KICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMycHgpOw0KICAgICAgICBvcGFjaXR5OiAwLjI7DQogICAgfQ0KICAgIDIwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuNTsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQovKiBhbmkgKi8NCkBrZXlmcmFtZXMgYW5pX2JvdHRvbVRvdG9wIHsNCiAgICAwJSB7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMC4yOw0KICAgIH0NCiAgICAyMCUgew0KICAgICAgICBvcGFjaXR5OiAwLjU7DQogICAgfQ0KICAgIDMwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuODsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIG9wYWNpdHk6IDE7DQogICAgfQ0KfQ0KQC13ZWJraXQta2V5ZnJhbWVzIGFuaV90b3BUb2J1dHRvbSB7DQogICAgMCUgew0KICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTMycHgpOw0KICAgICAgICBvcGFjaXR5OiAwLjI7DQogICAgfQ0KICAgIDIwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuNTsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQpALXdlYmtpdC1rZXlmcmFtZXMgYW5pX2hpZGVUb1Nob3cgew0KICAgIDAlIHsNCiAgICAgICAgZGlzcGxheTpub25lOw0KICAgICAgICBvcGFjaXR5OiAwLjI7DQogICAgfQ0KICAgIDIwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuNTsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQo="},{"meta":{"name":"bingOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/bingOnePageStyle.css?t=25.05","ts":1653206397151,"mimetype":"text/css"},"source":"LypTdG9yZSBCaW5nT25lUGFnZVN0eWxlKi8NCiNiX2NvbnRlbnQgYXNpZGV7DQogICAgZGlzcGxheTpub25lOw0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzew0KICAgIHdpZHRoOiA3M3Z3Ow0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIG1heC13aWR0aDogMTAwMHB4Ow0KfQ0KYm9keSAjYl9oZWFkZXJ7DQogICAgd2lkdGg6IDcydnc7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIG1hcmdpbjogMCBhdXRvOw0KfQ0KYm9keSAjYl9jb250ZW50ew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgbWFyZ2luLWxlZnQ6IHVuc2V0Ow0KICAgIHBhZGRpbmctbGVmdDogdW5zZXQ7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHM+bGk6bm90KCNtZmFfcm9vdCkgew0KICAgIHdpZHRoOjk4JTsNCn0NCg=="},{"meta":{"name":"bingTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/bingTwoPageStyle.css?t=25.05","ts":1653206397177,"mimetype":"text/css"},"source":"LypTdG9yZSBCaW5nVHdvUGFnZVN0eWxlKi8NCiNjb250YWluZXIgI2NvbnRlbnRfbGVmdCAuaGl0X3RvcF9uZXcsDQojYl9jb250ZW50IGFzaWRlLCAjYl9yZXN1bHRzICNtZmFfcm9vdHsNCiAgICBkaXNwbGF5Om5vbmU7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHN7DQogICAgd2lkdGg6IDczdnc7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsbWlubWF4KDUwJSwxZnIpKTsNCiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAieG1haW4geG1haW4iOw0KICAgIGRpc3BsYXk6IGdyaWQ7DQp9DQouY2Fyb3VzZWwgLml0ZW1zew0KICAgIG1heC13aWR0aDogNzJ2dzsNCiAgICBvdmVyZmxvdy14OiBzY3JvbGw7DQogICAgcGFkZGluZzogMCAwIDEwcHggMCAhaW1wb3J0YW50Ow0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzPmxpOm5vdCgjbWZhX3Jvb3QpIHsNCiAgICB3aWR0aDo5OCU7DQogICAgbWFyZ2luLWxlZnQ6IDElOw0KfQ0KI2JfY29udGVudCAjYl9wb2xlew0KICAgIG1heC13aWR0aDogNzJ2dzsNCiAgICBtYXJnaW46IDAgYXV0bzsNCn0NCiNiX3Jlc3VsdHMgLmJfYWxnbyAuYl9kZWVwIHVsew0KICAgIHdpZHRoOiA1MCU7DQp9DQojYl9tc2csICNiX3BhZ3sNCiAgICBncmlkLWNvbHVtbi1lbmQ6IHhtYWluLWVuZDsNCiAgICBncmlkLWNvbHVtbi1zdGFydDogMTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KfQ0KYm9keSAjYl9jb250ZW50ew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgbWFyZ2luLWxlZnQ6IHVuc2V0Ow0KICAgIHBhZGRpbmctbGVmdDogdW5zZXQ7DQp9DQpib2R5ICNiX2hlYWRlcnsNCiAgICB3aWR0aDogNzJ2dzsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQo="},{"meta":{"name":"duckCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/duckCommonStyle.css?t=25.05","ts":1653206397181,"mimetype":"text/css"},"source":"LypTdG9yZTogRHVja0R1Y2tHb0NvbW1vblN0eWxlKi8NCmJvZHkgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQoucmVzdWx0X19pY29uIC5yZXN1bHRfX2ljb25fX2ltZywgLnJlc3VsdF9faWNvbiAucmVzdWx0X19pY29uIGltZ3sNCiAgICBkaXNwbGF5OiBub25lOw0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDJ7DQogICAgZm9udC13ZWlnaHQ6IDYwMDsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluew0KICAgIG1heC13aWR0aDogNjcwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCB7DQogICAgd2lkdGg6IDY3MHB4Ow0KICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgIG1hcmdpbi1ib3R0b206IDI1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7DQogICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGN1YmljLWJlemllciguMjMsMSwuMzIsMSkgMHM7DQp9DQouZGFyay1iZyAjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOw0KfQ0KLmRhcmstYmcgI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDU7DQp9DQouZGFyay1iZyAjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X190aXRsZSBhIHsNCiAgICBjb2xvcjogI0NDQ0NDQzsNCn0NCi5kYXJrLWJnICNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIC5yZXN1bHRfX3RpdGxlIGE6dmlzaXRlZCB7DQogICAgY29sb3I6ICNiNzY2M2U7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X190aXRsZSBhIHsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOw0KICAgIG1heC13aWR0aDogNjQwcHg7DQogICAgY29sb3I6ICMzNDc2ZDI7DQogICAgZm9udC1zaXplOiBzbWFsbGVyOw0KfQ0KDQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X19ib2R5ew0KICAgIHBhZGRpbmc6IDEycHggMjBweCAhaW1wb3J0YW50Ow0KfQ0KDQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcDpob3ZlciB7DQogICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjMpOw0KICAgIGJveC1zaGFkb3c6IDAgMCAxcHggZ3JleTsNCiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAxcHggZ3JleTsNCiAgICAtbW96LWJveC1zaGFkb3c6IDAgMCAxcHggZ3JheTsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KICAgIG1hcmdpbjogLTEycHggLTIwcHggMHB4IC0yMHB4Ow0KICAgIHBhZGRpbmc6IDhweCAyMHB4IDVweDsNCiAgICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDBweCAwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOmhvdmVyOmFmdGVyIHsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6YWZ0ZXIgew0KICAgIGNvbnRlbnQ6ICIiOw0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzM0NzZkMjsNCiAgICBib3R0b206IDFweDsNCiAgICBsZWZ0OiAxMDAlOw0KICAgIHdpZHRoOiAwOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZCwNCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZCBzdHJvbmcgew0KICAgIGNvbG9yOiAjNjYwMDk5Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgYTp2aXNpdGVkOmhvdmVyOmFmdGVyLA0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgYTp2aXNpdGVkOmhvdmVyOmFmdGVyIHsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCn0NCg0KLyogU2VhcmNoSXRtZXMgQm90dG9tIHRvIFRvcCBhbmkgKi8NCiNsaW5rc193cmFwcGVyICNsaW5rcyB7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV90b3BUb2J1dHRvbTsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IC4zczsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlOw0KfQ0KDQovKiBTZWFyY2hCYXIgTGVmdCB0byBSaWdodCBhbmkgKi8NCiNoZWFkZXJfd3JhcHBlciAuaGVhZGVyX19zZWFyY2gtd3JhcCB7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV9sZWZ0VG9yaWdodDsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IC4zczsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsNCn0NCkBrZXlmcmFtZXMgYW5pX2xlZnRUb3JpZ2h0IHsNCiAgICAwJSB7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzJweCk7DQogICAgICAgIG9wYWNpdHk6IDAuMjsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMC41Ow0KICAgIH0NCiAgICAzMCUgew0KICAgICAgICBvcGFjaXR5OiAwLjg7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgIH0NCn0NCi8qIGFuaSAqLw0KQGtleWZyYW1lcyBhbmlfYm90dG9tVG90b3Agew0KICAgIDAlIHsNCiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMycHgpOw0KICAgICAgICBvcGFjaXR5OiAwLjI7DQogICAgfQ0KICAgIDIwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuNTsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQo="},{"meta":{"name":"duckOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/duckOnePageStyle.css?t=25.05","ts":1653206397172,"mimetype":"text/css"},"source":"LypTdG9yZTogRHVja0R1Y2tHb09uZVBhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsICNvcmdhbmljLW1vZHVsZSwgLnBpbm5lZC10by1ib3R0b217DQogICAgZGlzcGxheTogbm9uZTsNCn0NCi5qcy1yZXN1bHQtaGlkZGVuLWVsew0KICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsNCn0NCi5zaXRlLXdyYXBwZXIgI3dlYl9jb250ZW50X3dyYXBwZXIgLmN3IHsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIG1heC13aWR0aDogdW5zZXQ7DQogICAgbWFyZ2luLWxlZnQ6IC0xNTBweDsNCn0NCg0KI2hlYWRlcl93cmFwcGVyICNoZWFkZXIsDQojd2ViX2NvbnRlbnRfd3JhcHBlciAjbGlua3Nfd3JhcHBlciAuc2VhcmNoLWZpbHRlcnMtd3JhcCwNCiN3ZWJfY29udGVudF93cmFwcGVyICNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tZXNzYWdlew0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGRpc3BsYXk6IGdyaWQ7DQp9DQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciB7DQogICAgbWF4LXdpZHRoOiB1bnNldDsNCn0NCg0KDQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciAuaGVhZGVyX19zZWFyY2gtd3JhcCB7DQogICAgd2lkdGg6IDUwMHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXJ7DQogICAgZGlzcGxheTogaW5saW5lLWZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbnsNCiAgICBmbG9hdDogdW5zZXQ7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhcnsNCiAgICBtaW4td2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbjogdW5zZXQ7DQp9DQouYm9keS0tc2VycCAuZm9vdGVyew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCg=="},{"meta":{"name":"duckTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/duckTwoPageStyle.css?t=25.05","ts":1653206397177,"mimetype":"text/css"},"source":"LypTdG9yZTogRHVja0R1Y2tHb1R3b1BhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsDQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhciwNCiNvcmdhbmljLW1vZHVsZSwNCi5waW5uZWQtdG8tYm90dG9tew0KICAgIGRpc3BsYXk6IG5vbmU7DQp9DQouanMtcmVzdWx0LWhpZGRlbi1lbHsNCiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7DQp9DQouc2l0ZS13cmFwcGVyICN3ZWJfY29udGVudF93cmFwcGVyIC5jdyB7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyLA0KI3dlYl9jb250ZW50X3dyYXBwZXIgI2xpbmtzX3dyYXBwZXIgLnNlYXJjaC1maWx0ZXJzLXdyYXAsDQojd2ViX2NvbnRlbnRfd3JhcHBlciAjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWVzc2FnZXsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBncmlkOw0KfQ0KI2hlYWRlcl93cmFwcGVyICNoZWFkZXIgew0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyIC5oZWFkZXJfX3NlYXJjaC13cmFwIHsNCiAgICB3aWR0aDogNTAwcHg7DQp9DQojbGlua3Nfd3JhcHBlcnsNCiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluew0KICAgIGZsb2F0OiB1bnNldDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLXNpZGViYXJ7DQogICAgbWluLXdpZHRoOiB1bnNldDsNCiAgICBtYXJnaW46IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW4gI2xpbmtzew0KICAgIHdpZHRoOiA4MHZ3Ow0KICAgIC8qIFRoaXMgbWF5IGNhdXNlIFBhZ2UgZmFpbGVkICovDQogICAgZGlzcGxheTogZ3JpZDsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7DQogICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogInhtYWluIHhtYWluIjsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwew0KICAgIHdpZHRoOiB1bnNldDsNCiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7DQp9DQojbGlua3MgLnJlc3VsdC0tbW9yZSwgI2xpbmtzIC5yZXN1bHQtLXNlcHsNCiAgICBncmlkLWNvbHVtbi1zdGFydDogMTsNCiAgICBncmlkLWNvbHVtbi1lbmQ6IHhtYWluLWVuZDsNCiAgICB3aWR0aDogdW5zZXQgIWltcG9ydGFudDsNCiAgICBwYWRkaW5nOiAwOw0KICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7DQp9DQojbGlua3MgLnJlc3VsdC0tc2Vwew0KICAgIG1hcmdpbi1ib3R0b206IDJlbTsNCn0NCi5ib2R5LS1zZXJwIC5mb290ZXJ7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBwYWRkaW5nLWxlZnQ6IHVuc2V0Ow0KfQ0K"},{"meta":{"name":"dogeCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/dogeCommonStyle.css?t=25.05","ts":1653206397181,"mimetype":"text/css"},"source":"LypTdG9yZTogRG9nZUNvbW1vblN0eWxlKi8NCmJvZHkgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQoucmVzdWx0c19saW5rc19kZWVwIC5yZXN1bHRfX2ljb257DQogICAgZGlzcGxheTogbm9uZTsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyew0KICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbnsNCiAgICBtYXgtd2lkdGg6IDY3MHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgew0KICAgIHdpZHRoOiA2NzBweDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICBtYXJnaW4tYm90dG9tOiAyNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpOw0KICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cyBjdWJpYy1iZXppZXIoLjIzLDEsLjMyLDEpIDBzOw0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgLnJlc3VsdF9fdGl0bGUgYSB7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsNCiAgICBtYXgtd2lkdGg6IDY0MHB4Ow0KICAgIGNvbG9yOiAjMzQ3NmQyOw0KICAgIGZvbnQtc2l6ZTogc21hbGxlcjsNCn0NCg0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgLnJlc3VsdF9fYm9keXsNCiAgICBwYWRkaW5nOiAxMnB4IDIwcHggIWltcG9ydGFudDsNCn0NCg0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXA6aG92ZXIgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4zKTsNCiAgICBib3gtc2hhZG93OiAwIDAgMXB4IGdyZXk7DQogICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMXB4IGdyZXk7DQogICAgLW1vei1ib3gtc2hhZG93OiAwIDAgMXB4IGdyYXk7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODsNCiAgICBtYXJnaW46IC0xMnB4IC0yMHB4IDBweCAtMjBweDsNCiAgICBwYWRkaW5nOiA4cHggMjBweCA1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCAwcHggMHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgYTpob3ZlcjphZnRlciB7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOmFmdGVyIHsNCiAgICBjb250ZW50OiAiIjsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzNDc2ZDI7DQogICAgYm90dG9tOiAxcHg7DQogICAgbGVmdDogMTAwJTsNCiAgICB3aWR0aDogMDsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zLCBsZWZ0IDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOnZpc2l0ZWQsDQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOnZpc2l0ZWQgc3Ryb25nIHsNCiAgICBjb2xvcjogIzY2MDA5OTsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZDpob3ZlcjphZnRlciwNCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZDpob3ZlcjphZnRlciB7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQp9DQoNCi8qIFNlYXJjaEl0bWVzIEJvdHRvbSB0byBUb3AgYW5pICovDQojbGlua3Nfd3JhcHBlciAjbGlua3Mgew0KICAgIGFuaW1hdGlvbi1uYW1lOiBhbmlfdG9wVG9idXR0b207DQogICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuM3M7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsNCn0NCg0KLyogU2VhcmNoQmFyIExlZnQgdG8gUmlnaHQgYW5pICovDQojaGVhZGVyX3dyYXBwZXIgLmhlYWRlcl9fc2VhcmNoLXdyYXAgew0KICAgIGFuaW1hdGlvbi1uYW1lOiBhbmlfbGVmdFRvcmlnaHQ7DQogICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuM3M7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7DQp9DQouQUMuc3Atc2VwYXJhdG9yew0KICAgIG1hcmdpbi10b3A6IC0xNXB4Ow0KfQ0KQGtleWZyYW1lcyBhbmlfbGVmdFRvcmlnaHQgew0KICAgIDAlIHsNCiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMC4yOw0KICAgIH0NCiAgICAyMCUgew0KICAgICAgICBvcGFjaXR5OiAwLjU7DQogICAgfQ0KICAgIDMwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuODsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIG9wYWNpdHk6IDE7DQogICAgfQ0KfQ0KLyogYW5pICovDQpAa2V5ZnJhbWVzIGFuaV9ib3R0b21Ub3RvcCB7DQogICAgMCUgew0KICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzJweCk7DQogICAgICAgIG9wYWNpdHk6IDAuMjsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMC41Ow0KICAgIH0NCiAgICAzMCUgew0KICAgICAgICBvcGFjaXR5OiAwLjg7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgIH0NCn0NCg=="},{"meta":{"name":"dogeOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/dogeOnePageStyle.css?t=25.05","ts":1653206397054,"mimetype":"text/css"},"source":"LypTdG9yZTogRG9nZU9uZVBhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsICNvcmdhbmljLW1vZHVsZSwgLnBpbm5lZC10by1ib3R0b217DQogICAgZGlzcGxheTogbm9uZTsNCn0NCi5qcy1yZXN1bHQtaGlkZGVuLWVsew0KICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsNCn0NCi5zaXRlLXdyYXBwZXIgI3dlYl9jb250ZW50X3dyYXBwZXIgLmN3IHsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQoNCkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkgew0KICAgICNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgfQ0KfQ0KDQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciwNCiN3ZWJfY29udGVudF93cmFwcGVyICNsaW5rc193cmFwcGVyIC5zZWFyY2gtZmlsdGVycy13cmFwLA0KI3dlYl9jb250ZW50X3dyYXBwZXIgI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1lc3NhZ2V7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZ3JpZDsNCn0NCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyIHsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KDQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciAuaGVhZGVyX19zZWFyY2gtd3JhcCB7DQogICAgd2lkdGg6IDUwMHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXJ7DQogICAgZGlzcGxheTogaW5saW5lLWZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW57DQogICAgZmxvYXQ6IHVuc2V0Ow0KICAgIG1heC13aWR0aDogODYwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhcnsNCiAgICBtaW4td2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbjogdW5zZXQ7DQp9DQouYm9keS0tc2VycCAuZm9vdGVyew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCg=="},{"meta":{"name":"dogeTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/dogeTwoPageStyle.css?t=25.05","ts":1653206397199,"mimetype":"text/css"},"source":"LypTdG9yZTogRG9nZVR3b1BhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsDQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhciwNCiNvcmdhbmljLW1vZHVsZSwNCi5waW5uZWQtdG8tYm90dG9tew0KICAgIGRpc3BsYXk6IG5vbmU7DQp9DQouanMtcmVzdWx0LWhpZGRlbi1lbHsNCiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7DQp9DQouc2l0ZS13cmFwcGVyICN3ZWJfY29udGVudF93cmFwcGVyIC5jdyB7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyLA0KI3dlYl9jb250ZW50X3dyYXBwZXIgI2xpbmtzX3dyYXBwZXIgLnNlYXJjaC1maWx0ZXJzLXdyYXAsDQojd2ViX2NvbnRlbnRfd3JhcHBlciAjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWVzc2FnZXsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBncmlkOw0KfQ0KI2hlYWRlcl93cmFwcGVyICNoZWFkZXIgew0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyIC5oZWFkZXJfX3NlYXJjaC13cmFwIHsNCiAgICB3aWR0aDogNTAwcHg7DQp9DQojbGlua3Nfd3JhcHBlcnsNCiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluew0KICAgIGZsb2F0OiB1bnNldDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLXNpZGViYXJ7DQogICAgbWluLXdpZHRoOiB1bnNldDsNCiAgICBtYXJnaW46IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW4gI2xpbmtzew0KICAgIHdpZHRoOiA4MHZ3Ow0KICAgIC8qIFRoaXMgbWF5IGNhdXNlIFBhZ2UgZmFpbGVkICovDQogICAgZGlzcGxheTogZ3JpZDsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7DQogICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogInhtYWluIHhtYWluIjsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwew0KICAgIHdpZHRoOiB1bnNldDsNCiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7DQp9DQojbGlua3MgLnJlc3VsdC0tbW9yZSwgI2xpbmtzIC5yZXN1bHQtLXNlcHsNCiAgICBncmlkLWNvbHVtbi1zdGFydDogMTsNCiAgICBncmlkLWNvbHVtbi1lbmQ6IHhtYWluLWVuZDsNCiAgICB3aWR0aDogdW5zZXQgIWltcG9ydGFudDsNCiAgICBwYWRkaW5nOiAwOw0KICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7DQp9DQojbGlua3MgLnJlc3VsdC0tc2Vwew0KICAgIG1hcmdpbi1ib3R0b206IDJlbTsNCn0NCi5ib2R5LS1zZXJwIC5mb290ZXJ7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBwYWRkaW5nLWxlZnQ6IHVuc2V0Ow0KfQ0K"},{"meta":{"name":"HuYanStyle.css","url":"http://ibaidu.tujidu.com/newcss/HuYanStyle.css?t=25.05","ts":1653206397055,"mimetype":"text/css"},"source":"LyoqU3RvcmUgSHVZYW5TdHlsZSoqLw0KLyoqKioqQmFpZHUtSHVZYW5TdHlsZSoqKioqLw0KYm9keVtiYWlkdV0sDQojd3JhcHBlciAjaGVhZCwNCiN3cmFwcGVyICNzX3RhYiwNCmZvcm0uZm0gLnNfaXB0X3dyLmJnew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3AsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IGFydGljbGUsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lciwNCiN3cmFwcGVyICNycywNCiN3cmFwcGVyICNjb250ZW50X3JpZ2h0ew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQUFBQUEgOw0KICAgIGJvcmRlcjogMXB4IGRvdWJsZSAjQTJEN0Q0IDsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3A6aG92ZXIsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQ6aG92ZXIsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3A6aG92ZXIgYXJ0aWNsZXsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDICFpbXBvcnRhbnQ7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQgaDMsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3AgaDMsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lciBoMywNCiN3cmFwcGVyICNycyAudHR7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0JCQkJCQiA7DQp9DQovKioqQmluZy1IdVlhblN0eWxlKioqKi8NCi5uYV9jbnQgLm53c19pdG0sDQoubndzX2l0bWIsDQojYl9jb250ZW50ICNiX3Jlc3VsdHM+bGk6bm90KCNtZmFfcm9vdCksDQpib2R5ICNiX2hlYWRlcnsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUFBQUFBIDsNCiAgICBib3JkZXI6IDFweCBkb3VibGUgI0EyRDdENCA7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzIGxpOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDICFpbXBvcnRhbnQ7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgbGkgaDJ7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0JCQkJCQiA7DQp9DQovKioqR29vZ2xlLUh1WWFuU3R5bGUqKioqLw0KYm9keVtnb29nbGVdew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmRGZEZkQ7DQp9DQojcnNvIC5nLCAuYmtXTWdkPi5nLA0KLmJrV01nZCBnLWlubmVyLWNhcmQsDQojcmhzY29sICNyaHMsDQojcmhzY29sICNyaHMgLmc+ZGl2LA0KLmMyeHpUYiAuZywNCi5ydVRjSWQgLmcsDQouZm0wNklmIC5nLA0KLmNVblFLZSAuZywNCi5IYW5RbWYgLmcsDQojcnNvIC5nLA0KI3JzbyAua3AtYmxrLA0KI3JzbyAuTUdxakssDQojcnNvPmRpdjpub3QoLmcpPip7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0FBQUFBQSA7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzljZDJjZkFBOw0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCiNyc28gLmc6aG92ZXIsDQouYmtXTWdkPi5nOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDICFpbXBvcnRhbnQ7DQogICAgYm9yZGVyOiAxcHggZG91YmxlICM5Y2QyY2Y7DQp9DQouYmtXTWdkIC5nIGRpdi5yLA0KI3JzbyAuZyBoM3sNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkJCQkJCIDsNCn0NCi8qKipTb2dvdS1IdVlhblN0eWxlKioqKi8NCmJvZHlbc29nb3VdLCAjcGFnZWJhcl9jb250YWluZXIgYXsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZkRmRGZEOw0KfQ0KI21haW4gLnJlc3VsdHM+ZGl2ew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQUFBQUEgOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Y2QyY2ZBQTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQojbWFpbiAucmVzdWx0cz5kaXY6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0MgIWltcG9ydGFudDsNCiAgICBib3JkZXI6IDFweCBkb3VibGUgIzljZDJjZjsNCn0NCiNtYWluIC5yZXN1bHRzPmRpdiBoM3sNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkJCQkJCIDsNCn0NCi8qKipEdWNrX0RvZ2UtSHVZYW5TdHlsZSoqKiovDQpib2R5W2R1Y2tdLGJvZHlbZG9nZV17DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZEZkRmRDsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQUFBQUEgOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Y2QyY2ZBQTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcDpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0NDQ0NDQyAhaW1wb3J0YW50Ow0KICAgIGJvcmRlcjogMXB4IGRvdWJsZSAjOWNkMmNmOw0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDJ7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0JCQkJCQiA7DQp9DQo="},{"meta":{"name":"SiteConfigRules.conf","url":"http://ibaidu.tujidu.com/newcss/SiteConfigRules.conf?t=25.05","ts":1653206397211,"mimetype":"text/plain"},"source":"Y29uc3Qgb25saW5lREIgPSB7DQogICBiYWlkdTogew0KICAgICAgIFNpdGVUeXBlSUQ6IDEsDQogICAgICAgTWFpblR5cGU6ICIjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lciIsDQogICAgICAgU3R5cGVfTm9ybWFsOiAiaDMudD5hLCAuYy1jb250YWluZXIgYXJ0aWNsZSBhIiwNCiAgICAgICBGYXZpY29uVHlwZTogIi5jLXNob3d1cmwsIC5jLXRpdGxlIGEiLA0KICAgICAgIEZhdmljb25BZGRUbzogImgzIiwNCiAgICAgICBDb3VudGVyVHlwZTogIiNjb250ZW50X2xlZnQ+I2RvdWJsZT5kaXZbc3JjaWRdICpbY2xhc3N+PXRdLFtjbGFzc349b3BfYmVzdF9hbnN3ZXJfcXVlc3Rpb25dLCNjb250ZW50X2xlZnQ+ZGl2W3NyY2lkXSAqW2NsYXNzfj10XSxbY2xhc3N+PW9wX2Jlc3RfYW5zd2VyX3F1ZXN0aW9uXSIsDQogICAgICAgQmxvY2tUeXBlOiAiaDMgYSIsDQogICAgICAgcGFnZXI6ew0KICAgICAgICAgICBuZXh0TGluazogJy8vZGl2W0BpZD0icGFnZSJdLy9hW2NvbnRhaW5zKHRleHQoKSwiw6TCuMKLw6TCuMKAw6nCocK1IildW0BocmVmXScsDQogICAgICAgICAgIHBhZ2VFbGVtZW50OiAiY3NzO2RpdiNjb250ZW50X2xlZnQgPiAqIiwNCiAgICAgICAgICAgSFRfaW5zZXJ0OiBbICJjc3M7ZGl2I2NvbnRlbnRfbGVmdCIsIDIgXSwNCiAgICAgICAgICAgcmVwbGFjZUU6ICJjc3M7I3BhZ2UiLA0KICAgICAgICAgICBzdHlsaXNoOiAiLmF1dG9wYWdlcml6ZV9wYWdlX2luZm8sIGRpdi5zcC1zZXBhcmF0b3Ige21hcmdpbi1ib3R0b206IDEwcHggIWltcG9ydGFudDt9LmMtaW1nLWJvcmRlcntkaXNwbGF5Om5vbmV9IiwNCiAgICAgICB9DQogICB9LA0KICAgc29nb3U6IHsNCiAgICAgICBTaXRlVHlwZUlEOiAyLA0KICAgICAgIE1haW5UeXBlOiAiI21haW4gLnJlc3VsdHM+ZGl2IiwNCiAgICAgICBTdHlwZV9Ob3JtYWw6ICJoMy5wdD5hLCBoMy52clRpdGxlPmEiLA0KICAgICAgIEZhdmljb25UeXBlOiAiY2l0ZVtpZCo9J2NhY2hlcmVzdWx0X2luZm9fJ10iLA0KICAgICAgIEZhdmljb25BZGRUbzogImgzIiwNCiAgICAgICBDb3VudGVyVHlwZTogIi5yZXN1bHRzPmRpdiIsDQogICAgICAgQmxvY2tUeXBlOiAiaDMgYSIsDQogICAgICAgcGFnZXI6ew0KICAgICAgICAgICBuZXh0TGluazogIi8vZGl2W0BpZD1cInBhZ2ViYXJfY29udGFpbmVyXCJdLy9hW0BpZD1cInNvZ291X25leHRcIl0iLA0KICAgICAgICAgICBwYWdlRWxlbWVudDogIi8vZGl2W0BjbGFzcz0ncmVzdWx0cyddL2RpdiIsDQogICAgICAgICAgIEhUX2luc2VydDogWyIvL2RpdltAY2xhc3M9J3Jlc3VsdHMnXSIsIDJdLA0KICAgICAgICAgICByZXBsYWNlRTogImlkKCdwYWdlYmFyX2NvbnRhaW5lcicpIg0KICAgICAgIH0NCiAgIH0sDQogICBoYW9zb3U6IHsNCiAgICAgICBTaXRlVHlwZUlEOiAzLA0KICAgICAgIE1haW5UeXBlOiAiLnJlcy1saXN0IiwNCiAgICAgICBTdHlwZV9Ob3JtYWw6ICIucmVzLWxpc3QgaDM+YSIsDQogICAgICAgRmF2aWNvblR5cGU6ICJjaXRlIiwNCiAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsDQogICAgICAgQ291bnRlclR5cGU6ICIucmVzdWx0cz5kaXYiLA0KICAgICAgIEJsb2NrVHlwZTogImgzIGEiLA0KICAgICAgIHBhZ2VyOnsNCiAgICAgICAgICAgbmV4dExpbms6ICIvL2RpdltAaWQ9J3BhZ2UnXS8vYVt0ZXh0KCk9J8OkwrjCi8OkwrjCgMOpwqHCtT4nXSB8IGlkKCdzbmV4dCcpIiwNCiAgICAgICAgICAgcGFnZUVsZW1lbnQ6ICIvL2RpdltAaWQ9J2NvbnRhaW5lciddL2RpdiIsDQogICAgICAgICAgIEhUX2luc2VydDogWyIvL2RpdltAaWQ9J2NvbnRhaW5lciddIiwgMl0sDQogICAgICAgICAgIHJlcGxhY2VFOiAiaWQoJ3BhZ2UnKSINCiAgICAgICB9DQogICB9LA0KICAgZ29vZ2xlOiB7DQogICAgICAgU2l0ZVR5cGVJRDogNCwNCiAgICAgICBNYWluVHlwZTogIiNyc28gLmciLA0KICAgICAgIEZhdmljb25UeXBlOiAiLmlVaDMwIiwNCiAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsDQogICAgICAgQ291bnRlclR5cGU6ICIjcnNvIC5nIGgzLC5feUU+ZGl2W2NsYXNzfj1fa2tdIGgzIiwNCiAgICAgICBCbG9ja1R5cGU6ICIucmM+ZGl2PmEsICNycywgI3JzbyAuZyBhIiwNCiAgICAgICBwYWdlcjp7DQogICAgICAgICAgbmV4dExpbms6ICJpZCgncG5uZXh0Jyl8aWQoJ25hdmJhciBuYXZjbnQgbmF2JykvL3RkW3NwYW5dL2ZvbGxvd2luZy1zaWJsaW5nOjp0ZFsxXS9hfGlkKCdubicpL3BhcmVudDo6YSIsDQogICAgICAgICAgcGFnZUVsZW1lbnQ6ICJpZCgncnNvJyl8aWQoJ2NlbnRlcl9jb2wnKS9zdHlsZVtjb250YWlucyguLCdyZWxhdGl2ZScpXVtpZCgncnNvJyldIiwNCiAgICAgICAgICBIVF9pbnNlcnQ6IFsiY3NzOyNyZXMiLCAyXSwNCiAgICAgICAgICByZXBsYWNlRTogJy8vZGl2W0BpZD0ibmF2Y250Il0gfCAvL2RpdltAaWQ9InJjbnQiXS8vZGl2W0Byb2xlPSJuYXZpZ2F0aW9uIl0nLA0KICAgICAgIH0NCiAgIH0sDQogICBiaW5nOiB7DQogICAgICAgU2l0ZVR5cGVJRDogNSwNCiAgICAgICBNYWluVHlwZTogIiNiX3Jlc3VsdHM+bGkiLA0KICAgICAgIEZhdmljb25UeXBlOiAiLmJfYXR0cmlidXRpb24+Y2l0ZSIsDQogICAgICAgRmF2aWNvbkFkZFRvOiAiaDIiLA0KICAgICAgIENvdW50ZXJUeXBlOiAiI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbnNdIGgyLCNiX3Jlc3VsdHM+bGlbY2xhc3N+PWJfYWxnb10gaDIiLA0KICAgICAgIEJsb2NrVHlwZTogImgyIGEiLA0KICAgICAgIHBhZ2VyOnsNCiAgICAgICAgICAgbmV4dExpbms6ICIvL2FbY29udGFpbnMoQGNsYXNzLFwic2JfcGFnTlwiKV0iLA0KICAgICAgICAgICBwYWdlRWxlbWVudDogImlkKFwiYl9yZXN1bHRzXCIpL2xpW25vdChjb250YWlucyhAY2xhc3MsXCJiX3BhZ1wiKSBvciBjb250YWlucyhAY2xhc3MsXCJiX2FucyBiX3RvcFwiKSldIiwNCiAgICAgICAgICAgSFRfaW5zZXJ0OiBbImlkKFwiYl9yZXN1bHRzXCIpL2xpW0BjbGFzcz1cImJfcGFnXCJdIiwgMV0sDQogICAgICAgICAgIHJlcGxhY2VFOiAiaWQoXCJiX3Jlc3VsdHNcIikvL25hdltAcm9sZT1cIm5hdmlnYXRpb25cIl0iLA0KICAgICAgIH0NCiAgIH0sDQogICBkdWNrOiB7DQogICAgICAgU2l0ZVR5cGVJRDogMTAsDQogICAgICAgTWFpblR5cGU6ICIjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCIsDQogICAgICAgRmF2aWNvblR5cGU6ICIucmVzdWx0c19saW5rc19kZWVwIC5yZXN1bHRfX3VybF9fZG9tYWluIiwNCiAgICAgICBGYXZpY29uQWRkVG86ICJoMiIsDQogICAgICAgQ291bnRlclR5cGU6ICIjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiIsDQogICAgICAgQmxvY2tUeXBlOiAiaDIgYSIsDQogICAgICAgcGFnZXI6ew0KICAgICAgICAgICBuZXh0TGluazogIi8vYVtjb250YWlucyhAY2xhc3MsXCJzYl9wYWdOXCIpXSIsDQogICAgICAgICAgIHBhZ2VFbGVtZW50OiAiaWQoXCJiX3Jlc3VsdHNcIikvbGlbbm90KGNvbnRhaW5zKEBjbGFzcyxcImJfcGFnXCIpIG9yIGNvbnRhaW5zKEBjbGFzcyxcImJfYW5zIGJfdG9wXCIpKV0iLA0KICAgICAgICAgICBIVF9pbnNlcnQ6IFsiaWQoXCJiX3Jlc3VsdHNcIikvbGlbQGNsYXNzPVwiYl9wYWdcIl0iLCAxXSwNCiAgICAgICAgICAgcmVwbGFjZUU6ICJpZChcImJfcmVzdWx0c1wiKS8vbmF2W0Byb2xlPVwibmF2aWdhdGlvblwiXSIsDQogICAgICAgfQ0KICAgfSwNCiAgIGRvZ2U6IHsNCiAgICAgIFNpdGVUeXBlSUQ6IDExLA0KICAgICAgTWFpblR5cGU6ICIjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCIsDQogICAgICBGYXZpY29uVHlwZTogIi5yZXN1bHRzX2xpbmtzX2RlZXAgLnJlc3VsdF9fdXJsX19kb21haW4iLA0KICAgICAgRmF2aWNvbkFkZFRvOiAiaDIiLA0KICAgICAgQ291bnRlclR5cGU6ICIjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiIsDQogICAgICBCbG9ja1R5cGU6ICJoMiBhIiwNCiAgICAgIHBhZ2VyOnsNCiAgICAgICAgICBuZXh0TGluazogIi8vYVtjb250YWlucyhAY2xhc3MsXCJzYl9wYWdOXCIpXSIsDQogICAgICAgICAgcGFnZUVsZW1lbnQ6ICJpZChcImJfcmVzdWx0c1wiKS9saVtub3QoY29udGFpbnMoQGNsYXNzLFwiYl9wYWdcIikgb3IgY29udGFpbnMoQGNsYXNzLFwiYl9hbnMgYl90b3BcIikpXSIsDQogICAgICAgICAgSFRfaW5zZXJ0OiBbImlkKFwiYl9yZXN1bHRzXCIpL2xpW0BjbGFzcz1cImJfcGFnXCJdIiwgMV0sIC8vIDEgPSBiZWZvcmViZWdpbjsgMiA9IGJlZm9yZWVuZA0KICAgICAgICAgIHJlcGxhY2VFOiAiaWQoXCJiX3Jlc3VsdHNcIikvL25hdltAcm9sZT1cIm5hdmlnYXRpb25cIl0iLA0KICAgICAgfQ0KICAgfSwNCiAgIG1CYWlkdTp7DQogICAgICAgU2l0ZVR5cGVJRDogNiwNCiAgICAgICBNYWluVHlwZTogIiNiX3Jlc3VsdHM+bGkiLA0KICAgICAgIEZhdmljb25UeXBlOiAiLmJfYXR0cmlidXRpb24+Y2l0ZSIsDQogICAgICAgRmF2aWNvbkFkZFRvOiAiaDIiLA0KICAgICAgIENvdW50ZXJUeXBlOiAiI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbnNdPmgyLCNiX3Jlc3VsdHM+bGlbY2xhc3N+PWJfYWxnb10+aDIsI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbGdvXT5oMiIsDQogICAgICAgQmxvY2tUeXBlOiAiaDIgYSIsDQogICB9LA0KICAgemhpaHU6IHsNCiAgICAgICBTaXRlVHlwZUlEOiA3LA0KICAgfSwNCiAgIGJhaWR1X3h1ZXNodTp7DQogICAgICAgU2l0ZVR5cGVJRDogOCwNCiAgICAgICBNYWluVHlwZTogIiNjb250ZW50X2xlZnQgLnJlc3VsdCIsDQogICAgICAgU3R5cGVfTm9ybWFsOiAiaDMudD5hLCAjcmVzdWx0cyAuYy1jb250YWluZXI+LmMtYmxvY2thIiwNCiAgICAgICBGYXZpY29uVHlwZTogIi5yZXN1bHQtb3AsIC5jLXNob3d1cmwiLA0KICAgICAgIEZhdmljb25BZGRUbzogImgzIiwNCiAgICAgICBDb3VudGVyVHlwZTogIiNjb250ZW50X2xlZnQ+I2RvdWJsZT5kaXZbc3JjaWRdICpbY2xhc3N+PXRdLFtjbGFzc349b3BfYmVzdF9hbnN3ZXJfcXVlc3Rpb25dLCNjb250ZW50X2xlZnQ+ZGl2W3NyY2lkXSAqW2NsYXNzfj10XSxbY2xhc3N+PW9wX2Jlc3RfYW5zd2VyX3F1ZXN0aW9uXSIsDQogICAgICAgQmxvY2tUeXBlOiAiaDMgYSIsDQogICB9LA0KICAgb3RoZXI6IHsNCiAgICAgICBTaXRlVHlwZUlEOiA5LA0KICAgfQ0KfQ0K"}],"requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.14/vue.min.js","ts":1653050124702,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"less.min.js","url":"https://cdn.staticfile.org/less.js/4.1.2/less.min.js","ts":1653050124797,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"vue.min.js","url":"https://lib.baomitu.com/vue/2.6.14/vue.min.js","ts":1653050124735,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"less.min.js","url":"https://lib.baomitu.com/less.js/4.1.2/less.min.js","ts":1653050124785,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"Portable%20MD5%20Function.js","url":"https://greasyfork.org/scripts/130-portable-md5-function/code/Portable%20MD5%20Function.js?version=10066","ts":1653206398011,"mimetype":"text/javascript"},"source":""}]},{"name":"Quora Bypass Signup","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.quora.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1618038574086,"data":{}},"enabled":false,"position":14,"file_url":"https://greasyfork.org/scripts/406530-quora-bypass-signup/code/Quora%20Bypass%20Signup.user.js","uuid":"457bfc66-c725-462a-9913-8b5326681a2c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBRdW9yYSBCeXBhc3MgU2lnbnVwCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL2FzaGlzaC5saW5rLwovLyBAdmVyc2lvbiAgICAgIDIuMgovLyBAZGVzY3JpcHRpb24gIEFjY2VzcyBhbGwgb2YgUXVvcmEgd2l0aG91dCBldmVyIHNpZ25pbmcgdXAhCi8vIEBhdXRob3IgICAgICAgQXNoaXNoIFJhbmphbgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LnF1b3JhLmNvbS8qCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAbGljZW5zZSAgICAgIE1JVAovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAidXNlIHN0cmljdCI7CiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2RvY3VtZW50JGdldEVsZW1lbnRCLCBfZG9jdW1lbnQkZ2V0RWxlbWVudEIyLCBfZG9jdW1lbnQkZ2V0RWxlbWVudEIzLCBfZG9jdW1lbnQkZ2V0RWxlbWVudEI0OwogICAgY29uc3QgY29udGFpbmVyID0gKF9kb2N1bWVudCRnZXRFbGVtZW50QiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpID09PSBudWxsIHx8IF9kb2N1bWVudCRnZXRFbGVtZW50QiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kb2N1bWVudCRnZXRFbGVtZW50QjIgPSBfZG9jdW1lbnQkZ2V0RWxlbWVudEIuY2hpbGRyZW4pID09PSBudWxsIHx8IF9kb2N1bWVudCRnZXRFbGVtZW50QjIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZG9jdW1lbnQkZ2V0RWxlbWVudEIzID0gX2RvY3VtZW50JGdldEVsZW1lbnRCMlswXSkgPT09IG51bGwgfHwgX2RvY3VtZW50JGdldEVsZW1lbnRCMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kb2N1bWVudCRnZXRFbGVtZW50QjQgPSBfZG9jdW1lbnQkZ2V0RWxlbWVudEIzLmNoaWxkcmVuKSA9PT0gbnVsbCB8fCBfZG9jdW1lbnQkZ2V0RWxlbWVudEI0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZG9jdW1lbnQkZ2V0RWxlbWVudEI0WzBdOwogICAgaWYgKChjb250YWluZXIgPT09IG51bGwgfHwgY29udGFpbmVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250YWluZXIuY2hpbGRFbGVtZW50Q291bnQpIDwgMykgewogICAgICB2YXIgX2NvbnRhaW5lciRjaGlsZHJlbiQ7CiAgICAgIChfY29udGFpbmVyJGNoaWxkcmVuJCA9IGNvbnRhaW5lci5jaGlsZHJlblswXSkgPT09IG51bGwgfHwgX2NvbnRhaW5lciRjaGlsZHJlbiQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jb250YWluZXIkY2hpbGRyZW4kLnJlbW92ZSgpOwogICAgICAoY29udGFpbmVyLmNoaWxkcmVuWzBdIHx8IHt9KS5zdHlsZSA9ICcnOwogICAgfQogIH0sIGZhbHNlKTsKfSkoKQo="},{"name":"Quora signup skipper","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.quora.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1618038792848,"data":{}},"enabled":true,"position":15,"file_url":"https://greasyfork.org/scripts/409639-quora-signup-skipper/code/Quora%20signup%20skipper.user.js","uuid":"e594420a-9980-4bc6-8590-d1d93b279135","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUJCVF1b3JhIHNpZ251cCBza2lwcGVyCi8vIEB2ZXJzaW9uCQkxLjEKLy8gQGRlc2NyaXB0aW9uCQlSZWFkIFF1b3JhLmNvbSB3aXRob3V0IHRoZSBuZWVkIHRvIHNpZ25pbgovLyBAbWF0Y2gJCQlodHRwczovL3d3dy5xdW9yYS5jb20vKgovLyBAZ3JhbnQJCQlub25lCi8vIEBhdXRob3IgICAgICAgTml0aGlzaFNoYXJhdmFuYW4KLy8gQG5hbWVzcGFjZSBodHRwczovL2dyZWFzeWZvcmsub3JnL2VuL3VzZXJzLzY4MTM5OSAKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CgogICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCJzaWdudXBfd2FsbF9wcmV2ZW50X3Njcm9sbCIpOwoKICAgIGxldCBkaXZzID0gZG9jdW1lbnQuYm9keS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiZGl2Iik7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRpdnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBsZXQgaXRlbSA9IGRpdnNbaV07CiAgICAgICAgaWYgKGl0ZW0uaWQuZW5kc1dpdGgoIl9zaWdudXBfd2FsbF93cmFwcGVyIikpIHsKICAgICAgICAgICAgaXRlbS5yZW1vdmUoKTsKICAgICAgICB9CiAgICB9CgogICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICJhdXRvIjsKICAJc2V0VGltZW91dChmdW5jdGlvbigpeyBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoInNpZ251cF93YWxsX3ByZXZlbnRfc2Nyb2xsIik7IH0sIDUwMDApOwogIAkKfSkoKTs="},{"name":"redirect Â§ñÈìæË∑≥ËΩ¨","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/^https?:\\/\\/www\\.google\\..{2,7}url/"],"orig_matches":["*://www.jianshu.com/go-wild*","*://link.zhihu.com/*","*://t.cn/*","*://weibo.cn/sinaurl*","*://mail.qq.com/cgi-bin/*","*://c.pc.qq.com/middlem.html*","*://app.yinxiang.com/OutboundRedirect.action*","*://jump.bdimg.com/safecheck/*","*://jump2.bdimg.com/safecheck/*","*://link.csdn.net/*","*://www.youtube.com/redirect*","*://weixin110.qq.com/cgi-bin/mmspamsupport-bin/newredirectconfirmcgi*","*://developers.weixin.qq.com/community/middlepage/href*","*://www.itdaan.com/link/*","*://www.douban.com/link2/*","*://www.360doc.com/content/*","*://www.pixiv.net/jump.php*","*://m.sogou.com/*/tc*","*://m.sogou.com*/tc*","*://www.chinaz.com/go.shtml*","*://www.oschina.net/action/GoToLink*","*://link.juejin.cn/*","*://docs.qq.com/scenario/link.html*","*://www.pc6.com/goread.html*","*://afdian.net/link*","*://gitee.com/link*","*://www.tianyancha.com/security*","*://aiqicha.baidu.com/safetip*","*://www.qcc.com/web/transfer-link*","*://link.uisdc.com/*","*://blog.51cto.com/transfer*","*://leetcode-cn.com/link*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1621586287497,"data":{}},"enabled":true,"position":16,"file_url":"https://greasyfork.org/scripts/416338-redirect-%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC/code/redirect%20%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC.user.js","uuid":"c0f953c9-b68b-479a-b735-abb993ae0e7d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICByZWRpcmVjdCDlpJbpk77ot7PovawKLy8gQHZlcnNpb24gICAgICAxLjI3LjAKLy8gQGRlc2NyaXB0aW9uICDoh6rliqjot7Povawo6YeN5a6a5ZCRKeWIsOebruagh+mTvuaOpe+8jOWFjeWOu+eCueWHu+atpemqpOOAgumAgumFjeS6hueugOS5puOAgeefpeS5juOAgeW+ruWNmuOAgVFR6YKu566x44CBUVFQQ+OAgeWNsOixoeeslOiusOOAgei0tOWQp+OAgUNTRE7jgIFZb3VUdWJl44CB5b6u5L+h44CB5b6u5L+h5byA5pS+56S+5Yy644CB5byA5Y+R6ICF55+l6K+G5bqT44CB6LGG55Oj44CB5Liq5Lq65Zu+5Lmm6aaG44CBUGl4aXbjgIHmkJzni5fjgIFHb29nbGXjgIHnq5nplb/kuYvlrrbjgIFPU0NISU5B44CB5o6Y6YeR44CB6IW+6K6v5paH5qGj44CBcGM25LiL6L2956uZ44CB54ix5Y+R55S144CBR2l0ZWXjgIHlpKnnnLzmn6XjgIHniLHkvIHmn6XjgIHkvIHmn6Xmn6XjgIHkvJjorr7nvZHjgIE1MUNUT+OAgeWKm+aJowovLyBAYXV0aG9yICAgICAgIHNha3VyYS1mbHV0dGVyCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9naXRodWIuY29tL3Nha3VyYS1mbHV0dGVyL3RhbXBlcm1vbmtleS1zY3JpcHRzCi8vIEBsaWNlbnNlICAgICAgR1BMLTMuMAovLyBAY29tcGF0aWJsZSAgIGNocm9tZSBMYXRlc3QKLy8gQGNvbXBhdGlibGUgICBmaXJlZm94IExhdGVzdAovLyBAY29tcGF0aWJsZSAgIGVkZ2UgTGF0ZXN0Ci8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LmppYW5zaHUuY29tL2dvLXdpbGQqCi8vIEBtYXRjaCAgICAgICAgKjovL2xpbmsuemhpaHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vdC5jbi8qCi8vIEBtYXRjaCAgICAgICAgKjovL3dlaWJvLmNuL3NpbmF1cmwqCi8vIEBtYXRjaCAgICAgICAgKjovL21haWwucXEuY29tL2NnaS1iaW4vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9jLnBjLnFxLmNvbS9taWRkbGVtLmh0bWwqCi8vIEBtYXRjaCAgICAgICAgKjovL2FwcC55aW54aWFuZy5jb20vT3V0Ym91bmRSZWRpcmVjdC5hY3Rpb24qCi8vIEBtYXRjaCAgICAgICAgKjovL2p1bXAuYmRpbWcuY29tL3NhZmVjaGVjay8qCi8vIEBtYXRjaCAgICAgICAgKjovL2p1bXAyLmJkaW1nLmNvbS9zYWZlY2hlY2svKgovLyBAbWF0Y2ggICAgICAgICo6Ly9saW5rLmNzZG4ubmV0LyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LnlvdXR1YmUuY29tL3JlZGlyZWN0KgovLyBAbWF0Y2ggICAgICAgICo6Ly93ZWl4aW4xMTAucXEuY29tL2NnaS1iaW4vbW1zcGFtc3VwcG9ydC1iaW4vbmV3cmVkaXJlY3Rjb25maXJtY2dpKgovLyBAbWF0Y2ggICAgICAgICo6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vY29tbXVuaXR5L21pZGRsZXBhZ2UvaHJlZioKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3Lml0ZGFhbi5jb20vbGluay8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5kb3ViYW4uY29tL2xpbmsyLyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LjM2MGRvYy5jb20vY29udGVudC8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5waXhpdi5uZXQvanVtcC5waHAqCi8vIEBtYXRjaCAgICAgICAgKjovL20uc29nb3UuY29tLyovdGMqCi8vIEBtYXRjaCAgICAgICAgKjovL20uc29nb3UuY29tKi90YyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LmNoaW5hei5jb20vZ28uc2h0bWwqCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5vc2NoaW5hLm5ldC9hY3Rpb24vR29Ub0xpbmsqCi8vIEBtYXRjaCAgICAgICAgKjovL2xpbmsuanVlamluLmNuLyoKLy8gQG1hdGNoICAgICAgICAqOi8vZG9jcy5xcS5jb20vc2NlbmFyaW8vbGluay5odG1sKgovLyBAbWF0Y2ggICAgICAgICo6Ly93d3cucGM2LmNvbS9nb3JlYWQuaHRtbCoKLy8gQG1hdGNoICAgICAgICAqOi8vYWZkaWFuLm5ldC9saW5rKgovLyBAbWF0Y2ggICAgICAgICo6Ly9naXRlZS5jb20vbGluayoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LnRpYW55YW5jaGEuY29tL3NlY3VyaXR5KgovLyBAbWF0Y2ggICAgICAgICo6Ly9haXFpY2hhLmJhaWR1LmNvbS9zYWZldGlwKgovLyBAbWF0Y2ggICAgICAgICo6Ly93d3cucWNjLmNvbS93ZWIvdHJhbnNmZXItbGluayoKLy8gQG1hdGNoICAgICAgICAqOi8vbGluay51aXNkYy5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9ibG9nLjUxY3RvLmNvbS90cmFuc2ZlcioKLy8gQG1hdGNoICAgICAgICAqOi8vbGVldGNvZGUtY24uY29tL2xpbmsqCi8vIEBpbmNsdWRlICAgICAgL15odHRwcz86XC9cL3d3d1wuZ29vZ2xlXC4uezIsN311cmwvCi8vID09L1VzZXJTY3JpcHQ9PQoKLyoqKioqKi8gKCgpID0+IHsgLy8gd2VicGFja0Jvb3RzdHJhcAovKioqKioqLyAJInVzZSBzdHJpY3QiOwovKioqKioqLyAJLy8gVGhlIHJlcXVpcmUgc2NvcGUKLyoqKioqKi8gCXZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307Ci8qKioqKiovIAkKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKi8gCS8qIHdlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyAqLwovKioqKioqLyAJKCgpID0+IHsKLyoqKioqKi8gCQkvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzCi8qKioqKiovIAkJX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHsKLyoqKioqKi8gCQkJZm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikgewovKioqKioqLyAJCQkJaWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7Ci8qKioqKiovIAkJCQkJT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTsKLyoqKioqKi8gCQkJCX0KLyoqKioqKi8gCQkJfQovKioqKioqLyAJCX07Ci8qKioqKiovIAl9KSgpOwovKioqKioqLyAJCi8qKioqKiovIAkvKiB3ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kICovCi8qKioqKiovIAkoKCkgPT4gewovKioqKioqLyAJCV9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkKLyoqKioqKi8gCX0pKCk7Ci8qKioqKiovIAkKLyoqKioqKi8gCS8qIHdlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QgKi8KLyoqKioqKi8gCSgoKSA9PiB7Ci8qKioqKiovIAkJLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0cwovKioqKioqLyAJCV9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7Ci8qKioqKiovIAkJCWlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykgewovKioqKioqLyAJCQkJT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7Ci8qKioqKiovIAkJCX0KLyoqKioqKi8gCQkJT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTsKLyoqKioqKi8gCQl9OwovKioqKioqLyAJfSkoKTsKLyoqKioqKi8gCQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwp2YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IHt9OwoKLy8gTkFNRVNQQUNFIE9CSkVDVDogLi9zcmMvdXRpbHMvcmVhZHktc3RhdGUuanMKdmFyIHJlYWR5X3N0YXRlX25hbWVzcGFjZU9iamVjdCA9IHt9OwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIocmVhZHlfc3RhdGVfbmFtZXNwYWNlT2JqZWN0KTsKX193ZWJwYWNrX3JlcXVpcmVfXy5kKHJlYWR5X3N0YXRlX25hbWVzcGFjZU9iamVjdCwgewogICJET01Db250ZW50TG9hZGVkIjogKCkgPT4gKERPTUNvbnRlbnRMb2FkZWQpLAogICJjb21wbGV0ZSI6ICgpID0+IChjb21wbGV0ZSksCiAgImludGVyYWN0aXZlIjogKCkgPT4gKGludGVyYWN0aXZlKSwKICAibG9hZCI6ICgpID0+IChsb2FkKSwKICAibG9hZGluZyI6ICgpID0+IChsb2FkaW5nKQp9KTsKCjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy91dGlscy9sb2cudHMKY29uc3QgaXNEZWJ1ZyA9ICJwcm9kdWN0aW9uIiAhPT0gJ3Byb2R1Y3Rpb24nOwoKZnVuY3Rpb24gd2FybiguLi5hcmdzKSB7CiAgaXNEZWJ1ZyAmJiBjb25zb2xlLndhcm4oJyVjICAgICAgd2FybiAgICAgICcsICdiYWNrZ3JvdW5kOiAjZmZhNTAwOyBwYWRkaW5nOiAxcHg7IGNvbG9yOiAjZmZmOycsIC4uLmFyZ3MpOwp9CgpmdW5jdGlvbiB0YWJsZSguLi5hcmdzKSB7CiAgaXNEZWJ1ZyAmJiBjb25zb2xlLnRhYmxlKC4uLmFyZ3MpOwp9CgoKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3V0aWxzL3JlYWR5LXN0YXRlLmpzCi8qKgogKiByZWFkeVN0YXRlIOWboOS4uuiEmuacrOWKoOi9veaXtuacuuS4jeS4gOWumuebkeWQrOWIsOaJgOacieWPmOWMlgogKiDmiYDku6UgcG9vbCDkuK3nmoTnirbmgIHljLrliIblhYjlkI7pobrluo8KICog6Z2g5ZCO5a6a5LmJ55qE5Lya6Ieq5Yqo5bCG6Z2g5YmN5a6a5LmJ55qE5L2G5rKh5pyJ55uR5ZCs5Yiw55qE5omn6KGM5LiA5qyh77yM5L2G5a6e6ZmF5LiK5LiN5YaN5piv5Y6f5p2l55qE54q25oCBCiAqLwoKY29uc3QgcG9vbCA9IG5ldyBNYXAoW1snbG9hZGluZycsIFtdXSwgWydpbnRlcmFjdGl2ZScsIFtdXSwgWydET01Db250ZW50TG9hZGVkJywgW11dLCAvLyDmianlsZXnirbmgIEKWydjb21wbGV0ZScsIFtdXSwgWydsb2FkJywgW11dIC8vIOaJqeWxleeKtuaAge+8jOS4jeS4gOWumuWPr+S7peebkeWQrOWIsApdKTsKbGV0IGN1cnJlbnRTdGF0ZSA9IGRvY3VtZW50LnJlYWR5U3RhdGU7Cgpjb25zdCBleGVjdXRlID0gKHJlYWR5U3RhdGUgPSBjdXJyZW50U3RhdGUpID0+IHsKICBjdXJyZW50U3RhdGUgPSByZWFkeVN0YXRlOwoKICBmb3IgKGNvbnN0IFtzdGF0ZSwgZnVuY3Rpb25zXSBvZiBwb29sKSB7CiAgICB3aGlsZSAoZnVuY3Rpb25zLmxlbmd0aCkgewogICAgICBmdW5jdGlvbnMuc2hpZnQoKSgpOwogICAgfQoKICAgIGlmIChyZWFkeVN0YXRlID09PSBzdGF0ZSkgYnJlYWs7CiAgfQp9OwoKd2FybignZG9jdW1lbnQucmVhZHlTdGF0ZScsIGN1cnJlbnRTdGF0ZSk7CmV4ZWN1dGUoKTsKCmlmIChkb2N1bWVudC5yZWFkeVN0YXRlICE9PSAnY29tcGxldGUnKSB7CiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVhZHlzdGF0ZWNoYW5nZScsICgpID0+IGV4ZWN1dGUoZG9jdW1lbnQucmVhZHlTdGF0ZSkpOwogIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4gZXhlY3V0ZSgnRE9NQ29udGVudExvYWRlZCcpKTsKfQoKd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiBleGVjdXRlKCdsb2FkJykpOwoKY29uc3Qgd3JhcHBlciA9IChyZWFkeVN0YXRlLCBmbikgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgcG9vbC5nZXQocmVhZHlTdGF0ZSkucHVzaChmdW5jdGlvbiAoKSB7CiAgICByZXNvbHZlKGZuPy4oKSk7CiAgfSkgLy8g6L6555WM5oOF5Ya177yM5Yqg6L295a6M6L+Y5pyJ5Zue6LCD5re75Yqg5Lmf5omn6KGM5LiA5LiLCiAgOwogIFsnY29tcGxldGUnLCAnbG9hZCddLmluY2x1ZGVzKGN1cnJlbnRTdGF0ZSkgJiYgZXhlY3V0ZSgpOwp9KTsKCmNvbnN0IGxvYWRpbmcgPSBmbiA9PiB3cmFwcGVyKCdsb2FkaW5nJywgZm4pOwpjb25zdCBpbnRlcmFjdGl2ZSA9IGZuID0+IHdyYXBwZXIoJ2ludGVyYWN0aXZlJywgZm4pOwpjb25zdCBET01Db250ZW50TG9hZGVkID0gZm4gPT4gd3JhcHBlcignRE9NQ29udGVudExvYWRlZCcsIGZuKTsKY29uc3QgY29tcGxldGUgPSBmbiA9PiB3cmFwcGVyKCdjb21wbGV0ZScsIGZuKTsKY29uc3QgbG9hZCA9IGZuID0+IHdyYXBwZXIoJ2xvYWQnLCBmbik7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy91dGlscy9xdWVyeXN0cmluZy50cwovKioKICog6Kej5p6QcXVlcnlzdHJpbmcKICogQHBhcmFtIHtzdHJpbmd9IGhyZWYg5oiWIOW4puacieWPguaVsOagvOW8j+eahHN0cmluZ++8m+aciXNlYXJjaOWImeS4jeWGjWhhc2gKICogQHJldHVybiB7b2JqZWN0fQogKi8KZnVuY3Rpb24gcGFyc2UoaHJlZiA9IGxvY2F0aW9uLmhyZWYpIHsKICBpZiAoIWhyZWYpIHJldHVybiB7fTsKICBsZXQgc2VhcmNoOwoKICB0cnkgewogICAgLy8g6ZO+5o6lCiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGhyZWYpOwogICAgKHsKICAgICAgc2VhcmNoCiAgICB9ID0gdXJsKTsgLy8g5Li76KaB5aSE55CG5a+5aGFzaOeahHNlYXJjaAoKICAgIGlmICghc2VhcmNoICYmIHVybC5oYXNoLmluY2x1ZGVzKCc/JykpIHsKICAgICAgc2VhcmNoID0gdXJsLmhhc2guc3BsaXQoJz8nKVsxXTsKICAgIH0KICB9IGNhdGNoIHsKICAgIC8vIOmdnumTvuaOpSzlpoLvvJphPTEmYj0y44CBP2E9MeOAgS9mb28/YT0x44CBL2ZvbyNiYXI/YT0xCiAgICBpZiAoaHJlZi5pbmNsdWRlcygnPycpKSB7CiAgICAgIHNlYXJjaCA9IGhyZWYuc3BsaXQoJz8nKVsxXTsKICAgIH0gZWxzZSB7CiAgICAgIHNlYXJjaCA9IGhyZWY7CiAgICB9CiAgfQoKICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoKSk7Cn0KZnVuY3Rpb24gc3RyaW5naWZ5KG9iaikgewogIHJldHVybiBPYmplY3QuZW50cmllcyhvYmopIC8vIOi/h+a7pCB1bmRlZmluZWTvvIzkv53nlZkgbnVsbCDkuJTovazmiJAnJwogIC5maWx0ZXIoKFssIHZhbHVlXSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCkubWFwKChba2V5LCB2YWx1ZV0pID0+IGAke2tleX09JHt2YWx1ZSA/PyAnJ31gKS5qb2luKCcmJyk7Cn0KOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3V0aWxzL3NlbGVjdG9yLnRzCmNvbnN0ICQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yLmJpbmQoZG9jdW1lbnQpOwpjb25zdCAkJCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwuYmluZChkb2N1bWVudCk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy1qaWFuc2h1LWNvbS5qcwpjb25zdCBqaWFuc2h1ID0gKCkgPT4gKHsKICBxdWVyeTogJ3VybCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL2xpbmstemhpaHUtY29tLmpzCmNvbnN0IHpoaWh1ID0gKCkgPT4gKHsKICBxdWVyeTogJ3RhcmdldCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3QtY24uanMKCmNvbnN0IHdlaWJvID0gYXN5bmMgKCkgPT4gewogIGxldCBsaW5rID0gJCgnLm9wZW4tdXJsIGFbaHJlZl0nKT8uaHJlZjsKICBsaW5rIHx8IChsaW5rID0gYXdhaXQgZmV0Y2gobG9jYXRpb24uaHJlZikudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5oZWFkZXJzLmdldCgnbG9jYXRpb24nKSkpOwogIHJldHVybiB7CiAgICBsaW5rCiAgfTsKfTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvd2VpYm8tY24uanMKY29uc3Qgd2VpYm9fY25fd2VpYm8gPSAoKSA9PiAoewogIHF1ZXJ5OiAndG9hc3R1cmwnCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy9tYWlsLXFxLWNvbS5qcwoKY29uc3QgcXFNYWlsID0gKCkgPT4gKHsKICBsaW5rOiBwYXJzZSgpLnVybCB8fCBwYXJzZSgpLmdvdXJsCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy9jLXBjLXFxLWNvbS5qcwpjb25zdCBxcVBDID0gKCkgPT4gKHsKICBxdWVyeTogJ3BmdXJsJwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvZG9jcy1xcS1jb20uanMKY29uc3QgcXFEb2NzID0gKCkgPT4gKHsKICBxdWVyeTogJ3VybCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL2FwcC15aW54aWFuZy1jb20uanMKY29uc3QgeWlueGlhbmcgPSAoKSA9PiAoewogIHF1ZXJ5OiAnZGVzdCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL2p1bXAyLWJkaW1nLWNvbS5qcwpjb25zdCB0aWViYSA9ICgpID0+ICh7CiAgc2VsZWN0b3I6ICcud2FybmluZ19pbmZvIGE6bnRoLW9mLXR5cGUoMSlbaHJlZl0nLAogIGF0dHI6ICdocmVmJwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvbGluay1jc2RuLW5ldC5qcwpjb25zdCBjc2RuID0gKCkgPT4gKHsKICBxdWVyeTogJ3RhcmdldCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy15b3V0dWJlLWNvbS5qcwpjb25zdCB5b3V0dWJlID0gKCkgPT4gKHsKICBxdWVyeTogJ3EnCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy93ZWl4aW4xMTAtcXEtY29tLmpzCi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqLwoKY29uc3Qgd2VpeGluID0gKCkgPT4gewogIGNvbnN0IHsKICAgIG1haW5fdHlwZQogIH0gPSBwYXJzZSgpOwoKICBzd2l0Y2ggKG1haW5fdHlwZSkgewogICAgY2FzZSAnMSc6CiAgICAgIHJldHVybiB7CiAgICAgICAgc2VsZWN0b3I6ICcud2V1aS1tc2dfX3RleHQtYXJlYSAudWktZWxscGlzaXMtY29udGVudCBwJwogICAgICB9OwoKICAgIGNhc2UgJzInOgogICAgICB7CiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChsb2NhdGlvbik7IC8vIOi9rOS4ujHlj6/ov5jljp/pk77mjqUKCiAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ21haW5fdHlwZScsICcxJyk7CiAgICAgICAgbG9jYXRpb24ucmVwbGFjZSh1cmwudG9TdHJpbmcoKSk7CiAgICAgIH0KICB9CgogIHJldHVybiB7fTsKfTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvZGV2ZWxvcGVycy13ZWl4aW4tcXEtY29tLmpzCmNvbnN0IHdlaXhpbkRldmVsb3BlcnMgPSAoKSA9PiAoewogIHF1ZXJ5OiAnaHJlZicKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy1pdGRhYW4tY29tLmpzCmNvbnN0IGl0ZGFhbiA9ICgpID0+ICh7CiAgc2VsZWN0b3I6ICcuc2FmZXR5LXVybCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy1kb3ViYW4tY29tLmpzCmNvbnN0IGRvdWJhbiA9ICgpID0+ICh7CiAgcXVlcnk6ICd1cmwnCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy93d3ctMzYwZG9jLWNvbS5qcwoKCmNvbnN0IGRvYzM2MCA9ICgpID0+IHsKICAkKCcjYXJ0Q29udGVudCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4gewogICAgY29uc3QgewogICAgICB0YXJnZXQKICAgIH0gPSBldmVudDsKICAgIGNvbnN0IHsKICAgICAgaHJlZgogICAgfSA9IHRhcmdldDsKICAgIHdhcm4odGFyZ2V0KTsKICAgIGlmICh0YXJnZXQubm9kZU5hbWUgIT09ICdBJykgcmV0dXJuOwogICAgaWYgKCFocmVmKSByZXR1cm47IC8vIOaYr+WQpuacrOermQoKICAgIGlmIChuZXcgUmVnRXhwKGxvY2F0aW9uLmhvc3QpLnRlc3QobmV3IFVSTChocmVmKS5ob3N0KSkgcmV0dXJuOwogICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICB3aW5kb3cub3BlbihocmVmKTsKICB9LCB0cnVlKTsKICByZXR1cm4ge307Cn07CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy1waXhpdi1uZXQuanMKCmNvbnN0IHBpeGl2ID0gKCkgPT4gewogIGxldCBsaW5rOyAvLyDpk77mjqXlsYXnhLbmmK/nm7TmjqXmi7zlnKh1cmzkuIrnmoQKICAvLyBodHRwczovL3d3dy5waXhpdi5uZXQvanVtcC5waHA/aHR0cHMlM0ElMkYlMkZ3d3cuaHVhd2VpLmNvbSUyRmNuJTJGY29ycG9yYXRlLWluZm9ybWF0aW9uCgogIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHBhcnNlKCkpKSB7CiAgICB0cnkgewogICAgICBsaW5rIHx8IChsaW5rID0gbmV3IFVSTChrZXkpLmhyZWYpOwogICAgfSBjYXRjaCB7fQoKICAgIHRyeSB7CiAgICAgIGxpbmsgfHwgKGxpbmsgPSBuZXcgVVJMKHZhbHVlKS5ocmVmKTsKICAgIH0gY2F0Y2gge30KICB9CgogIHJldHVybiB7CiAgICBsaW5rCiAgfTsKfTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvbS1zb2dvdS1jb20uanMKY29uc3Qgc29nb3UgPSAoKSA9PiAoewogIHF1ZXJ5OiAndXJsJwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvd3d3LWdvb2dsZS1jb20uanMKY29uc3QgZ29vZ2xlID0gKCkgPT4gKHsKICBxdWVyeTogJ3VybCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy1jaGluYXotY29tLmpzCmNvbnN0IGNoaW5heiA9ICgpID0+ICh7CiAgcXVlcnk6ICd1cmwnCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy93d3ctb3NjaGluYS1uZXQuanMKY29uc3Qgb3NjaGluYSA9ICgpID0+ICh7CiAgcXVlcnk6ICd1cmwnCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy9saW5rLWp1ZWppbi1jbi5qcwpjb25zdCBqdWVqaW4gPSAoKSA9PiAoewogIHF1ZXJ5OiAndGFyZ2V0Jwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvd3d3LXBjNi1jb20uanMKY29uc3QgcGM2ID0gKCkgPT4gKHsKICBxdWVyeTogJ2dvdXJsJwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvYWZkaWFuLW5ldC5qcwpjb25zdCBhZmRpYW4gPSAoKSA9PiAoewogIHF1ZXJ5OiAndGFyZ2V0Jwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvZ2l0ZWUtY29tLmpzCmNvbnN0IGdpdGVlID0gKCkgPT4gKHsKICBxdWVyeTogJ3RhcmdldCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL3d3dy10aWFueWFuY2hhLWNvbS5qcwpjb25zdCB0aWFueWFuY2hhID0gKCkgPT4gKHsKICBxdWVyeTogJ3RhcmdldCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL2FpcWljaGEtYmFpZHUtY29tLmpzCmNvbnN0IGFpcWljaGEgPSAoKSA9PiAoewogIHF1ZXJ5OiAndGFyZ2V0Jwp9KTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3Qvc2l0ZXMvd3d3LXFjYy1jb20uanMKY29uc3QgcWNjID0gKCkgPT4gKHsKICBxdWVyeTogJ2xpbmsnCn0pOwo7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvc2NyaXB0cy9yZWRpcmVjdC9zaXRlcy9saW5rLXVpc2RjLWNvbS5qcwpjb25zdCB1aXNkYyA9ICgpID0+ICh7CiAgcXVlcnk6ICdyZWRpcmVjdCcKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL2Jsb2ctNTFjdG8tY29tLmpzCmNvbnN0IGN0bzUxID0gKCkgPT4gKHsKICBsaW5rOiBsb2NhdGlvbi5zZWFyY2guc2xpY2UoMSkKfSk7CjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9zY3JpcHRzL3JlZGlyZWN0L3NpdGVzL2luZGV4LmpzCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmNvbnN0IHNpdGVzID0gW3sKICBuYW1lOiAn566A5LmmJywKICB0ZXN0OiAnd3d3LmppYW5zaHUuY29tL2dvLXdpbGQnLAogIHVzZTogamlhbnNodQp9LCB7CiAgbmFtZTogJ+efpeS5jicsCiAgdGVzdDogJ2xpbmsuemhpaHUuY29tLycsCiAgdXNlOiB6aGlodQp9LCB7CiAgbmFtZTogJ+W+ruWNmicsCiAgdGVzdDogL150XC5jblwvLywKICByZWFkeVN0YXRlOiAnaW50ZXJhY3RpdmUnLAogIHVzZTogd2VpYm8KfSwgewogIG5hbWU6ICflvq7ljZonLAogIC8vIOS4jeWQjOinhOWImQogIHRlc3Q6ICd3ZWliby5jbi9zaW5hdXJsJywKICB1c2U6IHdlaWJvX2NuX3dlaWJvCn0sIHsKICBuYW1lOiAnUVHpgq7nrrEnLAogIHRlc3Q6IFsvXm1haWxcLnFxXC5jb21cL2NnaS1iaW5cL3JlYWR0ZW1wbGF0ZS8sIC8vIOWlveWDj+S4jeeUqOeZu+W9leS5n+WPr+S7pQogIC9ebWFpbFwucXFcLmNvbVwvY2dpLWJpblwvbWFpbF9zcGFtLyAvLyDpnIDopoHnmbvlvZXpgq7nrrHmiY3lj6/ku6XvvIzkuI3ov4fov5nph4zku43nhLblj6/ku6XluK7lv5not7PovawKICBdLAogIHVzZTogcXFNYWlsCn0sIHsKICBuYW1lOiAnUVFQQycsCiAgdGVzdDogJ2MucGMucXEuY29tL21pZGRsZW0uaHRtbCcsCiAgdXNlOiBxcVBDCn0sIHsKICBuYW1lOiAn6IW+6K6v5paH5qGjJywKICB0ZXN0OiAnZG9jcy5xcS5jb20vc2NlbmFyaW8vbGluay5odG1sJywKICB1c2U6IHFxRG9jcwp9LCB7CiAgbmFtZTogJ+WNsOixoeeslOiusCcsCiAgdGVzdDogL15hcHBcLnlpbnhpYW5nXC5jb21cL091dGJvdW5kUmVkaXJlY3QvLAogIHVzZTogeWlueGlhbmcKfSwgewogIG5hbWU6ICfotLTlkKcnLAogIHRlc3Q6IC9eanVtcDI/XC5iZGltZ1wuY29tXC9zYWZlY2hlY2svLAogIC8vIOS7peWJjeeahOWcsOWdgOayoeaciSAyCiAgcmVhZHlTdGF0ZTogJ2ludGVyYWN0aXZlJywKICB1c2U6IHRpZWJhCn0sIHsKICBuYW1lOiAnQ1NETicsCiAgdGVzdDogJ2xpbmsuY3Nkbi5uZXQvJywKICB1c2U6IGNzZG4KfSwgewogIG5hbWU6ICdZb3VUdWJlJywKICB0ZXN0OiAnd3d3LnlvdXR1YmUuY29tL3JlZGlyZWN0JywKICB1c2U6IHlvdXR1YmUKfSwgewogIG5hbWU6ICflvq7kv6EnLAogIHRlc3Q6IC9ed2VpeGluMTEwXC5xcVwuY29tXC9jZ2ktYmluXC9tbXNwYW1zdXBwb3J0LWJpblwvbmV3cmVkaXJlY3Rjb25maXJtY2dpLywKICByZWFkeVN0YXRlOiAnaW50ZXJhY3RpdmUnLAogIHVzZTogd2VpeGluCn0sIHsKICBuYW1lOiAn5b6u5L+h5byA5pS+56S+5Yy6JywKICB0ZXN0OiAnZGV2ZWxvcGVycy53ZWl4aW4ucXEuY29tL2NvbW11bml0eS9taWRkbGVwYWdlL2hyZWYnLAogIHVzZTogd2VpeGluRGV2ZWxvcGVycwp9LCB7CiAgbmFtZTogJ+W8gOWPkeiAheefpeivhuW6kycsCiAgdGVzdDogL153d3dcLml0ZGFhbi5jb21cL2xpbmtcLy8sCiAgcmVhZHlTdGF0ZTogJ2ludGVyYWN0aXZlJywKICB1c2U6IGl0ZGFhbgp9LCB7CiAgbmFtZTogJ+ixhueToycsCiAgdGVzdDogJ3d3dy5kb3ViYW4uY29tL2xpbmsyLycsCiAgdXNlOiBkb3ViYW4KfSwgewogIG5hbWU6ICfkuKrkurrlm77kuabppoYnLAogIHRlc3Q6IC9ed3d3XC4zNjBkb2MuY29tXC9jb250ZW50XC8vLAogIHJlYWR5U3RhdGU6ICdpbnRlcmFjdGl2ZScsCiAgdXNlOiBkb2MzNjAKfSwgewogIG5hbWU6ICdQaXhpdicsCiAgdGVzdDogJ3d3dy5waXhpdi5uZXQvanVtcC5waHAnLAogIHVzZTogcGl4aXYKfSwgewogIG5hbWU6ICfmkJzni5cnLAogIHRlc3Q6IC9ebVwuc29nb3VcLmNvbS4qdGMkLywKICB1c2U6IHNvZ291Cn0sIHsKICBuYW1lOiAnR29vZ2xlJywKICB0ZXN0OiAvXnd3d1wuZ29vZ2xlXC4uezIsN311cmwkLywKICB1c2U6IGdvb2dsZQp9LCB7CiAgbmFtZTogJ+ermemVv+S5i+WuticsCiAgdGVzdDogJ3d3dy5jaGluYXouY29tL2dvLnNodG1sJywKICB1c2U6IGNoaW5hegp9LCB7CiAgbmFtZTogJ09TQ0hJTkEnLAogIHRlc3Q6ICd3d3cub3NjaGluYS5uZXQvYWN0aW9uL0dvVG9MaW5rJywKICB1c2U6IG9zY2hpbmEKfSwgewogIG5hbWU6ICfmjpjph5EnLAogIHRlc3Q6ICdsaW5rLmp1ZWppbi5jbi8nLAogIHVzZToganVlamluCn0sIHsKICBuYW1lOiAncGM25LiL6L2956uZJywKICB0ZXN0OiAnd3d3LnBjNi5jb20vZ29yZWFkLmh0bWwnLAogIHVzZTogcGM2Cn0sIHsKICBuYW1lOiAn54ix5Y+R55S1JywKICB0ZXN0OiAnYWZkaWFuLm5ldC9saW5rJywKICB1c2U6IGFmZGlhbgp9LCB7CiAgbmFtZTogJ0dpdGVlJywKICB0ZXN0OiAnZ2l0ZWUuY29tL2xpbmsnLAogIHVzZTogZ2l0ZWUKfSwgewogIG5hbWU6ICflpKnnnLzmn6UnLAogIHRlc3Q6ICd3d3cudGlhbnlhbmNoYS5jb20vc2VjdXJpdHknLAogIHVzZTogdGlhbnlhbmNoYQp9LCB7CiAgbmFtZTogJ+eIseS8geafpScsCiAgdGVzdDogJ2FpcWljaGEuYmFpZHUuY29tL3NhZmV0aXAnLAogIHVzZTogYWlxaWNoYQp9LCB7CiAgbmFtZTogJ+S8geafpeafpScsCiAgdGVzdDogJ3d3dy5xY2MuY29tL3dlYi90cmFuc2Zlci1saW5rJywKICB1c2U6IHFjYwp9LCB7CiAgbmFtZTogJ+S8mOiuvue9kScsCiAgdGVzdDogJ2xpbmsudWlzZGMuY29tLycsCiAgdXNlOiB1aXNkYwp9LCB7CiAgbmFtZTogJzUxQ1RPJywKICB0ZXN0OiAnYmxvZy41MWN0by5jb20vdHJhbnNmZXInLAogIHVzZTogY3RvNTEKfSwgewogIG5hbWU6ICflipvmiaMnLAogIHRlc3Q6ICdsZWV0Y29kZS1jbi5jb20vbGluay8nLAogIHVzZTogKCkgPT4gKHsKICAgIHF1ZXJ5OiAndGFyZ2V0JwogIH0pCn1dOwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIGNvbnN0IHJlZGlyZWN0X3NpdGVzID0gKHNpdGVzKTsKOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3NjcmlwdHMvcmVkaXJlY3QvaW5kZXguanMKZnVuY3Rpb24gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHJlY2VpdmVyLCBwcml2YXRlS2V5KSB7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlY2VpdmVyLCBwcml2YXRlS2V5KSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJhdHRlbXB0ZWQgdG8gdXNlIHByaXZhdGUgZmllbGQgb24gbm9uLWluc3RhbmNlIik7IH0gcmV0dXJuIHJlY2VpdmVyOyB9Cgp2YXIgaWQgPSAwOwoKZnVuY3Rpb24gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkobmFtZSkgeyByZXR1cm4gIl9fcHJpdmF0ZV8iICsgaWQrKyArICJfIiArIG5hbWU7IH0KCgoKCgoKCmZ1bmN0aW9uIGhpZGVQYWdlKCkgewogIGZ1bmN0aW9uIGhpZGUoKSB7CiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmNzc1RleHQgPSAnZGlzcGxheTpub25lICFpbXBvcnRhbnQ7JzsKICB9CgogIGRvY3VtZW50LmJvZHkgPyBoaWRlKCkgOiBpbnRlcmFjdGl2ZShoaWRlKTsKfQoKdmFyIF9zaXRlcyA9IC8qI19fUFVSRV9fKi9fY2xhc3NQcml2YXRlRmllbGRMb29zZUtleSgic2l0ZXMiKTsKCnZhciBfaW5jbHVkZXMgPSAvKiNfX1BVUkVfXyovX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkoImluY2x1ZGVzIik7Cgp2YXIgX3BhcnNlID0gLyojX19QVVJFX18qL19jbGFzc1ByaXZhdGVGaWVsZExvb3NlS2V5KCJwYXJzZSIpOwoKdmFyIF9lbnN1cmUgPSAvKiNfX1BVUkVfXyovX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkoImVuc3VyZSIpOwoKY2xhc3MgQXBwIHsKICBjb25zdHJ1Y3RvcihzaXRlcykgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIF9lbnN1cmUsIHsKICAgICAgdmFsdWU6IF9lbnN1cmUyCiAgICB9KTsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfcGFyc2UsIHsKICAgICAgdmFsdWU6IF9wYXJzZTIKICAgIH0pOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIF9pbmNsdWRlcywgewogICAgICB2YWx1ZTogX2luY2x1ZGVzMgogICAgfSk7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgX3NpdGVzLCB7CiAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICB2YWx1ZTogW10KICAgIH0pOwogICAgX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9zaXRlcylbX3NpdGVzXSA9IHNpdGVzOwogIH0KCiAgYm9vdCgpIHsKICAgIGNvbnN0IGJyaWVmVVJMID0gbG9jYXRpb24uaG9zdCArIGxvY2F0aW9uLnBhdGhuYW1lOwoKICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfc2l0ZXMpW19zaXRlc10uZm9yRWFjaChhc3luYyBzaXRlID0+IHsKICAgICAgY29uc3QgewogICAgICAgIG5hbWUsCiAgICAgICAgdGVzdCwKICAgICAgICB1c2UKICAgICAgfSA9IHNpdGU7CiAgICAgIGlmICghX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9pbmNsdWRlcylbX2luY2x1ZGVzXSh0ZXN0LCBicmllZlVSTCkpIHJldHVybjsKICAgICAgY29uc3QgewogICAgICAgIHJlYWR5U3RhdGU6IHN0YXRlCiAgICAgIH0gPSBzaXRlOwogICAgICBpZiAoc3RhdGUpIGF3YWl0IHJlYWR5X3N0YXRlX25hbWVzcGFjZU9iamVjdFtzdGF0ZV0oKTsKICAgICAgY29uc3QgcmVkaXJlY3Rpb24gPSBhd2FpdCBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX3BhcnNlKVtfcGFyc2VdKHVzZSk7CiAgICAgIHRhYmxlKHsKICAgICAgICBuYW1lLAogICAgICAgIGJyaWVmVVJMLAogICAgICAgIHJlZGlyZWN0aW9uCiAgICAgIH0pOwogICAgICBpZiAoIXJlZGlyZWN0aW9uKSByZXR1cm47CiAgICAgIGxvY2F0aW9uLnJlcGxhY2UocmVkaXJlY3Rpb24pOyAvLyDkuLrku4DkuYjopoHov5nmoLflgZrvvJ8KICAgICAgLy8g5Y+q5piv5Li65LqG6YG/5YWN6KKr6Zeu4oCd5ZOO77yB5oCO5LmI5aW95YOP5rKh5pyJ6Lez6L2s5ZWK77yf77yB4oCc55qE54Om5oG877yI5a6e6ZmF5LiK6Lez6L2s5LqG5Y+q5piv5aSW6ZO+5omT5byA5oWi77yJKHhfeCkKCiAgICAgIGhpZGVQYWdlKCk7CiAgICB9KTsKICB9Cgp9CgpmdW5jdGlvbiBfaW5jbHVkZXMyKHRlc3QsIHVybCkgewogIHJldHVybiBbXS5jb25jYXQodGVzdCkuc29tZShpdGVtID0+IHsKICAgIGlmICh0eXBlb2YgaXRlbSA9PT0gJ3N0cmluZycpIHJldHVybiBpdGVtID09PSB1cmw7CiAgICBpZiAoaXRlbSBpbnN0YW5jZW9mIFJlZ0V4cCkgcmV0dXJuIGl0ZW0udGVzdCh1cmwpOwogICAgaWYgKHR5cGVvZiBpdGVtID09PSAnYm9vbGVhbicpIHJldHVybiBpdGVtOwogICAgcmV0dXJuIGZhbHNlOwogIH0pOwp9Cgphc3luYyBmdW5jdGlvbiBfcGFyc2UyKHVzZSkgewogIGNvbnN0IHsKICAgIHF1ZXJ5LAogICAgbGluaywKICAgIHNlbGVjdG9yLAogICAgYXR0cgogIH0gPSBhd2FpdCB1c2UoKTsKICBsZXQgcmVkaXJlY3Rpb24gPSBudWxsOwoKICBpZiAocXVlcnkpIHsKICAgIHJlZGlyZWN0aW9uID0gcGFyc2UoKVtxdWVyeV07CiAgfSBlbHNlIGlmIChsaW5rKSB7CiAgICByZWRpcmVjdGlvbiA9IGxpbms7CiAgfSBlbHNlIGlmIChzZWxlY3RvcikgewogICAgcmVkaXJlY3Rpb24gPSAkKHNlbGVjdG9yKT8uW2F0dHIgPz8gJ2lubmVyVGV4dCddOwogIH0KCiAgcmVkaXJlY3Rpb24gJiYgKHJlZGlyZWN0aW9uID0gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9lbnN1cmUpW19lbnN1cmVdKHJlZGlyZWN0aW9uLnRyaW0oKSkpOwogIHJldHVybiByZWRpcmVjdGlvbjsKfQoKZnVuY3Rpb24gX2Vuc3VyZTIodXJsKSB7CiAgdHJ5IHsKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXcKICAgIG5ldyBVUkwodXJsKTsKICB9IGNhdGNoIChlcnJvcikgewogICAgd2FybihlcnJvcik7IC8vIOS/ruWkjeafkOS6m+mTvuaOpeayoeaciSBwcm90b2NvbCDlr7zoh7Tot7PovazkuI3mraPnoa4KICAgIC8vIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy80MTYzMzgtcmVkaXJlY3Qt5aSW6ZO+6Lez6L2sL2Rpc2N1c3Npb25zLzY5MTc4CgogICAgY29uc3QgcHJvdG9jb2wgPSAnaHR0cDonOwogICAgdXJsID0gcHJvdG9jb2wgKyAnLy8nICsgdXJsOwogIH0KCiAgcmV0dXJuIHVybDsKfQoKbmV3IEFwcChyZWRpcmVjdF9zaXRlcykuYm9vdCgpOwovKioqKioqLyB9KSgpCjs="},{"name":"Auto Redirect","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://link.zhihu.com/*","https://www.jianshu.com/go-wild*","https://steamcommunity.com/linkfilter*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1622083490820,"data":{}},"enabled":true,"position":17,"file_url":"https://greasyfork.org/scripts/426352-auto-redirect/code/Auto%20Redirect.user.js","uuid":"1b207d96-60eb-42fa-9b3a-552febff3c45","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBdXRvIFJlZGlyZWN0Ci8vIEBuYW1lc3BhY2UgICAgY29kZXJ6aGFveml3ZWlAb3V0bG9vay5jb20KLy8gQGRlc2NyaXB0aW9uICDnvZHnq5nlpJbpg6jpk77mjqXoh6rliqjot7PovawgfCDnn6XkuY4gfCDnroDkuaYgfCBTdGVhbQovLyBAdmVyc2lvbiAgICAgIDEuMC4yCi8vIEBob21lcGFnZSAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQyNjM1MgovLyBAYXV0aG9yICAgICAgIENvZGVyIFpoYW8KLy8gQG1hdGNoICAgICAgICBodHRwczovL2xpbmsuemhpaHUuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3d3dy5qaWFuc2h1LmNvbS9nby13aWxkKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vc3RlYW1jb21tdW5pdHkuY29tL2xpbmtmaWx0ZXIqCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAidXNlIHN0cmljdCI7CgogIC8qKgogICAqIEBrZXkgcGFyYW1rZXkgLSDmn6Xor6LlrZfkuLIgbG9jYXRpb24uc2VhcmNoIOS4reaMh+WumueahCBrZXkKICAgKiBAa2V5IGhvc3RuYW1lIC0g5Li75py65ZCN56ewIGxvY2F0aW9uLmhvc3RuYW1lIOeahOWAvAogICAqIEBrZXkgdGVzdGxpbmsgLSDmtYvor5Xpk77mjqUg5Y+v55yB55WlCiAgICovCiAgY29uc3QgbGlzdCA9IFsKICAgIHsKICAgICAgInBhcmFta2V5IjogInRhcmdldCIsCiAgICAgICJob3N0bmFtZSI6ICJsaW5rLnpoaWh1LmNvbSIsCiAgICAgICJ0ZXN0bGluayI6ICJodHRwczovL2xpbmsuemhpaHUuY29tLz90YXJnZXQ9aHR0cHM6Ly9naXRodWIuY29tL2NvZGVyemhhb3ppd2VpIiwKICAgIH0sCiAgICB7CiAgICAgICJwYXJhbWtleSI6ICJ1cmwiLAogICAgICAiaG9zdG5hbWUiOiAid3d3LmppYW5zaHUuY29tIiwKICAgICAgInRlc3RsaW5rIjogImh0dHBzOi8vd3d3LmppYW5zaHUuY29tL2dvLXdpbGQ/YWM9MiZ1cmw9aHR0cHM6Ly9naXRodWIuY29tL2NvZGVyemhhb3ppd2VpIiwKICAgIH0sCiAgICB7CiAgICAgICJwYXJhbWtleSI6ICJ1cmwiLAogICAgICAiaG9zdG5hbWUiOiAic3RlYW1jb21tdW5pdHkuY29tIiwKICAgICAgInRlc3RsaW5rIjogImh0dHBzOi8vc3RlYW1jb21tdW5pdHkuY29tL2xpbmtmaWx0ZXIvP3VybD1odHRwczovL2dpdGh1Yi5jb20vY29kZXJ6aGFveml3ZWkiLAogICAgfSwKICBdOwoKICBsaXN0LmZpbmQoZGF0YSA9PiB7CiAgICBpZiAobG9jYXRpb24uaG9zdG5hbWUgPT09IGRhdGEuaG9zdG5hbWUpIHsKICAgICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhsb2NhdGlvbi5zZWFyY2gpOwogICAgICBjb25zdCBrZXkgPSBkYXRhLnBhcmFta2V5OwoKICAgICAgaWYgKHBhcmFtcy5oYXMoa2V5KSkgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UocGFyYW1zLmdldChrZXkpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHBhcmFtcy5oYXMoa2V5KTsKICAgIH0KICB9KTsKCn0pKCk7Cg=="},{"name":"Ëß£Èô§ÁΩëÈ°µÈôêÂà∂","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":["userjs.rxliuli.com"],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1647701323013,"data":{"LastUpdate":"n1624192428260","LastValue":"uundefined","{\"type\":\"domain\",\"url\":\"699pic.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"b.faloo.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"bbs.mihoyo.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"blog.csdn.net\"}":"btrue","{\"type\":\"domain\",\"url\":\"boke112.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"book.zongheng.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"chokstick.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"ciweimao.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"cnitpm.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"commandlinux.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"juejin.cn\"}":"btrue","{\"type\":\"domain\",\"url\":\"leetcode-cn.com\"}":"bfalse","{\"type\":\"domain\",\"url\":\"mbalib.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"qiangwaikan.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"segmentfault.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"time.geekbang.org\"}":"btrue","{\"type\":\"domain\",\"url\":\"wenku.baidu.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"weread.qq.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.17k.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.30edu.com.cn\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.360doc.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.51test.net\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.7fyd.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.ciweimao.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.cnitpm.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.cspengbo.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.diyifanwen.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.ehuixue.cn\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.fanfiction.net\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.hongshu.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.hongxiu.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.liuxue86.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.lovehtbooks.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.oschina.net\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.qidian.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.readnovel.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.tadu.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.tui555.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.uslsoftware.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.v1tx.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.x23qb.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.xiexiebang.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.xuexi.la\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.xuexila.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.yamibo.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.yuque.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.zgywyd.cn\"}":"btrue","{\"type\":\"domain\",\"url\":\"www.zhihu.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"wx.zsxq.com\"}":"btrue","{\"type\":\"domain\",\"url\":\"yc.ireader.com.cn\"}":"btrue","{\"type\":\"domain\",\"url\":\"zh.moegirl.org.cn\"}":"btrue","{\"type\":\"domain\",\"url\":\"zhinan.sogou.com\"}":"btrue","{\"type\":\"linkPrefix\",\"url\":\"http://www.imooc.com/article/\"}":"btrue","{\"type\":\"linkPrefix\",\"url\":\"https://www.bilibili.com/read/\"}":"btrue","{\"type\":\"regex\",\"url\":\".*\\\\.pixnet\\\\.net\"}":"btrue"}},"enabled":false,"position":18,"file_url":"https://greasyfork.org/scripts/391193-%E8%A7%A3%E9%99%A4%E7%BD%91%E9%A1%B5%E9%99%90%E5%88%B6/code/%E8%A7%A3%E9%99%A4%E7%BD%91%E9%A1%B5%E9%99%90%E5%88%B6.user.js","uuid":"4091dd85-ed53-4601-811e-88b57c3a25b6","source":"","requires":[{"meta":{"name":"index.min.js","url":"https://cdn.jsdelivr.net/npm/rx-util@1.9.2/dist/index.min.js","ts":1647427233581,"mimetype":"text/javascript"},"source":""}]},{"name":"ÁΩëÈ°µÈôêÂà∂Ëß£Èô§(Êîπ)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["eemm.me"],"orig_excludes":["*www.bilibili.com/video*","*www.bilibili.com/v*","*www.bilibili.com/bangumi*","*www.youtube.com/watch*","*www.panda.tv*"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1645873679275,"data":{"rwl_userData":"o{\"status\": 1,\"version\": 0.1,\"message\": \"Âï¶Âï¶Âï¶,Âï¶Âï¶Âï¶,ÊàëÊòØÂçñÊä•ÁöÑÂ∞èË°åÂÆ∂\",\"positionTop\": 0,\"positionLeft\": 0,\"positionRight\": \"auto\",\"addBtn\": true,\"connectToTheServer\": false,\"waitUpload\": [\"www.xiexiebang.com\",\"docs.qq.com\"],\"currentURL\": \"https://docs.qq.com/doc/DVWlyWGpJQ3VnSFB0?_t=1645871637294\",\"shortcut\": 3,\"rules\": {\"rule_def\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousemove|beforeunload\",\"unhook_eventNames\": \"mousedown|mouseup|keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true},\"rule_plus\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousedown|mouseup|mousemove|beforeunload\",\"unhook_eventNames\": \"keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true},\"rule_zhihu\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousemove\",\"unhook_eventNames\": \"keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true}},\"data\": [\"b.faloo.com\",\"bbs.coocaa.com\",\"boke112.com\",\"book.hjsm.tom.com\",\"book.zhulang.com\",\"book.zongheng.com\",\"chokstick.com\",\"chuangshi.qq.com\",\"chuangshi.qq.com\",\"city.udn.com\",\"cutelisa55.pixnet.net\",\"huayu.baidu.com\",\"imac.hk\",\"life.tw\",\"luxmuscles.com\",\"movie.douban.com\",\"news.missevan.com\",\"read.qidian.com\",\"vipreader.qidian.com\",\"votetw.com\",\"www.15yan.com\",\"www.17k.com\",\"www.18183.com\",\"www.360doc.com\",\"www.alphapolis.co.jp\",\"www.bimiacg.net\",\"www.coco01.net\",\"www.eyu.com\",\"www.hongshu.com\",\"www.hongxiu.com\",\"www.imooc.com\",\"www.jjwxc.net\",\"www.longmabookcn.com\",\"www.myhtebooks.com\",\"www.myhtlmebook.com\",\"www.pigai.org\",\"www.ppkao.com\",\"www.readnovel.com\",\"www.ruiwen.com\",\"www.sdifen.com\",\"www.shangc.net\",\"www.tadu.com\",\"www.uta-net.com\",\"www.xiegw.cn\",\"www.xiexiebang.com\",\"www.xxsy.net\",\"www.yuque.com\",\"www.z3z4.com\",\"www.zhihu.com\",\"yuedu.163.com\"]}"}},"enabled":false,"position":19,"file_url":"https://greasyfork.org/scripts/28497-remove-web-limits-modified/code/Remove%20web%20limits(modified).user.js","uuid":"54949b2b-991e-4d8d-8a65-67f985b04f34","source":""},{"name":"ÂÖçÁôªÈôÜÁúãÈ´òÊ∏ÖÊñóÈ±ºÂíåËôéÁâôÁõ¥Êí≠","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*www.douyu.com/*","*www.huya.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"compat_powerful_this":null},"storage":{"ts":1630663650619,"data":{}},"enabled":true,"position":20,"file_url":"https://greasyfork.org/scripts/424111-%E5%85%8D%E7%99%BB%E9%99%86%E7%9C%8B%E9%AB%98%E6%B8%85%E6%96%97%E9%B1%BC%E5%92%8C%E8%99%8E%E7%89%99%E7%9B%B4%E6%92%AD/code/%E5%85%8D%E7%99%BB%E9%99%86%E7%9C%8B%E9%AB%98%E6%B8%85%E6%96%97%E9%B1%BC%E5%92%8C%E8%99%8E%E7%89%99%E7%9B%B4%E6%92%AD.user.js","uuid":"2842dc36-8ff0-4996-85da-d63868a44546","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDlhY3nmbvpmYbnnIvpq5jmuIXmlpfpsbzlkozomY7niZnnm7Tmkq0KLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICDlhY3nmbvpmYbnnIvpq5jmuIXmlpfpsbzlkozomY7niZnnm7Tmkq3jgIIKLy8gQGF1dGhvciAgICAgICB4eGJveQovLyBAaW5jbHVkZSAgICAgICp3d3cuZG91eXUuY29tLyoKLy8gQGluY2x1ZGUgICAgICAqd3d3Lmh1eWEuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQogCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIC8vIFlvdXIgY29kZSBoZXJlLi4uCiAgICBpZih0b3Aud2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZigiZG91eXUuY29tIikgPiAtMSl7CiAgICAgICAgICAgIHZhciBhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncmF0ZVJlY29yZFRpbWVfaDVwX3Jvb20nKSk7CiAgICAgICAgICAgIGEudiA9ICJ2IjsKICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3JhdGVSZWNvcmRUaW1lX2g1cF9yb29tJyxKU09OLnN0cmluZ2lmeShhKSk7CiAgICB9CiAgICBpZih0b3Aud2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZigiaHV5YS5jb20iKSA+IC0xKXsKICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oImxvZ2luVGlwc0NvdW50IiwidiIpOwogICAgfQogCn0pKCk7"},{"name":"CSDNÊñáÁ´†ÈòÖËØª‰ºòÂåñÔºåËøáÊª§Áõ∏ÂÖ≥Êé®Ëçê‰∏≠ÁöÑ‰∏ãËΩΩÊ®°Âùó&ÂÖçÁôªÂΩïÊü•ÁúãÊâÄÊúâËØÑËÆ∫&ÂéªÂπøÂëä","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*://blog.csdn.net/*/article/details/*","*://*.blog.csdn.net/article/details/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null,"compat_powerful_this":null},"storage":{"ts":1646361476860,"data":{}},"enabled":true,"position":21,"file_url":"https://greasyfork.org/scripts/425479-csdn%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E4%BC%98%E5%8C%96-%E8%BF%87%E6%BB%A4%E7%9B%B8%E5%85%B3%E6%8E%A8%E8%8D%90%E4%B8%AD%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9D%97-%E5%85%8D%E7%99%BB%E5%BD%95%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89%E8%AF%84%E8%AE%BA-%E5%8E%BB%E5%B9%BF%E5%91%8A/code/CSDN%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E4%BC%98%E5%8C%96%EF%BC%8C%E8%BF%87%E6%BB%A4%E7%9B%B8%E5%85%B3%E6%8E%A8%E8%8D%90%E4%B8%AD%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9D%97%E5%85%8D%E7%99%BB%E5%BD%95%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89%E8%AF%84%E8%AE%BA%E5%8E%BB%E5%B9%BF%E5%91%8A.user.js","uuid":"92031a69-e0fa-4b24-91f5-8f6f1c5cbe76","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDU0RO5paH56ug6ZiF6K+75LyY5YyW77yM6L+H5ruk55u45YWz5o6o6I2Q5Lit55qE5LiL6L295qih5Z2XJuWFjeeZu+W9leafpeeci+aJgOacieivhOiuuibljrvlub/lkYoKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvNDI1NDc5Ci8vIEB2ZXJzaW9uICAgICAgNi4wCi8vIEBkZXNjcmlwdGlvbiAgY3NkbuaWh+eroOmYheivu+eVjOmdouS4i+S+p+eahOebuOWFs+aWh+eroOS4reS8muacieS4i+i9veaooeWdl++8jOS9huaYr+S4gOiIrOaIkeS7rOWPquaYr+aDs+eci+aWh+eroO+8jOS4jeaDs+i3s+WIsOebuOWFs+S4i+i9ve+8jOWboOatpOaDs+WGmeS4quiEmuacrOi/h+a7pOaOieS4i+i9veaooeWdl++8jOWQjOaXtui/mOWunueOsOWFjeeZu+W9leafpeeci+aJgOacieivhOiuuueahOWKn+iDve+8jOivhOiuuuS/neeVmee/u+mhteWKn+iDvSzpobXpnaLlrp7njrDljrvlub/lkYoKLy8gQGF1dGhvciAgICAgICBzd2VldAovLyBAaW5jbHVkZSAgICAgICo6Ly9ibG9nLmNzZG4ubmV0LyovYXJ0aWNsZS9kZXRhaWxzLyoKLy8gQGluY2x1ZGUgICAgICAqOi8vKi5ibG9nLmNzZG4ubmV0L2FydGljbGUvZGV0YWlscy8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBpY29uICAgICAgICBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvZG91Ymxlc3dlZXQwMS9CU19zY3JpcHRAbWFzdGVyL2ltYWdlL3N3ZWV0LmpwZwovLyBAbm90ZSAgICAgICAgdjYuMOWOu+mZpOWFjeeZu+W9leWkjeWItuWKn+iDvQovLyBAbm90ZSAgICAgICAgdjUuMeS/ruWkjeS4gOS4qmJ1ZwovLyBAbm90ZSAgICAgICAgdjUuMOebuOWFs+aOqOiNkOaooeWdl+i/m+S4gOatpeS8mOWMlu+8jOWOu+mZpOivvueoi+WIl+ihqAovLyBAbm90ZSAgICAgICAgdjQuMOWunueOsOWFjeeZu+W9leWkjeWItgovLyBAbm90ZSAgICAgICAgdjMuMOWunueOsOWOu+W5v+WRigovLyBAbm90ZSAgICAgICAgdjIuMeWujOWWhOWFjeeZu+W9leWxleW8gOivhOiuuuWKn+iDve+8jOivhOiuuuWPr+S7peiHquWKqOe/u+mhte+8jOeOsOWcqOS4jeS8muW8ueeZu+W9leeql+WPo+S6hgovLyBAbm90ZSAgICAgICAgdjIuMOWunueOsOWFjeeZu+W9leWxleW8gOivhOiuuuWKn+iDve+8jOivhOiuuuWPr+S7peiHquWKqOe/u+mhtQovLyBAbm90ZSAgICAgICAgdjEuMOWunueOsOi/h+a7pOS4i+i9veaooeWdl+WKn+iDvQovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9jZG4uc3RhdGljZmlsZS5vcmcvdnVlLzIuNi4xMS92dWUubWluLmpzCi8vIEByZXF1aXJlICAgICBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3Z1ZUAyLjYuMTIvZGlzdC92dWUubWluLmpzCi8vIEBncmFudCAgICBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgICAgR00uZ2V0VmFsdWUKLy8gQGdyYW50ICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICBHTS5zZXRWYWx1ZQovLyBAZ3JhbnQgICAgR01fYWRkU3R5bGUKLy8gQGdyYW50ICAgIEdNX2dldFJlc291cmNlVVJMCi8vIEBncmFudCAgICBHTV9saXN0VmFsdWVzCi8vIEBncmFudCAgICBHTV9nZXRSZXNvdXJjZVVybAovLyBAZ3JhbnQgICAgR00uZ2V0UmVzb3VyY2VVcmwKLy8gQGdyYW50ICAgIEdNX3htbGh0dHBSZXF1ZXN0Ci8vIEBncmFudCAgICBHTV9nZXRSZXNvdXJjZVRleHQKLy8gQGdyYW50ICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGdyYW50ICAgIEdNX3NldENsaXBib2FyZAovLyBAZ3JhbnQgICAgdW5zYWZlV2luZG93Ci8vID09L1VzZXJTY3JpcHQ9PQooZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgLy8g5b6F6ZqQ6JeP55qEY2xhc3PlkI3np7Dpm4blkIgKICAgIHZhciBjbGFzc05hbWVBcnJheSA9IFsndHlwZV9kb3dubG9hZCcsICdjb21tZW50LWxpc3QtYm94JywgJ3RleHQtY2VudGVyJywgJ2Qtbm9uZScsICdsb2dpbi1tYXJrJywndHlwZV9jb3Vyc2UnXTsKICAgIHZhciBpZE5hbWVBcnJheSA9IFsncmVjb21tZW5kQWRCb3gnXTsKICAgIHZhciBhZGRTdHlsZSA9IEdNX2FkZFN0eWxlOwogICAgdmFyIHNldENsaXBib2FyZCA9IEdNX3NldENsaXBib2FyZDsKCiAgICAvLyDpmpDol4/lhYPntKAKICAgIGZ1bmN0aW9uIGhpZGVFbGUoY2xhc3NOYW1lKSB7CiAgICAgICAgc3dpdGNoIChjbGFzc05hbWUpIHsKICAgICAgICAgICAgY2FzZSAndHlwZV9kb3dubG9hZCc6CiAgICAgICAgICAgICAgICBsZXQgaGlkZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuJyArIGNsYXNzTmFtZSk7CiAgICAgICAgICAgICAgICBpZiAoaGlkZUVsZW1lbnQpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhpZGVFbGVtZW50Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGVFbGVtZW50W2ldLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgJ2NvbW1lbnQtbGlzdC1ib3gnOgogICAgICAgICAgICAgICAgbGV0IGhpZGVFbGVtZW50MDEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIGNsYXNzTmFtZSk7CiAgICAgICAgICAgICAgICBpZiAoaGlkZUVsZW1lbnQwMSkgewogICAgICAgICAgICAgICAgICAgIGhpZGVFbGVtZW50MDEuc3R5bGUgPSAiIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlICd0ZXh0LWNlbnRlcic6CiAgICAgICAgICAgICAgICBhZGRTdHlsZSgiLnRleHQtY2VudGVye2Rpc3BsYXk6bm9uZTt9Iik7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAnZC1ub25lJzoKICAgICAgICAgICAgICAgIGFkZFN0eWxlKCIuZC1ub25le2Rpc3BsYXk6YmxvY2sgIWltcG9ydGFudDt9Iik7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAnbG9naW4tbWFyayc6CiAgICAgICAgICAgICAgICBhZGRTdHlsZSgiLmxvZ2luLW1hcmssI3Bhc3Nwb3J0Ym94e2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50O30iKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlICd0eXBlX2NvdXJzZSc6CiAgICAgICAgICAgICAgICBsZXQgaGlkZUVsZW1lbnQwMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy4nICsgY2xhc3NOYW1lKTsKICAgICAgICAgICAgICAgIGlmIChoaWRlRWxlbWVudDAyKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoaWRlRWxlbWVudDAyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGVFbGVtZW50MDJbaV0uc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CgogICAgLy8g6ZqQ6JeP5YWD57SgCiAgICBmdW5jdGlvbiBoaWRlRWxlQnlJZChpZE5hbWUpIHsKICAgICAgICBzd2l0Y2ggKGlkTmFtZSkgewogICAgICAgICAgICBjYXNlICdyZWNvbW1lbmRBZEJveCc6CiAgICAgICAgICAgICAgICBsZXQgaGlkZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjJyArIGlkTmFtZSk7CiAgICAgICAgICAgICAgICBpZiAoaGlkZUVsZW1lbnQpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhpZGVFbGVtZW50Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGVFbGVtZW50W2ldLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQoKICAgIC8v5a+55LqO5LiN5ZCM57G755qE5YWD57Sg77yM5YaZ5Liq5pa55rOV5p2l5LiA6LW35L+u5q2jY3Nz5qC35byPCiAgICBmdW5jdGlvbiByZW1vdmVFbGVtZW50cyhjbGFzc05hbWVBcnJheSkgewogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xhc3NOYW1lQXJyYXkubGVuZ3RoOyBpKyspIHsvL+aJuemHj+aJp+ihjOaTjeS9nAogICAgICAgICAgICBoaWRlRWxlKGNsYXNzTmFtZUFycmF5W2ldKTsKICAgICAgICB9CiAgICB9CgogICAgLy/lr7nkuo7kuI3lkIznsbvnmoTlhYPntKDvvIzlhpnkuKrmlrnms5XmnaXkuIDotbfkv67mraNjc3PmoLflvI8KICAgIGZ1bmN0aW9uIHJlbW92ZUVsZW1lbnRzQnlJZChpZE5hbWVBcnJheSkgewogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaWROYW1lQXJyYXkubGVuZ3RoOyBpKyspIHsvL+aJuemHj+aJp+ihjOaTjeS9nAogICAgICAgICAgICBoaWRlRWxlQnlJZChpZE5hbWVBcnJheVtpXSk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHNhZmVXYWl0RnVuYyhjbGFzc05hbWVBcnJheSwgY2FsbGJhY2tGdW5jLCB0aW1lKSB7CiAgICAgICAgdmFyIHRpbWVzID0gdGltZSB8fCA1MDsKICAgICAgICB2YXIgaWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaWQpOwogICAgICAgICAgICBjYWxsYmFja0Z1bmMoY2xhc3NOYW1lQXJyYXkpOwogICAgICAgIH0sIHRpbWVzKTsKICAgIH0KCiAgICAvL+aJk+WNsOiEmuacrOS/oeaBrwogICAgZnVuY3Rpb24gcHJpbnRTY3JpcHQoKSB7CiAgICAgICAgY29uc29sZS5sb2coInN3ZWV0LUNTRE7mlofnq6DpmIXor7vkvJjljJbvvIzov4fmu6Tnm7jlhbPmjqjojZDmqKHlnZfnmoTkuIvovb3pg6jliIYm5YWN55m75b2V5p+l55yL5YWo6YOo6K+E6K66JuWFjeeZu+W9leWkjeWItibljrvlub/lkYp+IikKICAgIH0KCiAgICBzYWZlV2FpdEZ1bmMoY2xhc3NOYW1lQXJyYXksIHJlbW92ZUVsZW1lbnRzKTsKICAgIHNhZmVXYWl0RnVuYyhpZE5hbWVBcnJheSwgcmVtb3ZlRWxlbWVudHNCeUlkKTsKICAgIHByaW50U2NyaXB0KCk7Cn0pKCk7","requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.11/vue.min.js","ts":1653206961178,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"vue.min.js","url":"https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js","ts":1652444172211,"mimetype":"text/javascript"},"source":""}]},{"name":"ÊùÄ‰ΩõËßÇÈü≥¬∑ÂÖ®ÁΩëVIPËßÜÈ¢ëÁ†¥Ëß£ÂÖçË¥πÁúã¬∑ÂÖ®ÁΩëÊúÄÂÖ®ÈùûVIPËßÜÈ¢ëÂéªÂπøÂëä¬∑ÊûÅÁÆÄÁâà","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://vip.1905.com/*","*://*.acfun.cn/*","*://*.iqiyi.com/*","*://*.bilibili.com/*","*://fun.tv/*","*://*.fun.tv/*","*://*.wasu.cn/*lay/*","*://*.wasu.cn/wap/*lay/*","*://*.le.com/*","*://*.mgtv.com/*","*://*.miguvideo.com/*","*://*.pptv.com/*","*://*.tv.sohu.com/v*","*://film.sohu.com/album/*","*://v.qq.com/x/*","*://v.qq.com/*/p/topic/*/*.html","*://m.v.qq.com/*","*://3g.v.qq.com/*","*://*.tudou.com/*","*://*.ixigua.com/*","*://*.youku.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1652060264459,"data":{}},"enabled":true,"position":22,"file_url":"https://greasyfork.org/scripts/429245-%E6%9D%80%E4%BD%9B%E8%A7%82%E9%9F%B3-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E7%A0%B4%E8%A7%A3%E5%85%8D%E8%B4%B9%E7%9C%8B-%E5%85%A8%E7%BD%91%E6%9C%80%E5%85%A8%E9%9D%9Evip%E8%A7%86%E9%A2%91%E5%8E%BB%E5%B9%BF%E5%91%8A-%E6%9E%81%E7%AE%80%E7%89%88/code/%E6%9D%80%E4%BD%9B%E8%A7%82%E9%9F%B3%C2%B7%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E7%A0%B4%E8%A7%A3%E5%85%8D%E8%B4%B9%E7%9C%8B%C2%B7%E5%85%A8%E7%BD%91%E6%9C%80%E5%85%A8%E9%9D%9EVIP%E8%A7%86%E9%A2%91%E5%8E%BB%E5%B9%BF%E5%91%8A%C2%B7%E6%9E%81%E7%AE%80%E7%89%88.user.js","uuid":"ba771abb-162c-4e2e-9b4f-2f3b5b969d24","source":""}]}